Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_161.jdk/Contents/Home/jre/lib/server/hsdis-amd64.dylib
Decoding compiled method 0x000000011841be50:
Code:
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Constants]
  # {method} {0x00000001136c6000} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000011841bfc0: mov    0x8(%rsi),%r10d
  0x000000011841bfc4: shl    $0x3,%r10
  0x000000011841bfc8: cmp    %rax,%r10
  0x000000011841bfcb: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011841bfd1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011841bfdc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011841bfe0: mov    %eax,-0x14000(%rsp)
  0x000000011841bfe7: push   %rbp
  0x000000011841bfe8: sub    $0x30,%rsp
  0x000000011841bfec: movabs $0x11388a180,%rax  ;   {metadata(method data for {method} {0x00000001136c6000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000011841bff6: mov    0xdc(%rax),%edi
  0x000000011841bffc: add    $0x8,%edi
  0x000000011841bfff: mov    %edi,0xdc(%rax)
  0x000000011841c005: movabs $0x1136c6000,%rax  ;   {metadata({method} {0x00000001136c6000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000011841c00f: and    $0x1ff8,%edi
  0x000000011841c015: cmp    $0x0,%edi
  0x000000011841c018: je     0x000000011841c151  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x000000011841c01e: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x000000011841c021: cmp    $0x0,%eax
  0x000000011841c024: movabs $0x11388a180,%rdi  ;   {metadata(method data for {method} {0x00000001136c6000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000011841c02e: movabs $0x108,%rbx
  0x000000011841c038: jne    0x000000011841c048
  0x000000011841c03e: movabs $0x118,%rbx
  0x000000011841c048: mov    (%rdi,%rbx,1),%rdx
  0x000000011841c04c: lea    0x1(%rdx),%rdx
  0x000000011841c050: mov    %rdx,(%rdi,%rbx,1)
  0x000000011841c054: jne    0x000000011841c145  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x000000011841c05a: mov    0xc(%rsi),%edi
  0x000000011841c05d: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x000000011841c061: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x000000011841c168
  0x000000011841c064: cmp    $0x0,%ebx
  0x000000011841c067: movabs $0x11388a180,%rdx  ;   {metadata(method data for {method} {0x00000001136c6000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000011841c071: movabs $0x128,%rcx
  0x000000011841c07b: jle    0x000000011841c08b
  0x000000011841c081: movabs $0x138,%rcx
  0x000000011841c08b: mov    (%rdx,%rcx,1),%r8
  0x000000011841c08f: lea    0x1(%r8),%r8
  0x000000011841c093: mov    %r8,(%rdx,%rcx,1)
  0x000000011841c097: jle    0x000000011841c145  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x000000011841c09d: mov    $0x0,%edx
  0x000000011841c0a2: jmpq   0x000000011841c10a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x000000011841c0a7: nop
  0x000000011841c0a8: movslq %edx,%rcx
  0x000000011841c0ab: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000011841c0b0: mov    %rax,%r8
  0x000000011841c0b3: shl    $0x5,%eax
  0x000000011841c0b6: sub    %r8d,%eax
  0x000000011841c0b9: add    %ecx,%eax
  0x000000011841c0bb: inc    %edx
  0x000000011841c0bd: movabs $0x11388a180,%rcx  ;   {metadata(method data for {method} {0x00000001136c6000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000011841c0c7: mov    0xe0(%rcx),%r8d
  0x000000011841c0ce: add    $0x8,%r8d
  0x000000011841c0d2: mov    %r8d,0xe0(%rcx)
  0x000000011841c0d9: movabs $0x1136c6000,%rcx  ;   {metadata({method} {0x00000001136c6000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000011841c0e3: and    $0xfff8,%r8d
  0x000000011841c0ea: cmp    $0x0,%r8d
  0x000000011841c0ee: je     0x000000011841c16d  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x000000011841c0f4: test   %eax,-0xb429ffa(%rip)        # 0x000000010cff2100
                                                ;   {poll}
  0x000000011841c0fa: movabs $0x11388a180,%rcx  ;   {metadata(method data for {method} {0x00000001136c6000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000011841c104: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x000000011841c10a: cmp    %ebx,%edx
  0x000000011841c10c: movabs $0x11388a180,%rcx  ;   {metadata(method data for {method} {0x00000001136c6000} 'hashCode' '()I' in 'java/lang/String')}
  0x000000011841c116: movabs $0x148,%r8
  0x000000011841c120: jge    0x000000011841c130
  0x000000011841c126: movabs $0x158,%r8
  0x000000011841c130: mov    (%rcx,%r8,1),%r9
  0x000000011841c134: lea    0x1(%r9),%r9
  0x000000011841c138: mov    %r9,(%rcx,%r8,1)
  0x000000011841c13c: jl     0x000000011841c0a8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000011841c142: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x000000011841c145: add    $0x30,%rsp
  0x000000011841c149: pop    %rbp
  0x000000011841c14a: test   %eax,-0xb42a050(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011841c150: retq   
  0x000000011841c151: mov    %rax,0x8(%rsp)
  0x000000011841c156: movq   $0xffffffffffffffff,(%rsp)
  0x000000011841c15e: callq  0x000000011841a2e0  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x000000011841c163: jmpq   0x000000011841c01e
  0x000000011841c168: callq  0x0000000118415c80  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x000000011841c16d: mov    %rcx,0x8(%rsp)
  0x000000011841c172: movq   $0x2d,(%rsp)
  0x000000011841c17a: callq  0x000000011841a2e0  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x000000011841c17f: jmpq   0x000000011841c0f4
  0x000000011841c184: nop
  0x000000011841c185: nop
  0x000000011841c186: mov    0x2a8(%r15),%rax
  0x000000011841c18d: movabs $0x0,%r10
  0x000000011841c197: mov    %r10,0x2a8(%r15)
  0x000000011841c19e: movabs $0x0,%r10
  0x000000011841c1a8: mov    %r10,0x2b0(%r15)
  0x000000011841c1af: add    $0x30,%rsp
  0x000000011841c1b3: pop    %rbp
  0x000000011841c1b4: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011841c1b9: hlt    
  0x000000011841c1ba: hlt    
  0x000000011841c1bb: hlt    
  0x000000011841c1bc: hlt    
  0x000000011841c1bd: hlt    
  0x000000011841c1be: hlt    
  0x000000011841c1bf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011841c1c0: callq  0x0000000118417b20  ;   {no_reloc}
  0x000000011841c1c5: mov    %rsp,-0x28(%rsp)
  0x000000011841c1ca: sub    $0x80,%rsp
  0x000000011841c1d1: mov    %rax,0x78(%rsp)
  0x000000011841c1d6: mov    %rcx,0x70(%rsp)
  0x000000011841c1db: mov    %rdx,0x68(%rsp)
  0x000000011841c1e0: mov    %rbx,0x60(%rsp)
  0x000000011841c1e5: mov    %rbp,0x50(%rsp)
  0x000000011841c1ea: mov    %rsi,0x48(%rsp)
  0x000000011841c1ef: mov    %rdi,0x40(%rsp)
  0x000000011841c1f4: mov    %r8,0x38(%rsp)
  0x000000011841c1f9: mov    %r9,0x30(%rsp)
  0x000000011841c1fe: mov    %r10,0x28(%rsp)
  0x000000011841c203: mov    %r11,0x20(%rsp)
  0x000000011841c208: mov    %r12,0x18(%rsp)
  0x000000011841c20d: mov    %r13,0x10(%rsp)
  0x000000011841c212: mov    %r14,0x8(%rsp)
  0x000000011841c217: mov    %r15,(%rsp)
  0x000000011841c21b: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011841c225: movabs $0x11841c1c5,%rsi  ;   {internal_word}
  0x000000011841c22f: mov    %rsp,%rdx
  0x000000011841c232: and    $0xfffffffffffffff0,%rsp
  0x000000011841c236: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011841c23b: hlt    
[Deopt Handler Code]
  0x000000011841c23c: movabs $0x11841c23c,%r10  ;   {section_word}
  0x000000011841c246: push   %r10
  0x000000011841c248: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011841c24d: hlt    
  0x000000011841c24e: hlt    
  0x000000011841c24f: hlt    
Decoding compiled method 0x0000000118427990:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001136c4db0} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000118427b00: mov    0x8(%rsi),%r10d
  0x0000000118427b04: shl    $0x3,%r10
  0x0000000118427b08: cmp    %rax,%r10
  0x0000000118427b0b: jne    0x0000000118361e60  ;   {runtime_call}
  0x0000000118427b11: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000118427b1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000118427b20: mov    %eax,-0x14000(%rsp)
  0x0000000118427b27: push   %rbp
  0x0000000118427b28: sub    $0x30,%rsp
  0x0000000118427b2c: mov    %rdx,%rdi
  0x0000000118427b2f: movabs $0x113845b10,%rax  ;   {metadata(method data for {method} {0x00000001136c4db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x0000000118427b39: mov    0xdc(%rax),%edx
  0x0000000118427b3f: add    $0x8,%edx
  0x0000000118427b42: mov    %edx,0xdc(%rax)
  0x0000000118427b48: movabs $0x1136c4db0,%rax  ;   {metadata({method} {0x00000001136c4db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x0000000118427b52: and    $0x1ff8,%edx
  0x0000000118427b58: cmp    $0x0,%edx
  0x0000000118427b5b: je     0x0000000118427c36  ;*iload_1
                                                ; - java.lang.String::charAt@0 (line 657)

  0x0000000118427b61: cmp    $0x0,%edi
  0x0000000118427b64: movabs $0x113845b10,%rax  ;   {metadata(method data for {method} {0x00000001136c4db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x0000000118427b6e: movabs $0x108,%rdx
  0x0000000118427b78: jl     0x0000000118427b88
  0x0000000118427b7e: movabs $0x118,%rdx
  0x0000000118427b88: mov    (%rax,%rdx,1),%rbx
  0x0000000118427b8c: lea    0x1(%rbx),%rbx
  0x0000000118427b90: mov    %rbx,(%rax,%rdx,1)
  0x0000000118427b94: jl     0x0000000118427bf6  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000118427b9a: mov    0xc(%rsi),%eax
  0x0000000118427b9d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000000118427ba1: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000118427c4d
  0x0000000118427ba4: cmp    %edx,%edi
  0x0000000118427ba6: movabs $0x113845b10,%rdx  ;   {metadata(method data for {method} {0x00000001136c4db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x0000000118427bb0: movabs $0x128,%rsi
  0x0000000118427bba: jl     0x0000000118427bca
  0x0000000118427bc0: movabs $0x138,%rsi
  0x0000000118427bca: mov    (%rdx,%rsi,1),%rbx
  0x0000000118427bce: lea    0x1(%rbx),%rbx
  0x0000000118427bd2: mov    %rbx,(%rdx,%rsi,1)
  0x0000000118427bd6: jge    0x0000000118427bf6  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000118427bdc: movslq %edi,%rdi
  0x0000000118427bdf: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000118427be4: and    $0xffff,%eax
  0x0000000118427bea: add    $0x30,%rsp
  0x0000000118427bee: pop    %rbp
  0x0000000118427bef: test   %eax,-0xb435af5(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x0000000118427bf5: retq                      ;*ireturn
                                                ; - java.lang.String::charAt@28 (line 660)

  0x0000000118427bf6: xchg   %ax,%ax
  0x0000000118427bf8: jmpq   0x0000000118427c61  ;   {no_reloc}
  0x0000000118427bfd: add    %al,(%rax)
  0x0000000118427bff: add    %al,(%rax)
  0x0000000118427c01: add    %ch,%cl
  0x0000000118427c03: add    %al,%fs:(%rax)
  0x0000000118427c06: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)

  0x0000000118427c09: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00000001136c4db0} 'charAt' '(I)C' in 'java/lang/String')}
  0x0000000118427c0c: adc    %bl,-0x7c(%rbx)
  0x0000000118427c0f: adc    (%rcx),%eax
  0x0000000118427c11: add    %al,(%rax)
  0x0000000118427c13: add    %cl,-0x7d(%rax)
  0x0000000118427c16: xchg   %cl,0x1(%rax)
  0x0000000118427c19: add    %al,(%rax)
  0x0000000118427c1b: add    %ecx,-0x75(%rax)
  0x0000000118427c1e: xlat   %ds:(%rbx)
  0x0000000118427c1f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)

  0x0000000118427c22: mov    %rax,0x20(%rsp)
  0x0000000118427c27: callq  0x00000001183620a0  ; OopMap{[32]=Oop off=300}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x0000000118427c2c: mov    0x20(%rsp),%rax
  0x0000000118427c31: jmpq   0x0000000118427ca0
  0x0000000118427c36: mov    %rax,0x8(%rsp)
  0x0000000118427c3b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000118427c43: callq  0x000000011841a2e0  ; OopMap{rsi=Oop off=328}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x0000000118427c48: jmpq   0x0000000118427b61
  0x0000000118427c4d: callq  0x0000000118415c80  ; OopMap{rax=Oop off=338}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000118427c52: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000118427c5c: mov    $0xa050f00,%eax
  0x0000000118427c61: callq  0x00000001184192e0  ; OopMap{off=358}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x0000000118427c66: jmp    0x0000000118427bf8
  0x0000000118427c68: nop
  0x0000000118427c69: nop
  0x0000000118427c6a: nop
  0x0000000118427c6b: mov    %rdx,%rdx
  0x0000000118427c6e: callq  0x0000000118416120  ; OopMap{off=371}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x0000000118427c73: jmp    0x0000000118427c07
  0x0000000118427c75: nop
  0x0000000118427c76: nop
  0x0000000118427c77: mov    0x2a8(%r15),%rax
  0x0000000118427c7e: movabs $0x0,%r10
  0x0000000118427c88: mov    %r10,0x2a8(%r15)
  0x0000000118427c8f: movabs $0x0,%r10
  0x0000000118427c99: mov    %r10,0x2b0(%r15)
  0x0000000118427ca0: add    $0x30,%rsp
  0x0000000118427ca4: pop    %rbp
  0x0000000118427ca5: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x0000000118427caa: hlt    
  0x0000000118427cab: hlt    
  0x0000000118427cac: hlt    
  0x0000000118427cad: hlt    
  0x0000000118427cae: hlt    
  0x0000000118427caf: hlt    
  0x0000000118427cb0: hlt    
  0x0000000118427cb1: hlt    
  0x0000000118427cb2: hlt    
  0x0000000118427cb3: hlt    
  0x0000000118427cb4: hlt    
  0x0000000118427cb5: hlt    
  0x0000000118427cb6: hlt    
  0x0000000118427cb7: hlt    
  0x0000000118427cb8: hlt    
  0x0000000118427cb9: hlt    
  0x0000000118427cba: hlt    
  0x0000000118427cbb: hlt    
  0x0000000118427cbc: hlt    
  0x0000000118427cbd: hlt    
  0x0000000118427cbe: hlt    
  0x0000000118427cbf: hlt    
[Stub Code]
  0x0000000118427cc0: nop                       ;   {no_reloc}
  0x0000000118427cc1: nop
  0x0000000118427cc2: nop
  0x0000000118427cc3: nop
  0x0000000118427cc4: nop
  0x0000000118427cc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000118427ccf: jmpq   0x0000000118427ccf  ;   {runtime_call}
[Exception Handler]
  0x0000000118427cd4: callq  0x0000000118417b20  ;   {runtime_call}
  0x0000000118427cd9: mov    %rsp,-0x28(%rsp)
  0x0000000118427cde: sub    $0x80,%rsp
  0x0000000118427ce5: mov    %rax,0x78(%rsp)
  0x0000000118427cea: mov    %rcx,0x70(%rsp)
  0x0000000118427cef: mov    %rdx,0x68(%rsp)
  0x0000000118427cf4: mov    %rbx,0x60(%rsp)
  0x0000000118427cf9: mov    %rbp,0x50(%rsp)
  0x0000000118427cfe: mov    %rsi,0x48(%rsp)
  0x0000000118427d03: mov    %rdi,0x40(%rsp)
  0x0000000118427d08: mov    %r8,0x38(%rsp)
  0x0000000118427d0d: mov    %r9,0x30(%rsp)
  0x0000000118427d12: mov    %r10,0x28(%rsp)
  0x0000000118427d17: mov    %r11,0x20(%rsp)
  0x0000000118427d1c: mov    %r12,0x18(%rsp)
  0x0000000118427d21: mov    %r13,0x10(%rsp)
  0x0000000118427d26: mov    %r14,0x8(%rsp)
  0x0000000118427d2b: mov    %r15,(%rsp)
  0x0000000118427d2f: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x0000000118427d39: movabs $0x118427cd9,%rsi  ;   {internal_word}
  0x0000000118427d43: mov    %rsp,%rdx
  0x0000000118427d46: and    $0xfffffffffffffff0,%rsp
  0x0000000118427d4a: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x0000000118427d4f: hlt    
[Deopt Handler Code]
  0x0000000118427d50: movabs $0x118427d50,%r10  ;   {section_word}
  0x0000000118427d5a: push   %r10
  0x0000000118427d5c: jmpq   0x0000000118363500  ;   {runtime_call}
  0x0000000118427d61: hlt    
  0x0000000118427d62: hlt    
  0x0000000118427d63: hlt    
  0x0000000118427d64: hlt    
  0x0000000118427d65: hlt    
  0x0000000118427d66: hlt    
  0x0000000118427d67: hlt    
Decoding compiled method 0x000000011841b510:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001136c4c60} 'length' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x000000011841b680: mov    0x8(%rsi),%r10d
  0x000000011841b684: shl    $0x3,%r10
  0x000000011841b688: cmp    %rax,%r10
  0x000000011841b68b: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011841b691: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011841b69c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011841b6a0: mov    %eax,-0x14000(%rsp)
  0x000000011841b6a7: push   %rbp
  0x000000011841b6a8: sub    $0x30,%rsp
  0x000000011841b6ac: movabs $0x1138af728,%rax  ;   {metadata(method data for {method} {0x00000001136c4c60} 'length' '()I' in 'java/lang/String')}
  0x000000011841b6b6: mov    0xdc(%rax),%edi
  0x000000011841b6bc: add    $0x8,%edi
  0x000000011841b6bf: mov    %edi,0xdc(%rax)
  0x000000011841b6c5: movabs $0x1136c4c60,%rax  ;   {metadata({method} {0x00000001136c4c60} 'length' '()I' in 'java/lang/String')}
  0x000000011841b6cf: and    $0x1ff8,%edi
  0x000000011841b6d5: cmp    $0x0,%edi
  0x000000011841b6d8: je     0x000000011841b6f4  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x000000011841b6de: mov    0xc(%rsi),%eax
  0x000000011841b6e1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x000000011841b6e5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x000000011841b708
  0x000000011841b6e8: add    $0x30,%rsp
  0x000000011841b6ec: pop    %rbp
  0x000000011841b6ed: test   %eax,-0xb4295f3(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011841b6f3: retq   
  0x000000011841b6f4: mov    %rax,0x8(%rsp)
  0x000000011841b6f9: movq   $0xffffffffffffffff,(%rsp)
  0x000000011841b701: callq  0x000000011841a2e0  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x000000011841b706: jmp    0x000000011841b6de
  0x000000011841b708: callq  0x0000000118415c80  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x000000011841b70d: nop
  0x000000011841b70e: nop
  0x000000011841b70f: mov    0x2a8(%r15),%rax
  0x000000011841b716: movabs $0x0,%r10
  0x000000011841b720: mov    %r10,0x2a8(%r15)
  0x000000011841b727: movabs $0x0,%r10
  0x000000011841b731: mov    %r10,0x2b0(%r15)
  0x000000011841b738: add    $0x30,%rsp
  0x000000011841b73c: pop    %rbp
  0x000000011841b73d: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011841b742: hlt    
  0x000000011841b743: hlt    
  0x000000011841b744: hlt    
  0x000000011841b745: hlt    
  0x000000011841b746: hlt    
  0x000000011841b747: hlt    
  0x000000011841b748: hlt    
  0x000000011841b749: hlt    
  0x000000011841b74a: hlt    
  0x000000011841b74b: hlt    
  0x000000011841b74c: hlt    
  0x000000011841b74d: hlt    
  0x000000011841b74e: hlt    
  0x000000011841b74f: hlt    
  0x000000011841b750: hlt    
  0x000000011841b751: hlt    
  0x000000011841b752: hlt    
  0x000000011841b753: hlt    
  0x000000011841b754: hlt    
  0x000000011841b755: hlt    
  0x000000011841b756: hlt    
  0x000000011841b757: hlt    
  0x000000011841b758: hlt    
  0x000000011841b759: hlt    
  0x000000011841b75a: hlt    
  0x000000011841b75b: hlt    
  0x000000011841b75c: hlt    
  0x000000011841b75d: hlt    
  0x000000011841b75e: hlt    
  0x000000011841b75f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011841b760: callq  0x0000000118417b20  ;   {no_reloc}
  0x000000011841b765: mov    %rsp,-0x28(%rsp)
  0x000000011841b76a: sub    $0x80,%rsp
  0x000000011841b771: mov    %rax,0x78(%rsp)
  0x000000011841b776: mov    %rcx,0x70(%rsp)
  0x000000011841b77b: mov    %rdx,0x68(%rsp)
  0x000000011841b780: mov    %rbx,0x60(%rsp)
  0x000000011841b785: mov    %rbp,0x50(%rsp)
  0x000000011841b78a: mov    %rsi,0x48(%rsp)
  0x000000011841b78f: mov    %rdi,0x40(%rsp)
  0x000000011841b794: mov    %r8,0x38(%rsp)
  0x000000011841b799: mov    %r9,0x30(%rsp)
  0x000000011841b79e: mov    %r10,0x28(%rsp)
  0x000000011841b7a3: mov    %r11,0x20(%rsp)
  0x000000011841b7a8: mov    %r12,0x18(%rsp)
  0x000000011841b7ad: mov    %r13,0x10(%rsp)
  0x000000011841b7b2: mov    %r14,0x8(%rsp)
  0x000000011841b7b7: mov    %r15,(%rsp)
  0x000000011841b7bb: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011841b7c5: movabs $0x11841b765,%rsi  ;   {internal_word}
  0x000000011841b7cf: mov    %rsp,%rdx
  0x000000011841b7d2: and    $0xfffffffffffffff0,%rsp
  0x000000011841b7d6: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011841b7db: hlt    
[Deopt Handler Code]
  0x000000011841b7dc: movabs $0x11841b7dc,%r10  ;   {section_word}
  0x000000011841b7e6: push   %r10
  0x000000011841b7e8: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011841b7ed: hlt    
  0x000000011841b7ee: hlt    
  0x000000011841b7ef: hlt    
Decoding compiled method 0x000000011841d410:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011841d5a0: mov    0x8(%rsi),%r10d
  0x000000011841d5a4: shl    $0x3,%r10
  0x000000011841d5a8: cmp    %rax,%r10
  0x000000011841d5ab: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011841d5b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011841d5bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011841d5c0: mov    %eax,-0x14000(%rsp)
  0x000000011841d5c7: push   %rbp
  0x000000011841d5c8: sub    $0x30,%rsp
  0x000000011841d5cc: movabs $0x1138b4418,%rax  ;   {metadata(method data for {method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d5d6: mov    0xdc(%rax),%edi
  0x000000011841d5dc: add    $0x8,%edi
  0x000000011841d5df: mov    %edi,0xdc(%rax)
  0x000000011841d5e5: movabs $0x1136c6180,%rax  ;   {metadata({method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d5ef: and    $0x1ff8,%edi
  0x000000011841d5f5: cmp    $0x0,%edi
  0x000000011841d5f8: je     0x000000011841d801  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x000000011841d5fe: mov    0xc(%rsi),%eax
  0x000000011841d601: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x000000011841d605: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x000000011841d818
  0x000000011841d608: cmp    $0x0,%ecx
  0x000000011841d60b: movabs $0x1138b4418,%rbx  ;   {metadata(method data for {method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d615: movabs $0x108,%r8
  0x000000011841d61f: jge    0x000000011841d62f
  0x000000011841d625: movabs $0x118,%r8
  0x000000011841d62f: mov    (%rbx,%r8,1),%r9
  0x000000011841d633: lea    0x1(%r9),%r9
  0x000000011841d637: mov    %r9,(%rbx,%r8,1)
  0x000000011841d63b: jge    0x000000011841d65b  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000011841d641: movabs $0x1138b4418,%rcx  ;   {metadata(method data for {method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d64b: incl   0x128(%rcx)
  0x000000011841d651: mov    $0x0,%ecx
  0x000000011841d656: jmpq   0x000000011841d693  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x000000011841d65b: cmp    %edi,%ecx
  0x000000011841d65d: movabs $0x1138b4418,%rbx  ;   {metadata(method data for {method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d667: movabs $0x140,%r8
  0x000000011841d671: jl     0x000000011841d681
  0x000000011841d677: movabs $0x150,%r8
  0x000000011841d681: mov    (%rbx,%r8,1),%r9
  0x000000011841d685: lea    0x1(%r9),%r9
  0x000000011841d689: mov    %r9,(%rbx,%r8,1)
  0x000000011841d68d: jge    0x000000011841d7f0  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x000000011841d693: cmp    $0x10000,%edx
  0x000000011841d699: movabs $0x1138b4418,%rbx  ;   {metadata(method data for {method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d6a3: movabs $0x160,%r8
  0x000000011841d6ad: jge    0x000000011841d6bd
  0x000000011841d6b3: movabs $0x170,%r8
  0x000000011841d6bd: mov    (%rbx,%r8,1),%r9
  0x000000011841d6c1: lea    0x1(%r9),%r9
  0x000000011841d6c5: mov    %r9,(%rbx,%r8,1)
  0x000000011841d6c9: jge    0x000000011841d7c8
  0x000000011841d6cf: jmpq   0x000000011841d76b  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000000011841d6d4: nopl   0x0(%rax)
  0x000000011841d6d8: movslq %ecx,%rsi
  0x000000011841d6db: cmp    0xc(%rax),%ecx
  0x000000011841d6de: jae    0x000000011841d81d
  0x000000011841d6e4: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000011841d6e9: cmp    %edx,%esi
  0x000000011841d6eb: movabs $0x1138b4418,%rsi  ;   {metadata(method data for {method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d6f5: movabs $0x1a0,%rbx
  0x000000011841d6ff: jne    0x000000011841d70f
  0x000000011841d705: movabs $0x1b0,%rbx
  0x000000011841d70f: mov    (%rsi,%rbx,1),%r8
  0x000000011841d713: lea    0x1(%r8),%r8
  0x000000011841d717: mov    %r8,(%rsi,%rbx,1)
  0x000000011841d71b: je     0x000000011841d7a8  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000011841d721: inc    %ecx
  0x000000011841d723: movabs $0x1138b4418,%rsi  ;   {metadata(method data for {method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d72d: mov    0xe0(%rsi),%ebx
  0x000000011841d733: add    $0x8,%ebx
  0x000000011841d736: mov    %ebx,0xe0(%rsi)
  0x000000011841d73c: movabs $0x1136c6180,%rsi  ;   {metadata({method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d746: and    $0xfff8,%ebx
  0x000000011841d74c: cmp    $0x0,%ebx
  0x000000011841d74f: je     0x000000011841d826  ; OopMap{rax=Oop off=437}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x000000011841d755: test   %eax,-0xb42b65b(%rip)        # 0x000000010cff2100
                                                ;   {poll}
  0x000000011841d75b: movabs $0x1138b4418,%rsi  ;   {metadata(method data for {method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d765: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x000000011841d76b: cmp    %edi,%ecx
  0x000000011841d76d: movabs $0x1138b4418,%rsi  ;   {metadata(method data for {method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d777: movabs $0x180,%rbx
  0x000000011841d781: jge    0x000000011841d791
  0x000000011841d787: movabs $0x190,%rbx
  0x000000011841d791: mov    (%rsi,%rbx,1),%r8
  0x000000011841d795: lea    0x1(%r8),%r8
  0x000000011841d799: mov    %r8,(%rsi,%rbx,1)
  0x000000011841d79d: jge    0x000000011841d7b7
  0x000000011841d7a3: jmpq   0x000000011841d6d8  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000011841d7a8: mov    %rcx,%rax
  0x000000011841d7ab: add    $0x30,%rsp
  0x000000011841d7af: pop    %rbp
  0x000000011841d7b0: test   %eax,-0xb42b6b6(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011841d7b6: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x000000011841d7b7: mov    $0xffffffff,%eax
  0x000000011841d7bc: add    $0x30,%rsp
  0x000000011841d7c0: pop    %rbp
  0x000000011841d7c1: test   %eax,-0xb42b6c7(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011841d7c7: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x000000011841d7c8: mov    %rsi,%rdi
  0x000000011841d7cb: movabs $0x1138b4418,%rbx  ;   {metadata(method data for {method} {0x00000001136c6180} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000011841d7d5: addq   $0x1,0x1d8(%rbx)
  0x000000011841d7dd: nop
  0x000000011841d7de: nop
  0x000000011841d7df: callq  0x00000001183620a0  ; OopMap{off=580}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x000000011841d7e4: add    $0x30,%rsp
  0x000000011841d7e8: pop    %rbp
  0x000000011841d7e9: test   %eax,-0xb42b6ef(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011841d7ef: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x000000011841d7f0: mov    $0xffffffff,%eax
  0x000000011841d7f5: add    $0x30,%rsp
  0x000000011841d7f9: pop    %rbp
  0x000000011841d7fa: test   %eax,-0xb42b700(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011841d800: retq   
  0x000000011841d801: mov    %rax,0x8(%rsp)
  0x000000011841d806: movq   $0xffffffffffffffff,(%rsp)
  0x000000011841d80e: callq  0x000000011841a2e0  ; OopMap{rsi=Oop off=627}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x000000011841d813: jmpq   0x000000011841d5fe
  0x000000011841d818: callq  0x0000000118415c80  ; OopMap{rsi=Oop rax=Oop off=637}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000011841d81d: mov    %rcx,(%rsp)
  0x000000011841d821: callq  0x0000000118388240  ; OopMap{rax=Oop off=646}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x000000011841d826: mov    %rsi,0x8(%rsp)
  0x000000011841d82b: movq   $0x3a,(%rsp)
  0x000000011841d833: callq  0x000000011841a2e0  ; OopMap{rax=Oop off=664}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x000000011841d838: jmpq   0x000000011841d755
  0x000000011841d83d: nop
  0x000000011841d83e: nop
  0x000000011841d83f: mov    0x2a8(%r15),%rax
  0x000000011841d846: movabs $0x0,%r10
  0x000000011841d850: mov    %r10,0x2a8(%r15)
  0x000000011841d857: movabs $0x0,%r10
  0x000000011841d861: mov    %r10,0x2b0(%r15)
  0x000000011841d868: add    $0x30,%rsp
  0x000000011841d86c: pop    %rbp
  0x000000011841d86d: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011841d872: hlt    
  0x000000011841d873: hlt    
  0x000000011841d874: hlt    
  0x000000011841d875: hlt    
  0x000000011841d876: hlt    
  0x000000011841d877: hlt    
  0x000000011841d878: hlt    
  0x000000011841d879: hlt    
  0x000000011841d87a: hlt    
  0x000000011841d87b: hlt    
  0x000000011841d87c: hlt    
  0x000000011841d87d: hlt    
  0x000000011841d87e: hlt    
  0x000000011841d87f: hlt    
[Stub Code]
  0x000000011841d880: nop                       ;   {no_reloc}
  0x000000011841d881: nop
  0x000000011841d882: nop
  0x000000011841d883: nop
  0x000000011841d884: nop
  0x000000011841d885: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011841d88f: jmpq   0x000000011841d88f  ;   {runtime_call}
[Exception Handler]
  0x000000011841d894: callq  0x0000000118417b20  ;   {runtime_call}
  0x000000011841d899: mov    %rsp,-0x28(%rsp)
  0x000000011841d89e: sub    $0x80,%rsp
  0x000000011841d8a5: mov    %rax,0x78(%rsp)
  0x000000011841d8aa: mov    %rcx,0x70(%rsp)
  0x000000011841d8af: mov    %rdx,0x68(%rsp)
  0x000000011841d8b4: mov    %rbx,0x60(%rsp)
  0x000000011841d8b9: mov    %rbp,0x50(%rsp)
  0x000000011841d8be: mov    %rsi,0x48(%rsp)
  0x000000011841d8c3: mov    %rdi,0x40(%rsp)
  0x000000011841d8c8: mov    %r8,0x38(%rsp)
  0x000000011841d8cd: mov    %r9,0x30(%rsp)
  0x000000011841d8d2: mov    %r10,0x28(%rsp)
  0x000000011841d8d7: mov    %r11,0x20(%rsp)
  0x000000011841d8dc: mov    %r12,0x18(%rsp)
  0x000000011841d8e1: mov    %r13,0x10(%rsp)
  0x000000011841d8e6: mov    %r14,0x8(%rsp)
  0x000000011841d8eb: mov    %r15,(%rsp)
  0x000000011841d8ef: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011841d8f9: movabs $0x11841d899,%rsi  ;   {internal_word}
  0x000000011841d903: mov    %rsp,%rdx
  0x000000011841d906: and    $0xfffffffffffffff0,%rsp
  0x000000011841d90a: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011841d90f: hlt    
[Deopt Handler Code]
  0x000000011841d910: movabs $0x11841d910,%r10  ;   {section_word}
  0x000000011841d91a: push   %r10
  0x000000011841d91c: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011841d921: hlt    
  0x000000011841d922: hlt    
  0x000000011841d923: hlt    
  0x000000011841d924: hlt    
  0x000000011841d925: hlt    
  0x000000011841d926: hlt    
  0x000000011841d927: hlt    
Decoding compiled method 0x000000011841cc90:
Code:
[Entry Point]
  # {method} {0x00000001136da930} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x000000011841ce00: mov    0x8(%rsi),%r10d
  0x000000011841ce04: shl    $0x3,%r10
  0x000000011841ce08: cmp    %r10,%rax
  0x000000011841ce0b: je     0x000000011841ce18
  0x000000011841ce11: jmpq   0x0000000118361e60  ;   {runtime_call}
  0x000000011841ce16: xchg   %ax,%ax
[Verified Entry Point]
  0x000000011841ce18: mov    %eax,-0x14000(%rsp)
  0x000000011841ce1f: push   %rbp
  0x000000011841ce20: mov    %rsp,%rbp
  0x000000011841ce23: sub    $0x50,%rsp
  0x000000011841ce27: mov    %r9,(%rsp)
  0x000000011841ce2b: mov    %r8,%r9
  0x000000011841ce2e: mov    %rcx,0x18(%rsp)
  0x000000011841ce33: cmp    $0x0,%rcx
  0x000000011841ce37: lea    0x18(%rsp),%r8
  0x000000011841ce3c: cmove  0x18(%rsp),%r8
  0x000000011841ce42: mov    %rdx,%rcx
  0x000000011841ce45: mov    %rsi,0x8(%rsp)
  0x000000011841ce4a: cmp    $0x0,%rsi
  0x000000011841ce4e: lea    0x8(%rsp),%rdx
  0x000000011841ce53: cmove  0x8(%rsp),%rdx
  0x000000011841ce59: movabs $0x795580c78,%r14  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000011841ce63: mov    %r14,0x38(%rsp)
  0x000000011841ce68: lea    0x38(%rsp),%r14
  0x000000011841ce6d: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x000000011841ce70: movabs $0x11841ce70,%r10  ;   {section_word}
  0x000000011841ce7a: mov    %r10,0x1e0(%r15)
  0x000000011841ce81: mov    %rsp,0x1d8(%r15)
  0x000000011841ce88: cmpb   $0x0,-0xa32f245(%rip)        # 0x000000010e0edc4a
                                                ;   {external_word}
  0x000000011841ce8f: je     0x000000011841ced3
  0x000000011841ce95: push   %rsi
  0x000000011841ce96: push   %rdx
  0x000000011841ce97: push   %rcx
  0x000000011841ce98: push   %r8
  0x000000011841ce9a: push   %r9
  0x000000011841ce9c: movabs $0x1136da930,%rsi  ;   {metadata({method} {0x00000001136da930} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x000000011841cea6: mov    %r15,%rdi
  0x000000011841cea9: test   $0xf,%esp
  0x000000011841ceaf: je     0x000000011841cec7
  0x000000011841ceb5: sub    $0x8,%rsp
  0x000000011841ceb9: callq  0x000000010dceb32e  ;   {runtime_call}
  0x000000011841cebe: add    $0x8,%rsp
  0x000000011841cec2: jmpq   0x000000011841cecc
  0x000000011841cec7: callq  0x000000010dceb32e  ;   {runtime_call}
  0x000000011841cecc: pop    %r9
  0x000000011841cece: pop    %r8
  0x000000011841ced0: pop    %rcx
  0x000000011841ced1: pop    %rdx
  0x000000011841ced2: pop    %rsi
  0x000000011841ced3: lea    0x1f8(%r15),%rdi
  0x000000011841ceda: movl   $0x4,0x270(%r15)
  0x000000011841cee5: callq  0x000000010db45a64  ;   {runtime_call}
  0x000000011841ceea: vzeroupper 
  0x000000011841ceed: movl   $0x5,0x270(%r15)
  0x000000011841cef8: lock addl $0x0,(%rsp)
  0x000000011841cefd: cmpl   $0x0,-0xa324917(%rip)        # 0x000000010e0f85f0
                                                ;   {external_word}
  0x000000011841cf07: jne    0x000000011841cf1b
  0x000000011841cf0d: cmpl   $0x0,0x30(%r15)
  0x000000011841cf15: je     0x000000011841cf34
  0x000000011841cf1b: mov    %r15,%rdi
  0x000000011841cf1e: mov    %rsp,%r12
  0x000000011841cf21: sub    $0x0,%rsp
  0x000000011841cf25: and    $0xfffffffffffffff0,%rsp
  0x000000011841cf29: callq  0x000000010dd6e07a  ;   {runtime_call}
  0x000000011841cf2e: mov    %r12,%rsp
  0x000000011841cf31: xor    %r12,%r12
  0x000000011841cf34: movl   $0x8,0x270(%r15)
  0x000000011841cf3f: cmpl   $0x1,0x29c(%r15)
  0x000000011841cf4a: je     0x000000011841cfd2
  0x000000011841cf50: cmpb   $0x0,-0xa32f30d(%rip)        # 0x000000010e0edc4a
                                                ;   {external_word}
  0x000000011841cf57: je     0x000000011841cf8d
  0x000000011841cf5d: movabs $0x1136da930,%rsi  ;   {metadata({method} {0x00000001136da930} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x000000011841cf67: mov    %r15,%rdi
  0x000000011841cf6a: test   $0xf,%esp
  0x000000011841cf70: je     0x000000011841cf88
  0x000000011841cf76: sub    $0x8,%rsp
  0x000000011841cf7a: callq  0x000000010dceb2a0  ;   {runtime_call}
  0x000000011841cf7f: add    $0x8,%rsp
  0x000000011841cf83: jmpq   0x000000011841cf8d
  0x000000011841cf88: callq  0x000000010dceb2a0  ;   {runtime_call}
  0x000000011841cf8d: movabs $0x0,%r10
  0x000000011841cf97: mov    %r10,0x1d8(%r15)
  0x000000011841cf9e: movabs $0x0,%r10
  0x000000011841cfa8: mov    %r10,0x1e0(%r15)
  0x000000011841cfaf: mov    0x38(%r15),%rcx
  0x000000011841cfb3: movl   $0x0,0x100(%rcx)
  0x000000011841cfbd: leaveq 
  0x000000011841cfbe: cmpq   $0x0,0x8(%r15)
  0x000000011841cfc6: jne    0x000000011841cfcd
  0x000000011841cfcc: retq   
  0x000000011841cfcd: jmpq   Stub::forward exception  ;   {runtime_call}
  0x000000011841cfd2: mov    %rsp,%r12
  0x000000011841cfd5: sub    $0x0,%rsp
  0x000000011841cfd9: and    $0xfffffffffffffff0,%rsp
  0x000000011841cfdd: callq  0x000000010dce9074  ;   {runtime_call}
  0x000000011841cfe2: mov    %r12,%rsp
  0x000000011841cfe5: xor    %r12,%r12
  0x000000011841cfe8: jmpq   0x000000011841cf50
  0x000000011841cfed: hlt    
  0x000000011841cfee: hlt    
  0x000000011841cfef: hlt    
Decoding compiled method 0x000000011841f390:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000113735810} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x000000011841f520: mov    0x8(%rsi),%r10d
  0x000000011841f524: shl    $0x3,%r10
  0x000000011841f528: cmp    %rax,%r10
  0x000000011841f52b: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011841f531: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011841f53c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011841f540: mov    %eax,-0x14000(%rsp)
  0x000000011841f547: push   %rbp
  0x000000011841f548: sub    $0xa0,%rsp
  0x000000011841f54f: movabs $0x1138c0f20,%rdi  ;   {metadata(method data for {method} {0x0000000113735810} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000011841f559: mov    0xdc(%rdi),%ebx
  0x000000011841f55f: add    $0x8,%ebx
  0x000000011841f562: mov    %ebx,0xdc(%rdi)
  0x000000011841f568: movabs $0x113735810,%rdi  ;   {metadata({method} {0x0000000113735810} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000011841f572: and    $0x1ff8,%ebx
  0x000000011841f578: cmp    $0x0,%ebx
  0x000000011841f57b: je     0x000000011841f82f  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x000000011841f581: mov    0x10(%rsi),%edi
  0x000000011841f584: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x000000011841f588: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x000000011841f846
  0x000000011841f58b: mov    %rdx,%rax
  0x000000011841f58e: sub    %ebx,%eax
  0x000000011841f590: cmp    $0x0,%eax
  0x000000011841f593: movabs $0x1138c0f20,%rax  ;   {metadata(method data for {method} {0x0000000113735810} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000011841f59d: movabs $0x108,%rcx
  0x000000011841f5a7: jle    0x000000011841f5b7
  0x000000011841f5ad: movabs $0x118,%rcx
  0x000000011841f5b7: mov    (%rax,%rcx,1),%r8
  0x000000011841f5bb: lea    0x1(%r8),%r8
  0x000000011841f5bf: mov    %r8,(%rax,%rcx,1)
  0x000000011841f5c3: jle    0x000000011841f820  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x000000011841f5c9: mov    %ebx,0x78(%rsp)
  0x000000011841f5cd: mov    %rdi,0x80(%rsp)
  0x000000011841f5d5: mov    %rsi,%rax
  0x000000011841f5d8: movabs $0x1138c0f20,%rcx  ;   {metadata(method data for {method} {0x0000000113735810} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000011841f5e2: addq   $0x1,0x128(%rcx)
  0x000000011841f5ea: mov    %rsi,%rax
  0x000000011841f5ed: mov    %rax,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000011841f5f0: mov    %rax,0x88(%rsp)
  0x000000011841f5f8: nop
  0x000000011841f5f9: nop
  0x000000011841f5fa: nop
  0x000000011841f5fb: nop
  0x000000011841f5fc: nop
  0x000000011841f5fd: nop
  0x000000011841f5fe: nop
  0x000000011841f5ff: callq  0x00000001183620a0  ; OopMap{[128]=Oop [136]=Oop off=228}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x000000011841f604: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000011841f607: movabs $0x1138c0f20,%rbx  ;   {metadata(method data for {method} {0x0000000113735810} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000011841f611: addq   $0x1,0x138(%rbx)
  0x000000011841f619: movabs $0x1138c1300,%rbx  ;   {metadata(method data for {method} {0x00000001137db168} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000011841f623: mov    0xdc(%rbx),%edx
  0x000000011841f629: add    $0x8,%edx
  0x000000011841f62c: mov    %edx,0xdc(%rbx)
  0x000000011841f632: movabs $0x1137db168,%rbx  ;   {metadata({method} {0x00000001137db168} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000011841f63c: and    $0x7ffff8,%edx
  0x000000011841f642: cmp    $0x0,%edx
  0x000000011841f645: je     0x000000011841f84b
  0x000000011841f64b: mov    %r8,%rbx
  0x000000011841f64e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011841f658: movslq %ebx,%rbx
  0x000000011841f65b: mov    %rbx,%rdi
  0x000000011841f65e: cmp    $0xffffff,%rbx
  0x000000011841f665: ja     0x000000011841f862
  0x000000011841f66b: movabs $0x17,%rsi
  0x000000011841f675: lea    (%rsi,%rbx,2),%rsi
  0x000000011841f679: and    $0xfffffffffffffff8,%rsi
  0x000000011841f67d: mov    0x60(%r15),%rax
  0x000000011841f681: lea    (%rax,%rsi,1),%rsi
  0x000000011841f685: cmp    0x70(%r15),%rsi
  0x000000011841f689: ja     0x000000011841f862
  0x000000011841f68f: mov    %rsi,0x60(%r15)
  0x000000011841f693: sub    %rax,%rsi
  0x000000011841f696: movq   $0x1,(%rax)
  0x000000011841f69d: mov    %rdx,%rcx
  0x000000011841f6a0: shr    $0x3,%rcx
  0x000000011841f6a4: mov    %ecx,0x8(%rax)
  0x000000011841f6a7: mov    %ebx,0xc(%rax)
  0x000000011841f6aa: sub    $0x10,%rsi
  0x000000011841f6ae: je     0x000000011841f6c5
  0x000000011841f6b4: xor    %rbx,%rbx
  0x000000011841f6b7: shr    $0x3,%rsi
  0x000000011841f6bb: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011841f6c0: dec    %rsi
  0x000000011841f6c3: jne    0x000000011841f6bb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000011841f6c5: movabs $0x1138c1300,%rsi  ;   {metadata(method data for {method} {0x00000001137db168} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000011841f6cf: addq   $0x1,0x108(%rsi)
  0x000000011841f6d7: movabs $0x113892170,%rsi  ;   {metadata(method data for {method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x000000011841f6e1: mov    0xdc(%rsi),%edx
  0x000000011841f6e7: add    $0x8,%edx
  0x000000011841f6ea: mov    %edx,0xdc(%rsi)
  0x000000011841f6f0: movabs $0x1137b6a20,%rsi  ;   {metadata({method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x000000011841f6fa: and    $0x7ffff8,%edx
  0x000000011841f700: cmp    $0x0,%edx
  0x000000011841f703: je     0x000000011841f86c
  0x000000011841f709: mov    0x78(%rsp),%ebx
  0x000000011841f70d: cmp    %r8d,%ebx
  0x000000011841f710: movabs $0x113892170,%rsi  ;   {metadata(method data for {method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x000000011841f71a: movabs $0x108,%rdx
  0x000000011841f724: jg     0x000000011841f734
  0x000000011841f72a: movabs $0x118,%rdx
  0x000000011841f734: mov    (%rsi,%rdx,1),%rcx
  0x000000011841f738: lea    0x1(%rcx),%rcx
  0x000000011841f73c: mov    %rcx,(%rsi,%rdx,1)
  0x000000011841f740: jg     0x000000011841f75b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000011841f746: movabs $0x113892170,%rsi  ;   {metadata(method data for {method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x000000011841f750: incl   0x128(%rsi)
  0x000000011841f756: jmpq   0x000000011841f75e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000011841f75b: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000011841f75e: mov    0x80(%rsp),%rdi
  0x000000011841f766: movabs $0x1138c1300,%rsi  ;   {metadata(method data for {method} {0x00000001137db168} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000011841f770: addq   $0x1,0x118(%rsi)
  0x000000011841f778: mov    %rdi,%rsi
  0x000000011841f77b: mov    $0x0,%edx
  0x000000011841f780: mov    %rax,%rcx
  0x000000011841f783: mov    $0x0,%r8d
  0x000000011841f789: mov    %rbx,%r9
  0x000000011841f78c: mov    %rax,0x90(%rsp)
  0x000000011841f794: lea    (%rdx,%r9,1),%rdi
  0x000000011841f798: cmp    0xc(%rsi),%edi
  0x000000011841f79b: ja     0x000000011841f883
  0x000000011841f7a1: lea    (%r8,%r9,1),%rdi
  0x000000011841f7a5: cmp    0xc(%rcx),%edi
  0x000000011841f7a8: ja     0x000000011841f883
  0x000000011841f7ae: test   %r9d,%r9d
  0x000000011841f7b1: jl     0x000000011841f883
  0x000000011841f7b7: je     0x000000011841f7f3
  0x000000011841f7bd: movslq %edx,%rdx
  0x000000011841f7c0: movslq %r8d,%r8
  0x000000011841f7c3: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000011841f7c8: lea    0x10(%rcx,%r8,2),%rsi
  0x000000011841f7cd: mov    %r9,%rdx
  0x000000011841f7d0: test   $0xf,%esp
  0x000000011841f7d6: je     0x000000011841f7ee
  0x000000011841f7dc: sub    $0x8,%rsp
  0x000000011841f7e0: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000011841f7e5: add    $0x8,%rsp
  0x000000011841f7e9: jmpq   0x000000011841f7f3
  0x000000011841f7ee: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000011841f7f3: mov    0x90(%rsp),%rax
  0x000000011841f7fb: mov    0x88(%rsp),%rsi
  0x000000011841f803: mov    %rax,%r10
  0x000000011841f806: shr    $0x3,%r10
  0x000000011841f80a: mov    %r10d,0x10(%rsi)
  0x000000011841f80e: shr    $0x9,%rsi
  0x000000011841f812: movabs $0x10b1ed000,%rdi
  0x000000011841f81c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x000000011841f820: add    $0xa0,%rsp
  0x000000011841f827: pop    %rbp
  0x000000011841f828: test   %eax,-0xb42d72e(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011841f82e: retq   
  0x000000011841f82f: mov    %rdi,0x8(%rsp)
  0x000000011841f834: movq   $0xffffffffffffffff,(%rsp)
  0x000000011841f83c: callq  0x000000011841a2e0  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x000000011841f841: jmpq   0x000000011841f581
  0x000000011841f846: callq  0x0000000118415c80  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000011841f84b: mov    %rbx,0x8(%rsp)
  0x000000011841f850: movq   $0xffffffffffffffff,(%rsp)
  0x000000011841f858: callq  0x000000011841a2e0  ; OopMap{[128]=Oop [136]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000011841f85d: jmpq   0x000000011841f64b
  0x000000011841f862: callq  0x0000000118416ce0  ; OopMap{[128]=Oop [136]=Oop off=839}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000011841f867: jmpq   0x000000011841f6c5
  0x000000011841f86c: mov    %rsi,0x8(%rsp)
  0x000000011841f871: movq   $0xffffffffffffffff,(%rsp)
  0x000000011841f879: callq  0x000000011841a2e0  ; OopMap{[128]=Oop [136]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000011841f87e: jmpq   0x000000011841f709
  0x000000011841f883: nop
  0x000000011841f884: nop
  0x000000011841f885: nop
  0x000000011841f886: nop
  0x000000011841f887: callq  0x0000000118362520  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x000000011841f88c: jmpq   0x000000011841f7f3
  0x000000011841f891: nop
  0x000000011841f892: nop
  0x000000011841f893: mov    0x2a8(%r15),%rax
  0x000000011841f89a: movabs $0x0,%r10
  0x000000011841f8a4: mov    %r10,0x2a8(%r15)
  0x000000011841f8ab: movabs $0x0,%r10
  0x000000011841f8b5: mov    %r10,0x2b0(%r15)
  0x000000011841f8bc: add    $0xa0,%rsp
  0x000000011841f8c3: pop    %rbp
  0x000000011841f8c4: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011841f8c9: hlt    
  0x000000011841f8ca: hlt    
  0x000000011841f8cb: hlt    
  0x000000011841f8cc: hlt    
  0x000000011841f8cd: hlt    
  0x000000011841f8ce: hlt    
  0x000000011841f8cf: hlt    
  0x000000011841f8d0: hlt    
  0x000000011841f8d1: hlt    
  0x000000011841f8d2: hlt    
  0x000000011841f8d3: hlt    
  0x000000011841f8d4: hlt    
  0x000000011841f8d5: hlt    
  0x000000011841f8d6: hlt    
  0x000000011841f8d7: hlt    
  0x000000011841f8d8: hlt    
  0x000000011841f8d9: hlt    
  0x000000011841f8da: hlt    
  0x000000011841f8db: hlt    
  0x000000011841f8dc: hlt    
  0x000000011841f8dd: hlt    
  0x000000011841f8de: hlt    
  0x000000011841f8df: hlt    
[Stub Code]
  0x000000011841f8e0: nop                       ;   {no_reloc}
  0x000000011841f8e1: nop
  0x000000011841f8e2: nop
  0x000000011841f8e3: nop
  0x000000011841f8e4: nop
  0x000000011841f8e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011841f8ef: jmpq   0x000000011841f8ef  ;   {runtime_call}
  0x000000011841f8f4: nop
  0x000000011841f8f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011841f8ff: jmpq   0x000000011841f8ff  ;   {runtime_call}
[Exception Handler]
  0x000000011841f904: callq  0x0000000118417b20  ;   {runtime_call}
  0x000000011841f909: mov    %rsp,-0x28(%rsp)
  0x000000011841f90e: sub    $0x80,%rsp
  0x000000011841f915: mov    %rax,0x78(%rsp)
  0x000000011841f91a: mov    %rcx,0x70(%rsp)
  0x000000011841f91f: mov    %rdx,0x68(%rsp)
  0x000000011841f924: mov    %rbx,0x60(%rsp)
  0x000000011841f929: mov    %rbp,0x50(%rsp)
  0x000000011841f92e: mov    %rsi,0x48(%rsp)
  0x000000011841f933: mov    %rdi,0x40(%rsp)
  0x000000011841f938: mov    %r8,0x38(%rsp)
  0x000000011841f93d: mov    %r9,0x30(%rsp)
  0x000000011841f942: mov    %r10,0x28(%rsp)
  0x000000011841f947: mov    %r11,0x20(%rsp)
  0x000000011841f94c: mov    %r12,0x18(%rsp)
  0x000000011841f951: mov    %r13,0x10(%rsp)
  0x000000011841f956: mov    %r14,0x8(%rsp)
  0x000000011841f95b: mov    %r15,(%rsp)
  0x000000011841f95f: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011841f969: movabs $0x11841f909,%rsi  ;   {internal_word}
  0x000000011841f973: mov    %rsp,%rdx
  0x000000011841f976: and    $0xfffffffffffffff0,%rsp
  0x000000011841f97a: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011841f97f: hlt    
[Deopt Handler Code]
  0x000000011841f980: movabs $0x11841f980,%r10  ;   {section_word}
  0x000000011841f98a: push   %r10
  0x000000011841f98c: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011841f991: hlt    
  0x000000011841f992: hlt    
  0x000000011841f993: hlt    
  0x000000011841f994: hlt    
  0x000000011841f995: hlt    
  0x000000011841f996: hlt    
  0x000000011841f997: hlt    
Decoding compiled method 0x000000011841e990:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000011841eb20: mov    0x8(%rsi),%r10d
  0x000000011841eb24: shl    $0x3,%r10
  0x000000011841eb28: cmp    %rax,%r10
  0x000000011841eb2b: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011841eb31: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011841eb3c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011841eb40: mov    %eax,-0x14000(%rsp)
  0x000000011841eb47: push   %rbp
  0x000000011841eb48: sub    $0x30,%rsp
  0x000000011841eb4c: movabs $0x1138c14b0,%rax  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841eb56: mov    0xdc(%rax),%edi
  0x000000011841eb5c: add    $0x8,%edi
  0x000000011841eb5f: mov    %edi,0xdc(%rax)
  0x000000011841eb65: movabs $0x1136c5618,%rax  ;   {metadata({method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841eb6f: and    $0x1ff8,%edi
  0x000000011841eb75: cmp    $0x0,%edi
  0x000000011841eb78: je     0x000000011841ef46  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x000000011841eb7e: cmp    %rdx,%rsi
  0x000000011841eb81: movabs $0x1138c14b0,%rax  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841eb8b: movabs $0x108,%rdi
  0x000000011841eb95: jne    0x000000011841eba5
  0x000000011841eb9b: movabs $0x118,%rdi
  0x000000011841eba5: mov    (%rax,%rdi,1),%rbx
  0x000000011841eba9: lea    0x1(%rbx),%rbx
  0x000000011841ebad: mov    %rbx,(%rax,%rdi,1)
  0x000000011841ebb1: je     0x000000011841ef35  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000011841ebb7: cmp    $0x0,%rdx
  0x000000011841ebbb: jne    0x000000011841ebd6
  0x000000011841ebbd: movabs $0x1138c14b0,%rbx  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841ebc7: orl    $0x100,0x120(%rbx)
  0x000000011841ebd1: jmpq   0x000000011841ec96
  0x000000011841ebd6: movabs $0x7c00016d0,%rcx  ;   {metadata('java/lang/String')}
  0x000000011841ebe0: mov    0x8(%rdx),%edi
  0x000000011841ebe3: shl    $0x3,%rdi
  0x000000011841ebe7: cmp    %rdi,%rcx
  0x000000011841ebea: jne    0x000000011841ec7a
  0x000000011841ebf0: movabs $0x1138c14b0,%rbx  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841ebfa: mov    0x8(%rdx),%ecx
  0x000000011841ebfd: shl    $0x3,%rcx
  0x000000011841ec01: cmp    0x130(%rbx),%rcx
  0x000000011841ec08: jne    0x000000011841ec17
  0x000000011841ec0a: addq   $0x1,0x138(%rbx)
  0x000000011841ec12: jmpq   0x000000011841ec9b
  0x000000011841ec17: cmp    0x140(%rbx),%rcx
  0x000000011841ec1e: jne    0x000000011841ec2d
  0x000000011841ec20: addq   $0x1,0x148(%rbx)
  0x000000011841ec28: jmpq   0x000000011841ec9b
  0x000000011841ec2d: cmpq   $0x0,0x130(%rbx)
  0x000000011841ec38: jne    0x000000011841ec51
  0x000000011841ec3a: mov    %rcx,0x130(%rbx)
  0x000000011841ec41: movq   $0x1,0x138(%rbx)
  0x000000011841ec4c: jmpq   0x000000011841ec9b
  0x000000011841ec51: cmpq   $0x0,0x140(%rbx)
  0x000000011841ec5c: jne    0x000000011841ec75
  0x000000011841ec5e: mov    %rcx,0x140(%rbx)
  0x000000011841ec65: movq   $0x1,0x148(%rbx)
  0x000000011841ec70: jmpq   0x000000011841ec9b
  0x000000011841ec75: jmpq   0x000000011841ec9b
  0x000000011841ec7a: movabs $0x1138c14b0,%rbx  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841ec84: subq   $0x1,0x128(%rbx)
  0x000000011841ec8c: jmpq   0x000000011841ec96
  0x000000011841ec91: jmpq   0x000000011841ec9b
  0x000000011841ec96: xor    %rax,%rax
  0x000000011841ec99: jmp    0x000000011841eca5
  0x000000011841ec9b: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000011841eca5: cmp    $0x0,%eax
  0x000000011841eca8: movabs $0x1138c14b0,%rax  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841ecb2: movabs $0x158,%rdi
  0x000000011841ecbc: je     0x000000011841eccc
  0x000000011841ecc2: movabs $0x168,%rdi
  0x000000011841eccc: mov    (%rax,%rdi,1),%rbx
  0x000000011841ecd0: lea    0x1(%rbx),%rbx
  0x000000011841ecd4: mov    %rbx,(%rax,%rdi,1)
  0x000000011841ecd8: je     0x000000011841ef24  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x000000011841ecde: cmp    $0x0,%rdx
  0x000000011841ece2: jne    0x000000011841ecfd
  0x000000011841ece4: movabs $0x1138c14b0,%rbx  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841ecee: orl    $0x100,0x170(%rbx)
  0x000000011841ecf8: jmpq   0x000000011841edbd
  0x000000011841ecfd: movabs $0x7c00016d0,%rax  ;   {metadata('java/lang/String')}
  0x000000011841ed07: mov    0x8(%rdx),%edi
  0x000000011841ed0a: shl    $0x3,%rdi
  0x000000011841ed0e: cmp    %rdi,%rax
  0x000000011841ed11: jne    0x000000011841eda1
  0x000000011841ed17: movabs $0x1138c14b0,%rbx  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841ed21: mov    0x8(%rdx),%eax
  0x000000011841ed24: shl    $0x3,%rax
  0x000000011841ed28: cmp    0x180(%rbx),%rax
  0x000000011841ed2f: jne    0x000000011841ed3e
  0x000000011841ed31: addq   $0x1,0x188(%rbx)
  0x000000011841ed39: jmpq   0x000000011841edbd
  0x000000011841ed3e: cmp    0x190(%rbx),%rax
  0x000000011841ed45: jne    0x000000011841ed54
  0x000000011841ed47: addq   $0x1,0x198(%rbx)
  0x000000011841ed4f: jmpq   0x000000011841edbd
  0x000000011841ed54: cmpq   $0x0,0x180(%rbx)
  0x000000011841ed5f: jne    0x000000011841ed78
  0x000000011841ed61: mov    %rax,0x180(%rbx)
  0x000000011841ed68: movq   $0x1,0x188(%rbx)
  0x000000011841ed73: jmpq   0x000000011841edbd
  0x000000011841ed78: cmpq   $0x0,0x190(%rbx)
  0x000000011841ed83: jne    0x000000011841ed9c
  0x000000011841ed85: mov    %rax,0x190(%rbx)
  0x000000011841ed8c: movq   $0x1,0x198(%rbx)
  0x000000011841ed97: jmpq   0x000000011841edbd
  0x000000011841ed9c: jmpq   0x000000011841edbd
  0x000000011841eda1: movabs $0x1138c14b0,%rbx  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841edab: subq   $0x1,0x178(%rbx)
  0x000000011841edb3: jmpq   0x000000011841ef5d
  0x000000011841edb8: jmpq   0x000000011841edbd
  0x000000011841edbd: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x000000011841edc0: mov    0xc(%rsi),%esi
  0x000000011841edc3: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000011841edc7: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x000000011841ef66
  0x000000011841edca: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x000000011841ef6b
  0x000000011841edcd: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000011841edd1: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000011841ef70
  0x000000011841edd4: cmp    %ebx,%edi
  0x000000011841edd6: movabs $0x1138c14b0,%rbx  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841ede0: movabs $0x1a8,%rdx
  0x000000011841edea: jne    0x000000011841edfa
  0x000000011841edf0: movabs $0x1b8,%rdx
  0x000000011841edfa: mov    (%rbx,%rdx,1),%rcx
  0x000000011841edfe: lea    0x1(%rcx),%rcx
  0x000000011841ee02: mov    %rcx,(%rbx,%rdx,1)
  0x000000011841ee06: jne    0x000000011841ef24  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x000000011841ee0c: mov    $0x0,%ebx
  0x000000011841ee11: jmpq   0x000000011841eebf  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x000000011841ee16: xchg   %ax,%ax
  0x000000011841ee18: movslq %ebx,%rdi
  0x000000011841ee1b: cmp    0xc(%rsi),%ebx
  0x000000011841ee1e: jae    0x000000011841ef75
  0x000000011841ee24: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000011841ee29: movslq %ebx,%rcx
  0x000000011841ee2c: cmp    0xc(%rax),%ebx
  0x000000011841ee2f: jae    0x000000011841ef7e
  0x000000011841ee35: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000011841ee3a: cmp    %ecx,%edi
  0x000000011841ee3c: movabs $0x1138c14b0,%rdi  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841ee46: movabs $0x1e8,%rcx
  0x000000011841ee50: je     0x000000011841ee60
  0x000000011841ee56: movabs $0x1f8,%rcx
  0x000000011841ee60: mov    (%rdi,%rcx,1),%r8
  0x000000011841ee64: lea    0x1(%r8),%r8
  0x000000011841ee68: mov    %r8,(%rdi,%rcx,1)
  0x000000011841ee6c: jne    0x000000011841ef02  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000011841ee72: inc    %ebx
  0x000000011841ee74: movabs $0x1138c14b0,%rdi  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841ee7e: mov    0xe0(%rdi),%ecx
  0x000000011841ee84: add    $0x8,%ecx
  0x000000011841ee87: mov    %ecx,0xe0(%rdi)
  0x000000011841ee8d: movabs $0x1136c5618,%rdi  ;   {metadata({method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841ee97: and    $0xfff8,%ecx
  0x000000011841ee9d: cmp    $0x0,%ecx
  0x000000011841eea0: je     0x000000011841ef87  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000011841eea6: test   %eax,-0xb42cdac(%rip)        # 0x000000010cff2100
                                                ;   {poll}
  0x000000011841eeac: movabs $0x1138c14b0,%rdi  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841eeb6: incl   0x208(%rdi)
  0x000000011841eebc: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000011841eebf: mov    %rdi,%rdx
  0x000000011841eec2: dec    %edx
  0x000000011841eec4: cmp    $0x0,%edi
  0x000000011841eec7: movabs $0x1138c14b0,%rdi  ;   {metadata(method data for {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000011841eed1: movabs $0x1c8,%rcx
  0x000000011841eedb: je     0x000000011841eeeb
  0x000000011841eee1: movabs $0x1d8,%rcx
  0x000000011841eeeb: mov    (%rdi,%rcx,1),%r8
  0x000000011841eeef: lea    0x1(%r8),%r8
  0x000000011841eef3: mov    %r8,(%rdi,%rcx,1)
  0x000000011841eef7: je     0x000000011841ef13
  0x000000011841eefd: jmpq   0x000000011841ee18  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000011841ef02: mov    $0x0,%eax
  0x000000011841ef07: add    $0x30,%rsp
  0x000000011841ef0b: pop    %rbp
  0x000000011841ef0c: test   %eax,-0xb42ce12(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011841ef12: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x000000011841ef13: mov    $0x1,%eax
  0x000000011841ef18: add    $0x30,%rsp
  0x000000011841ef1c: pop    %rbp
  0x000000011841ef1d: test   %eax,-0xb42ce23(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011841ef23: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x000000011841ef24: mov    $0x0,%eax
  0x000000011841ef29: add    $0x30,%rsp
  0x000000011841ef2d: pop    %rbp
  0x000000011841ef2e: test   %eax,-0xb42ce34(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011841ef34: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x000000011841ef35: mov    $0x1,%eax
  0x000000011841ef3a: add    $0x30,%rsp
  0x000000011841ef3e: pop    %rbp
  0x000000011841ef3f: test   %eax,-0xb42ce45(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011841ef45: retq   
  0x000000011841ef46: mov    %rax,0x8(%rsp)
  0x000000011841ef4b: movq   $0xffffffffffffffff,(%rsp)
  0x000000011841ef53: callq  0x000000011841a2e0  ; OopMap{rsi=Oop rdx=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x000000011841ef58: jmpq   0x000000011841eb7e
  0x000000011841ef5d: mov    %rdx,(%rsp)
  0x000000011841ef61: callq  0x0000000118417e80  ; OopMap{rsi=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x000000011841ef66: callq  0x0000000118415c80  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000011841ef6b: callq  0x0000000118415c80  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x000000011841ef70: callq  0x0000000118415c80  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000011841ef75: mov    %rbx,(%rsp)
  0x000000011841ef79: callq  0x0000000118388240  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000011841ef7e: mov    %rbx,(%rsp)
  0x000000011841ef82: callq  0x0000000118388240  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000011841ef87: mov    %rdi,0x8(%rsp)
  0x000000011841ef8c: movq   $0x4a,(%rsp)
  0x000000011841ef94: callq  0x000000011841a2e0  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x000000011841ef99: jmpq   0x000000011841eea6
  0x000000011841ef9e: nop
  0x000000011841ef9f: nop
  0x000000011841efa0: mov    0x2a8(%r15),%rax
  0x000000011841efa7: movabs $0x0,%r10
  0x000000011841efb1: mov    %r10,0x2a8(%r15)
  0x000000011841efb8: movabs $0x0,%r10
  0x000000011841efc2: mov    %r10,0x2b0(%r15)
  0x000000011841efc9: add    $0x30,%rsp
  0x000000011841efcd: pop    %rbp
  0x000000011841efce: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011841efd3: hlt    
  0x000000011841efd4: hlt    
  0x000000011841efd5: hlt    
  0x000000011841efd6: hlt    
  0x000000011841efd7: hlt    
  0x000000011841efd8: hlt    
  0x000000011841efd9: hlt    
  0x000000011841efda: hlt    
  0x000000011841efdb: hlt    
  0x000000011841efdc: hlt    
  0x000000011841efdd: hlt    
  0x000000011841efde: hlt    
  0x000000011841efdf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011841efe0: callq  0x0000000118417b20  ;   {no_reloc}
  0x000000011841efe5: mov    %rsp,-0x28(%rsp)
  0x000000011841efea: sub    $0x80,%rsp
  0x000000011841eff1: mov    %rax,0x78(%rsp)
  0x000000011841eff6: mov    %rcx,0x70(%rsp)
  0x000000011841effb: mov    %rdx,0x68(%rsp)
  0x000000011841f000: mov    %rbx,0x60(%rsp)
  0x000000011841f005: mov    %rbp,0x50(%rsp)
  0x000000011841f00a: mov    %rsi,0x48(%rsp)
  0x000000011841f00f: mov    %rdi,0x40(%rsp)
  0x000000011841f014: mov    %r8,0x38(%rsp)
  0x000000011841f019: mov    %r9,0x30(%rsp)
  0x000000011841f01e: mov    %r10,0x28(%rsp)
  0x000000011841f023: mov    %r11,0x20(%rsp)
  0x000000011841f028: mov    %r12,0x18(%rsp)
  0x000000011841f02d: mov    %r13,0x10(%rsp)
  0x000000011841f032: mov    %r14,0x8(%rsp)
  0x000000011841f037: mov    %r15,(%rsp)
  0x000000011841f03b: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011841f045: movabs $0x11841efe5,%rsi  ;   {internal_word}
  0x000000011841f04f: mov    %rsp,%rdx
  0x000000011841f052: and    $0xfffffffffffffff0,%rsp
  0x000000011841f056: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011841f05b: hlt    
[Deopt Handler Code]
  0x000000011841f05c: movabs $0x11841f05c,%r10  ;   {section_word}
  0x000000011841f066: push   %r10
  0x000000011841f068: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011841f06d: hlt    
  0x000000011841f06e: hlt    
  0x000000011841f06f: hlt    
Decoding compiled method 0x0000000118429410:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001136c1480} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x0000000118429580: mov    0x8(%rsi),%r10d
  0x0000000118429584: shl    $0x3,%r10
  0x0000000118429588: cmp    %rax,%r10
  0x000000011842958b: jne    0x0000000118361e60  ;   {runtime_call}
  0x0000000118429591: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011842959c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001184295a0: mov    %eax,-0x14000(%rsp)
  0x00000001184295a7: push   %rbp
  0x00000001184295a8: sub    $0x30,%rsp
  0x00000001184295ac: movabs $0x1138376d8,%rdi  ;   {metadata(method data for {method} {0x00000001136c1480} '<init>' '()V' in 'java/lang/Object')}
  0x00000001184295b6: mov    0xdc(%rdi),%ebx
  0x00000001184295bc: add    $0x8,%ebx
  0x00000001184295bf: mov    %ebx,0xdc(%rdi)
  0x00000001184295c5: movabs $0x1136c1480,%rdi  ;   {metadata({method} {0x00000001136c1480} '<init>' '()V' in 'java/lang/Object')}
  0x00000001184295cf: and    $0x1ff8,%ebx
  0x00000001184295d5: cmp    $0x0,%ebx
  0x00000001184295d8: je     0x00000001184295f7
  0x00000001184295de: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)

  0x00000001184295e1: mov    %rsi,0x20(%rsp)
  0x00000001184295e6: callq  0x0000000118415ea0  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)
                                                ;   {runtime_call}
  0x00000001184295eb: add    $0x30,%rsp
  0x00000001184295ef: pop    %rbp
  0x00000001184295f0: test   %eax,-0xb4374f6(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x00000001184295f6: retq   
  0x00000001184295f7: mov    %rdi,0x8(%rsp)
  0x00000001184295fc: movq   $0xffffffffffffffff,(%rsp)
  0x0000000118429604: callq  0x000000011841a2e0  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ;   {runtime_call}
  0x0000000118429609: jmp    0x00000001184295de
  0x000000011842960b: nop
  0x000000011842960c: nop
  0x000000011842960d: mov    0x2a8(%r15),%rax
  0x0000000118429614: movabs $0x0,%r10
  0x000000011842961e: mov    %r10,0x2a8(%r15)
  0x0000000118429625: movabs $0x0,%r10
  0x000000011842962f: mov    %r10,0x2b0(%r15)
  0x0000000118429636: add    $0x30,%rsp
  0x000000011842963a: pop    %rbp
  0x000000011842963b: jmpq   0x00000001183886e0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000118429640: callq  0x0000000118417b20  ;   {no_reloc}
  0x0000000118429645: mov    %rsp,-0x28(%rsp)
  0x000000011842964a: sub    $0x80,%rsp
  0x0000000118429651: mov    %rax,0x78(%rsp)
  0x0000000118429656: mov    %rcx,0x70(%rsp)
  0x000000011842965b: mov    %rdx,0x68(%rsp)
  0x0000000118429660: mov    %rbx,0x60(%rsp)
  0x0000000118429665: mov    %rbp,0x50(%rsp)
  0x000000011842966a: mov    %rsi,0x48(%rsp)
  0x000000011842966f: mov    %rdi,0x40(%rsp)
  0x0000000118429674: mov    %r8,0x38(%rsp)
  0x0000000118429679: mov    %r9,0x30(%rsp)
  0x000000011842967e: mov    %r10,0x28(%rsp)
  0x0000000118429683: mov    %r11,0x20(%rsp)
  0x0000000118429688: mov    %r12,0x18(%rsp)
  0x000000011842968d: mov    %r13,0x10(%rsp)
  0x0000000118429692: mov    %r14,0x8(%rsp)
  0x0000000118429697: mov    %r15,(%rsp)
  0x000000011842969b: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x00000001184296a5: movabs $0x118429645,%rsi  ;   {internal_word}
  0x00000001184296af: mov    %rsp,%rdx
  0x00000001184296b2: and    $0xfffffffffffffff0,%rsp
  0x00000001184296b6: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x00000001184296bb: hlt    
[Deopt Handler Code]
  0x00000001184296bc: movabs $0x1184296bc,%r10  ;   {section_word}
  0x00000001184296c6: push   %r10
  0x00000001184296c8: jmpq   0x0000000118363500  ;   {runtime_call}
  0x00000001184296cd: hlt    
  0x00000001184296ce: hlt    
  0x00000001184296cf: hlt    
Decoding compiled method 0x0000000118429050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000001184291c0: mov    %eax,-0x14000(%rsp)
  0x00000001184291c7: push   %rbp
  0x00000001184291c8: sub    $0x30,%rsp
  0x00000001184291cc: movabs $0x113892170,%rax  ;   {metadata(method data for {method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x00000001184291d6: mov    0xdc(%rax),%edi
  0x00000001184291dc: add    $0x8,%edi
  0x00000001184291df: mov    %edi,0xdc(%rax)
  0x00000001184291e5: movabs $0x1137b6a20,%rax  ;   {metadata({method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x00000001184291ef: and    $0x1ff8,%edi
  0x00000001184291f5: cmp    $0x0,%edi
  0x00000001184291f8: je     0x000000011842925d  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x00000001184291fe: cmp    %edx,%esi
  0x0000000118429200: movabs $0x113892170,%rax  ;   {metadata(method data for {method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x000000011842920a: movabs $0x108,%rdi
  0x0000000118429214: jg     0x0000000118429224
  0x000000011842921a: movabs $0x118,%rdi
  0x0000000118429224: mov    (%rax,%rdi,1),%rbx
  0x0000000118429228: lea    0x1(%rbx),%rbx
  0x000000011842922c: mov    %rbx,(%rax,%rdi,1)
  0x0000000118429230: jg     0x000000011842924b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x0000000118429236: movabs $0x113892170,%rax  ;   {metadata(method data for {method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000118429240: incl   0x128(%rax)
  0x0000000118429246: jmpq   0x000000011842924e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x000000011842924b: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000011842924e: mov    %rsi,%rax
  0x0000000118429251: add    $0x30,%rsp
  0x0000000118429255: pop    %rbp
  0x0000000118429256: test   %eax,-0xb43715c(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842925c: retq   
  0x000000011842925d: mov    %rax,0x8(%rsp)
  0x0000000118429262: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842926a: callq  0x000000011841a2e0  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x000000011842926f: jmp    0x00000001184291fe
  0x0000000118429271: nop
  0x0000000118429272: nop
  0x0000000118429273: mov    0x2a8(%r15),%rax
  0x000000011842927a: movabs $0x0,%r10
  0x0000000118429284: mov    %r10,0x2a8(%r15)
  0x000000011842928b: movabs $0x0,%r10
  0x0000000118429295: mov    %r10,0x2b0(%r15)
  0x000000011842929c: add    $0x30,%rsp
  0x00000001184292a0: pop    %rbp
  0x00000001184292a1: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x00000001184292a6: hlt    
  0x00000001184292a7: hlt    
  0x00000001184292a8: hlt    
  0x00000001184292a9: hlt    
  0x00000001184292aa: hlt    
  0x00000001184292ab: hlt    
  0x00000001184292ac: hlt    
  0x00000001184292ad: hlt    
  0x00000001184292ae: hlt    
  0x00000001184292af: hlt    
  0x00000001184292b0: hlt    
  0x00000001184292b1: hlt    
  0x00000001184292b2: hlt    
  0x00000001184292b3: hlt    
  0x00000001184292b4: hlt    
  0x00000001184292b5: hlt    
  0x00000001184292b6: hlt    
  0x00000001184292b7: hlt    
  0x00000001184292b8: hlt    
  0x00000001184292b9: hlt    
  0x00000001184292ba: hlt    
  0x00000001184292bb: hlt    
  0x00000001184292bc: hlt    
  0x00000001184292bd: hlt    
  0x00000001184292be: hlt    
  0x00000001184292bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000001184292c0: callq  0x0000000118417b20  ;   {no_reloc}
  0x00000001184292c5: mov    %rsp,-0x28(%rsp)
  0x00000001184292ca: sub    $0x80,%rsp
  0x00000001184292d1: mov    %rax,0x78(%rsp)
  0x00000001184292d6: mov    %rcx,0x70(%rsp)
  0x00000001184292db: mov    %rdx,0x68(%rsp)
  0x00000001184292e0: mov    %rbx,0x60(%rsp)
  0x00000001184292e5: mov    %rbp,0x50(%rsp)
  0x00000001184292ea: mov    %rsi,0x48(%rsp)
  0x00000001184292ef: mov    %rdi,0x40(%rsp)
  0x00000001184292f4: mov    %r8,0x38(%rsp)
  0x00000001184292f9: mov    %r9,0x30(%rsp)
  0x00000001184292fe: mov    %r10,0x28(%rsp)
  0x0000000118429303: mov    %r11,0x20(%rsp)
  0x0000000118429308: mov    %r12,0x18(%rsp)
  0x000000011842930d: mov    %r13,0x10(%rsp)
  0x0000000118429312: mov    %r14,0x8(%rsp)
  0x0000000118429317: mov    %r15,(%rsp)
  0x000000011842931b: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x0000000118429325: movabs $0x1184292c5,%rsi  ;   {internal_word}
  0x000000011842932f: mov    %rsp,%rdx
  0x0000000118429332: and    $0xfffffffffffffff0,%rsp
  0x0000000118429336: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011842933b: hlt    
[Deopt Handler Code]
  0x000000011842933c: movabs $0x11842933c,%r10  ;   {section_word}
  0x0000000118429346: push   %r10
  0x0000000118429348: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011842934d: hlt    
  0x000000011842934e: hlt    
  0x000000011842934f: hlt    
Decoding compiled method 0x0000000118429790:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00000001184299a0: mov    %eax,-0x14000(%rsp)
  0x00000001184299a7: push   %rbp
  0x00000001184299a8: sub    $0xa0,%rsp
  0x00000001184299af: mov    %rsi,%r8
  0x00000001184299b2: mov    %rdx,%r9
  0x00000001184299b5: movabs $0x1138ea450,%rbx  ;   {metadata(method data for {method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000001184299bf: mov    0xdc(%rbx),%edx
  0x00000001184299c5: add    $0x8,%edx
  0x00000001184299c8: mov    %edx,0xdc(%rbx)
  0x00000001184299ce: movabs $0x1137db930,%rbx  ;   {metadata({method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000001184299d8: and    $0x1ff8,%edx
  0x00000001184299de: cmp    $0x0,%edx
  0x00000001184299e1: je     0x000000011842a241  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x00000001184299e7: mov    %rcx,%r11
  0x00000001184299ea: sub    %r9d,%r11d
  0x00000001184299ed: cmp    $0x0,%r11d
  0x00000001184299f1: movabs $0x1138ea450,%rbx  ;   {metadata(method data for {method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000001184299fb: movabs $0x108,%rdx
  0x0000000118429a05: jge    0x0000000118429a15
  0x0000000118429a0b: movabs $0x118,%rdx
  0x0000000118429a15: mov    (%rbx,%rdx,1),%rsi
  0x0000000118429a19: lea    0x1(%rsi),%rsi
  0x0000000118429a1d: mov    %rsi,(%rbx,%rdx,1)
  0x0000000118429a21: jl     0x0000000118429be4  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000118429a27: mov    %r11,%rbx
  0x0000000118429a2a: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000118429a34: movslq %ebx,%rbx
  0x0000000118429a37: mov    %rbx,%rdi
  0x0000000118429a3a: cmp    $0xffffff,%rbx
  0x0000000118429a41: ja     0x000000011842a258
  0x0000000118429a47: movabs $0x17,%rsi
  0x0000000118429a51: lea    (%rsi,%rbx,2),%rsi
  0x0000000118429a55: and    $0xfffffffffffffff8,%rsi
  0x0000000118429a59: mov    0x60(%r15),%rax
  0x0000000118429a5d: lea    (%rax,%rsi,1),%rsi
  0x0000000118429a61: cmp    0x70(%r15),%rsi
  0x0000000118429a65: ja     0x000000011842a258
  0x0000000118429a6b: mov    %rsi,0x60(%r15)
  0x0000000118429a6f: sub    %rax,%rsi
  0x0000000118429a72: movq   $0x1,(%rax)
  0x0000000118429a79: mov    %rdx,%rcx
  0x0000000118429a7c: shr    $0x3,%rcx
  0x0000000118429a80: mov    %ecx,0x8(%rax)
  0x0000000118429a83: mov    %ebx,0xc(%rax)
  0x0000000118429a86: sub    $0x10,%rsi
  0x0000000118429a8a: je     0x0000000118429aa1
  0x0000000118429a90: xor    %rbx,%rbx
  0x0000000118429a93: shr    $0x3,%rsi
  0x0000000118429a97: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000118429a9c: dec    %rsi
  0x0000000118429a9f: jne    0x0000000118429a97  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000118429aa1: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x000000011842a262
  0x0000000118429aa5: sub    %r9d,%esi
  0x0000000118429aa8: movabs $0x1138ea450,%rdx  ;   {metadata(method data for {method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000118429ab2: addq   $0x1,0x208(%rdx)
  0x0000000118429aba: movabs $0x113892170,%rdx  ;   {metadata(method data for {method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000118429ac4: mov    0xdc(%rdx),%ecx
  0x0000000118429aca: add    $0x8,%ecx
  0x0000000118429acd: mov    %ecx,0xdc(%rdx)
  0x0000000118429ad3: movabs $0x1137b6a20,%rdx  ;   {metadata({method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000118429add: and    $0x7ffff8,%ecx
  0x0000000118429ae3: cmp    $0x0,%ecx
  0x0000000118429ae6: je     0x000000011842a267
  0x0000000118429aec: cmp    %r11d,%esi
  0x0000000118429aef: movabs $0x113892170,%rdx  ;   {metadata(method data for {method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000118429af9: movabs $0x108,%rcx
  0x0000000118429b03: jg     0x0000000118429b13
  0x0000000118429b09: movabs $0x118,%rcx
  0x0000000118429b13: mov    (%rdx,%rcx,1),%rdi
  0x0000000118429b17: lea    0x1(%rdi),%rdi
  0x0000000118429b1b: mov    %rdi,(%rdx,%rcx,1)
  0x0000000118429b1f: jg     0x0000000118429b3d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000118429b25: movabs $0x113892170,%rdx  ;   {metadata(method data for {method} {0x00000001137b6a20} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000118429b2f: incl   0x128(%rdx)
  0x0000000118429b35: mov    %rsi,%rdi
  0x0000000118429b38: jmpq   0x0000000118429b40  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000118429b3d: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000118429b40: movabs $0x1138ea450,%rsi  ;   {metadata(method data for {method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000118429b4a: addq   $0x1,0x218(%rsi)
  0x0000000118429b52: mov    %r8,%rsi
  0x0000000118429b55: mov    %r9,%rdx
  0x0000000118429b58: mov    %rax,%rcx
  0x0000000118429b5b: mov    $0x0,%r8d
  0x0000000118429b61: mov    %rdi,%r9
  0x0000000118429b64: mov    %rax,0x70(%rsp)
  0x0000000118429b69: test   %edx,%edx
  0x0000000118429b6b: jl     0x000000011842a27e
  0x0000000118429b71: lea    (%rdx,%r9,1),%rdi
  0x0000000118429b75: cmp    0xc(%rsi),%edi
  0x0000000118429b78: ja     0x000000011842a27e
  0x0000000118429b7e: lea    (%r8,%r9,1),%rdi
  0x0000000118429b82: cmp    0xc(%rcx),%edi
  0x0000000118429b85: ja     0x000000011842a27e
  0x0000000118429b8b: test   %r9d,%r9d
  0x0000000118429b8e: jl     0x000000011842a27e
  0x0000000118429b94: je     0x0000000118429bd0
  0x0000000118429b9a: movslq %edx,%rdx
  0x0000000118429b9d: movslq %r8d,%r8
  0x0000000118429ba0: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000118429ba5: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000118429baa: mov    %r9,%rdx
  0x0000000118429bad: test   $0xf,%esp
  0x0000000118429bb3: je     0x0000000118429bcb
  0x0000000118429bb9: sub    $0x8,%rsp
  0x0000000118429bbd: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000118429bc2: add    $0x8,%rsp
  0x0000000118429bc6: jmpq   0x0000000118429bd0
  0x0000000118429bcb: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x0000000118429bd0: mov    0x70(%rsp),%rax
  0x0000000118429bd5: add    $0xa0,%rsp
  0x0000000118429bdc: pop    %rbp
  0x0000000118429bdd: test   %eax,-0xb437ae3(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x0000000118429be3: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000118429be4: mov    %ecx,0x80(%rsp)
  0x0000000118429beb: nopl   0x0(%rax,%rax,1)
  0x0000000118429bf0: jmpq   0x000000011842a298  ;   {no_reloc}
  0x0000000118429bf5: add    %al,(%rax)
  0x0000000118429bf7: add    %al,(%rax)
  0x0000000118429bf9: add    %cl,-0x75(%rcx)
  0x0000000118429bfc: rex.RXB (bad) 
  0x0000000118429bfe: lea    0x20(%rax),%rdi
  0x0000000118429c02: cmp    0x70(%r15),%rdi
  0x0000000118429c06: ja     0x000000011842a2a2
  0x0000000118429c0c: mov    %rdi,0x60(%r15)
  0x0000000118429c10: mov    0xa8(%rdx),%rcx
  0x0000000118429c17: mov    %rcx,(%rax)
  0x0000000118429c1a: mov    %rdx,%rcx
  0x0000000118429c1d: shr    $0x3,%rcx
  0x0000000118429c21: mov    %ecx,0x8(%rax)
  0x0000000118429c24: xor    %rcx,%rcx
  0x0000000118429c27: mov    %ecx,0xc(%rax)
  0x0000000118429c2a: xor    %rcx,%rcx
  0x0000000118429c2d: mov    %rcx,0x10(%rax)
  0x0000000118429c31: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000118429c35: data32 xchg %ax,%ax
  0x0000000118429c38: jmpq   0x000000011842a2be  ;   {no_reloc}
  0x0000000118429c3d: add    %al,(%rax)
  0x0000000118429c3f: add    %al,(%rax)
  0x0000000118429c41: add    %cl,-0x77(%rax)
  0x0000000118429c44: test   %ah,(%rax,%rcx,4)
  0x0000000118429c47: add    %al,(%rax)
  0x0000000118429c49: add    %cl,-0x75(%rcx)
  0x0000000118429c4c: rex.RXB (bad) 
  0x0000000118429c4e: lea    0x18(%rax),%rdi
  0x0000000118429c52: cmp    0x70(%r15),%rdi
  0x0000000118429c56: ja     0x000000011842a2c8
  0x0000000118429c5c: mov    %rdi,0x60(%r15)
  0x0000000118429c60: mov    0xa8(%rdx),%rcx
  0x0000000118429c67: mov    %rcx,(%rax)
  0x0000000118429c6a: mov    %rdx,%rcx
  0x0000000118429c6d: shr    $0x3,%rcx
  0x0000000118429c71: mov    %ecx,0x8(%rax)
  0x0000000118429c74: xor    %rcx,%rcx
  0x0000000118429c77: mov    %ecx,0xc(%rax)
  0x0000000118429c7a: xor    %rcx,%rcx
  0x0000000118429c7d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000118429c81: mov    %rax,%rbx
  0x0000000118429c84: movabs $0x1138ea450,%rdx  ;   {metadata(method data for {method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000118429c8e: addq   $0x1,0x128(%rdx)
  0x0000000118429c96: movabs $0x1138ea6c8,%rbx  ;   {metadata(method data for {method} {0x0000000113739260} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x0000000118429ca0: mov    0xdc(%rbx),%edx
  0x0000000118429ca6: add    $0x8,%edx
  0x0000000118429ca9: mov    %edx,0xdc(%rbx)
  0x0000000118429caf: movabs $0x113739260,%rbx  ;   {metadata({method} {0x0000000113739260} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x0000000118429cb9: and    $0x7ffff8,%edx
  0x0000000118429cbf: cmp    $0x0,%edx
  0x0000000118429cc2: je     0x000000011842a2d5
  0x0000000118429cc8: mov    %rax,%rbx
  0x0000000118429ccb: movabs $0x1138ea6c8,%rdx  ;   {metadata(method data for {method} {0x0000000113739260} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x0000000118429cd5: addq   $0x1,0x108(%rdx)
  0x0000000118429cdd: movabs $0x1138ea7f8,%rbx  ;   {metadata(method data for {method} {0x0000000113735590} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000118429ce7: mov    0xdc(%rbx),%edx
  0x0000000118429ced: add    $0x8,%edx
  0x0000000118429cf0: mov    %edx,0xdc(%rbx)
  0x0000000118429cf6: movabs $0x113735590,%rbx  ;   {metadata({method} {0x0000000113735590} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000118429d00: and    $0x7ffff8,%edx
  0x0000000118429d06: cmp    $0x0,%edx
  0x0000000118429d09: je     0x000000011842a2ec
  0x0000000118429d0f: mov    %rax,%rbx
  0x0000000118429d12: movabs $0x1138ea7f8,%rdx  ;   {metadata(method data for {method} {0x0000000113735590} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000118429d1c: addq   $0x1,0x108(%rdx)
  0x0000000118429d24: movabs $0x1138376d8,%rbx  ;   {metadata(method data for {method} {0x00000001136c1480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000118429d2e: mov    0xdc(%rbx),%edx
  0x0000000118429d34: add    $0x8,%edx
  0x0000000118429d37: mov    %edx,0xdc(%rbx)
  0x0000000118429d3d: movabs $0x1136c1480,%rbx  ;   {metadata({method} {0x00000001136c1480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000118429d47: and    $0x7ffff8,%edx
  0x0000000118429d4d: cmp    $0x0,%edx
  0x0000000118429d50: je     0x000000011842a303
  0x0000000118429d56: mov    $0x10,%ebx
  0x0000000118429d5b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000118429d65: mov    %rax,%r13
  0x0000000118429d68: movslq %ebx,%rbx
  0x0000000118429d6b: mov    %rbx,%rdi
  0x0000000118429d6e: cmp    $0xffffff,%rbx
  0x0000000118429d75: ja     0x000000011842a31a
  0x0000000118429d7b: movabs $0x17,%rsi
  0x0000000118429d85: lea    (%rsi,%rbx,2),%rsi
  0x0000000118429d89: and    $0xfffffffffffffff8,%rsi
  0x0000000118429d8d: mov    0x60(%r15),%rax
  0x0000000118429d91: lea    (%rax,%rsi,1),%rsi
  0x0000000118429d95: cmp    0x70(%r15),%rsi
  0x0000000118429d99: ja     0x000000011842a31a
  0x0000000118429d9f: mov    %rsi,0x60(%r15)
  0x0000000118429da3: sub    %rax,%rsi
  0x0000000118429da6: movq   $0x1,(%rax)
  0x0000000118429dad: mov    %rdx,%rcx
  0x0000000118429db0: shr    $0x3,%rcx
  0x0000000118429db4: mov    %ecx,0x8(%rax)
  0x0000000118429db7: mov    %ebx,0xc(%rax)
  0x0000000118429dba: sub    $0x10,%rsi
  0x0000000118429dbe: je     0x0000000118429dd5
  0x0000000118429dc4: xor    %rbx,%rbx
  0x0000000118429dc7: shr    $0x3,%rsi
  0x0000000118429dcb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000118429dd0: dec    %rsi
  0x0000000118429dd3: jne    0x0000000118429dcb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000118429dd5: mov    %rax,%r10
  0x0000000118429dd8: shr    $0x3,%r10
  0x0000000118429ddc: mov    %r10d,0x10(%r13)
  0x0000000118429de0: mov    %r13,%rax
  0x0000000118429de3: shr    $0x9,%rax
  0x0000000118429de7: movabs $0x10b1ed000,%rdx
  0x0000000118429df1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000118429df5: mov    %r13,%rax
  0x0000000118429df8: movabs $0x1138ea450,%rdx  ;   {metadata(method data for {method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000118429e02: mov    0x8(%rax),%eax
  0x0000000118429e05: shl    $0x3,%rax
  0x0000000118429e09: cmp    0x140(%rdx),%rax
  0x0000000118429e10: jne    0x0000000118429e1f
  0x0000000118429e12: addq   $0x1,0x148(%rdx)
  0x0000000118429e1a: jmpq   0x0000000118429e85
  0x0000000118429e1f: cmp    0x150(%rdx),%rax
  0x0000000118429e26: jne    0x0000000118429e35
  0x0000000118429e28: addq   $0x1,0x158(%rdx)
  0x0000000118429e30: jmpq   0x0000000118429e85
  0x0000000118429e35: cmpq   $0x0,0x140(%rdx)
  0x0000000118429e40: jne    0x0000000118429e59
  0x0000000118429e42: mov    %rax,0x140(%rdx)
  0x0000000118429e49: movq   $0x1,0x148(%rdx)
  0x0000000118429e54: jmpq   0x0000000118429e85
  0x0000000118429e59: cmpq   $0x0,0x150(%rdx)
  0x0000000118429e64: jne    0x0000000118429e7d
  0x0000000118429e66: mov    %rax,0x150(%rdx)
  0x0000000118429e6d: movq   $0x1,0x158(%rdx)
  0x0000000118429e78: jmpq   0x0000000118429e85
  0x0000000118429e7d: addq   $0x1,0x138(%rdx)
  0x0000000118429e85: movabs $0x1138ea930,%rdx  ;   {metadata(method data for {method} {0x0000000113739a38} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000118429e8f: mov    0xdc(%rdx),%esi
  0x0000000118429e95: add    $0x8,%esi
  0x0000000118429e98: mov    %esi,0xdc(%rdx)
  0x0000000118429e9e: movabs $0x113739a38,%rdx  ;   {metadata({method} {0x0000000113739a38} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000118429ea8: and    $0x7ffff8,%esi
  0x0000000118429eae: cmp    $0x0,%esi
  0x0000000118429eb1: je     0x000000011842a324
  0x0000000118429eb7: mov    %r13,%rax
  0x0000000118429eba: movabs $0x1138ea930,%rdx  ;   {metadata(method data for {method} {0x0000000113739a38} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000118429ec4: addq   $0x1,0x108(%rdx)
  0x0000000118429ecc: mov    %r9,%rdx
  0x0000000118429ecf: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000118429ed2: mov    %r13,0x78(%rsp)
  0x0000000118429ed7: callq  0x00000001183620a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000118429edc: mov    0x78(%rsp),%rax
  0x0000000118429ee1: movabs $0x1138ea450,%rdx  ;   {metadata(method data for {method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000118429eeb: mov    0x8(%rax),%eax
  0x0000000118429eee: shl    $0x3,%rax
  0x0000000118429ef2: cmp    0x170(%rdx),%rax
  0x0000000118429ef9: jne    0x0000000118429f08
  0x0000000118429efb: addq   $0x1,0x178(%rdx)
  0x0000000118429f03: jmpq   0x0000000118429f6e
  0x0000000118429f08: cmp    0x180(%rdx),%rax
  0x0000000118429f0f: jne    0x0000000118429f1e
  0x0000000118429f11: addq   $0x1,0x188(%rdx)
  0x0000000118429f19: jmpq   0x0000000118429f6e
  0x0000000118429f1e: cmpq   $0x0,0x170(%rdx)
  0x0000000118429f29: jne    0x0000000118429f42
  0x0000000118429f2b: mov    %rax,0x170(%rdx)
  0x0000000118429f32: movq   $0x1,0x178(%rdx)
  0x0000000118429f3d: jmpq   0x0000000118429f6e
  0x0000000118429f42: cmpq   $0x0,0x180(%rdx)
  0x0000000118429f4d: jne    0x0000000118429f66
  0x0000000118429f4f: mov    %rax,0x180(%rdx)
  0x0000000118429f56: movq   $0x1,0x188(%rdx)
  0x0000000118429f61: jmpq   0x0000000118429f6e
  0x0000000118429f66: addq   $0x1,0x168(%rdx)
  0x0000000118429f6e: movabs $0x1138eac80,%rdx  ;   {metadata(method data for {method} {0x0000000113739578} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000118429f78: mov    0xdc(%rdx),%esi
  0x0000000118429f7e: add    $0x8,%esi
  0x0000000118429f81: mov    %esi,0xdc(%rdx)
  0x0000000118429f87: movabs $0x113739578,%rdx  ;   {metadata({method} {0x0000000113739578} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000118429f91: and    $0x7ffff8,%esi
  0x0000000118429f97: cmp    $0x0,%esi
  0x0000000118429f9a: je     0x000000011842a33b
  0x0000000118429fa0: mov    0x78(%rsp),%rax
  0x0000000118429fa5: movabs $0x1138eac80,%rdx  ;   {metadata(method data for {method} {0x0000000113739578} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000118429faf: addq   $0x1,0x108(%rdx)
  0x0000000118429fb7: movabs $0x795626670,%rdx  ;   {oop(" > ")}
  0x0000000118429fc1: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000118429fc6: nop
  0x0000000118429fc7: callq  0x00000001183620a0  ; OopMap{[120]=Oop [136]=Oop off=1580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000118429fcc: mov    0x78(%rsp),%rax
  0x0000000118429fd1: movabs $0x1138ea450,%rdx  ;   {metadata(method data for {method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000118429fdb: mov    0x8(%rax),%eax
  0x0000000118429fde: shl    $0x3,%rax
  0x0000000118429fe2: cmp    0x1a0(%rdx),%rax
  0x0000000118429fe9: jne    0x0000000118429ff8
  0x0000000118429feb: addq   $0x1,0x1a8(%rdx)
  0x0000000118429ff3: jmpq   0x000000011842a05e
  0x0000000118429ff8: cmp    0x1b0(%rdx),%rax
  0x0000000118429fff: jne    0x000000011842a00e
  0x000000011842a001: addq   $0x1,0x1b8(%rdx)
  0x000000011842a009: jmpq   0x000000011842a05e
  0x000000011842a00e: cmpq   $0x0,0x1a0(%rdx)
  0x000000011842a019: jne    0x000000011842a032
  0x000000011842a01b: mov    %rax,0x1a0(%rdx)
  0x000000011842a022: movq   $0x1,0x1a8(%rdx)
  0x000000011842a02d: jmpq   0x000000011842a05e
  0x000000011842a032: cmpq   $0x0,0x1b0(%rdx)
  0x000000011842a03d: jne    0x000000011842a056
  0x000000011842a03f: mov    %rax,0x1b0(%rdx)
  0x000000011842a046: movq   $0x1,0x1b8(%rdx)
  0x000000011842a051: jmpq   0x000000011842a05e
  0x000000011842a056: addq   $0x1,0x198(%rdx)
  0x000000011842a05e: movabs $0x1138ea930,%rdx  ;   {metadata(method data for {method} {0x0000000113739a38} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000011842a068: mov    0xdc(%rdx),%esi
  0x000000011842a06e: add    $0x8,%esi
  0x000000011842a071: mov    %esi,0xdc(%rdx)
  0x000000011842a077: movabs $0x113739a38,%rdx  ;   {metadata({method} {0x0000000113739a38} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000011842a081: and    $0x7ffff8,%esi
  0x000000011842a087: cmp    $0x0,%esi
  0x000000011842a08a: je     0x000000011842a352
  0x000000011842a090: mov    0x78(%rsp),%rax
  0x000000011842a095: movabs $0x1138ea930,%rdx  ;   {metadata(method data for {method} {0x0000000113739a38} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000011842a09f: addq   $0x1,0x108(%rdx)
  0x000000011842a0a7: mov    0x80(%rsp),%edx
  0x000000011842a0ae: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x000000011842a0b3: nop
  0x000000011842a0b4: nop
  0x000000011842a0b5: nop
  0x000000011842a0b6: nop
  0x000000011842a0b7: callq  0x00000001183620a0  ; OopMap{[120]=Oop [136]=Oop off=1820}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011842a0bc: mov    0x78(%rsp),%rax
  0x000000011842a0c1: movabs $0x1138ea450,%rdx  ;   {metadata(method data for {method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000011842a0cb: mov    0x8(%rax),%eax
  0x000000011842a0ce: shl    $0x3,%rax
  0x000000011842a0d2: cmp    0x1d0(%rdx),%rax
  0x000000011842a0d9: jne    0x000000011842a0e8
  0x000000011842a0db: addq   $0x1,0x1d8(%rdx)
  0x000000011842a0e3: jmpq   0x000000011842a14e
  0x000000011842a0e8: cmp    0x1e0(%rdx),%rax
  0x000000011842a0ef: jne    0x000000011842a0fe
  0x000000011842a0f1: addq   $0x1,0x1e8(%rdx)
  0x000000011842a0f9: jmpq   0x000000011842a14e
  0x000000011842a0fe: cmpq   $0x0,0x1d0(%rdx)
  0x000000011842a109: jne    0x000000011842a122
  0x000000011842a10b: mov    %rax,0x1d0(%rdx)
  0x000000011842a112: movq   $0x1,0x1d8(%rdx)
  0x000000011842a11d: jmpq   0x000000011842a14e
  0x000000011842a122: cmpq   $0x0,0x1e0(%rdx)
  0x000000011842a12d: jne    0x000000011842a146
  0x000000011842a12f: mov    %rax,0x1e0(%rdx)
  0x000000011842a136: movq   $0x1,0x1e8(%rdx)
  0x000000011842a141: jmpq   0x000000011842a14e
  0x000000011842a146: addq   $0x1,0x1c8(%rdx)
  0x000000011842a14e: movabs $0x1138eafa8,%rdx  ;   {metadata(method data for {method} {0x000000011373a928} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000011842a158: mov    0xdc(%rdx),%esi
  0x000000011842a15e: add    $0x8,%esi
  0x000000011842a161: mov    %esi,0xdc(%rdx)
  0x000000011842a167: movabs $0x11373a928,%rdx  ;   {metadata({method} {0x000000011373a928} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000011842a171: and    $0x7ffff8,%esi
  0x000000011842a177: cmp    $0x0,%esi
  0x000000011842a17a: je     0x000000011842a369
  0x000000011842a180: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000011842a18a: mov    0x60(%r15),%rax
  0x000000011842a18e: lea    0x18(%rax),%rdi
  0x000000011842a192: cmp    0x70(%r15),%rdi
  0x000000011842a196: ja     0x000000011842a380
  0x000000011842a19c: mov    %rdi,0x60(%r15)
  0x000000011842a1a0: mov    0xa8(%rdx),%rcx
  0x000000011842a1a7: mov    %rcx,(%rax)
  0x000000011842a1aa: mov    %rdx,%rcx
  0x000000011842a1ad: shr    $0x3,%rcx
  0x000000011842a1b1: mov    %ecx,0x8(%rax)
  0x000000011842a1b4: xor    %rcx,%rcx
  0x000000011842a1b7: mov    %ecx,0xc(%rax)
  0x000000011842a1ba: xor    %rcx,%rcx
  0x000000011842a1bd: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011842a1c1: mov    0x78(%rsp),%rdx
  0x000000011842a1c6: mov    0x10(%rdx),%ecx
  0x000000011842a1c9: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011842a1cd: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011842a1d1: mov    %rax,%rdx
  0x000000011842a1d4: movabs $0x1138eafa8,%rsi  ;   {metadata(method data for {method} {0x000000011373a928} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x000000011842a1de: addq   $0x1,0x108(%rsi)
  0x000000011842a1e6: mov    %rcx,%rdx
  0x000000011842a1e9: mov    $0x0,%ecx
  0x000000011842a1ee: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x000000011842a1f1: mov    %rax,0x90(%rsp)
  0x000000011842a1f9: nop
  0x000000011842a1fa: nop
  0x000000011842a1fb: nop
  0x000000011842a1fc: nop
  0x000000011842a1fd: nop
  0x000000011842a1fe: nop
  0x000000011842a1ff: callq  0x00000001183620a0  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011842a204: mov    0x88(%rsp),%rax
  0x000000011842a20c: movabs $0x1138ea450,%rdx  ;   {metadata(method data for {method} {0x00000001137db930} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000011842a216: addq   $0x1,0x1f8(%rdx)
  0x000000011842a21e: mov    0x90(%rsp),%rdx
  0x000000011842a226: mov    0x88(%rsp),%rsi    ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x000000011842a22e: nop
  0x000000011842a22f: callq  0x00000001183620a0  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x000000011842a234: mov    0x88(%rsp),%rax
  0x000000011842a23c: jmpq   0x000000011842a3b8
  0x000000011842a241: mov    %rbx,0x8(%rsp)
  0x000000011842a246: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842a24e: callq  0x000000011841a2e0  ; OopMap{r8=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x000000011842a253: jmpq   0x00000001184299e7
  0x000000011842a258: callq  0x0000000118416ce0  ; OopMap{r8=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x000000011842a25d: jmpq   0x0000000118429aa1
  0x000000011842a262: callq  0x0000000118415c80  ; OopMap{r8=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x000000011842a267: mov    %rdx,0x8(%rsp)
  0x000000011842a26c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842a274: callq  0x000000011841a2e0  ; OopMap{r8=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x000000011842a279: jmpq   0x0000000118429aec
  0x000000011842a27e: nop
  0x000000011842a27f: callq  0x0000000118362520  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x000000011842a284: jmpq   0x0000000118429bd0
  0x000000011842a289: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011842a293: mov    $0xa050f00,%eax
  0x000000011842a298: callq  0x00000001184192e0  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a29d: jmpq   0x0000000118429bf0
  0x000000011842a2a2: mov    %rdx,%rdx
  0x000000011842a2a5: callq  0x00000001184163e0  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a2aa: jmpq   0x0000000118429c35
  0x000000011842a2af: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011842a2b9: mov    $0xa050f00,%eax
  0x000000011842a2be: callq  0x00000001184192e0  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a2c3: jmpq   0x0000000118429c38
  0x000000011842a2c8: mov    %rdx,%rdx
  0x000000011842a2cb: callq  0x00000001184163e0  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a2d0: jmpq   0x0000000118429c81
  0x000000011842a2d5: mov    %rbx,0x8(%rsp)
  0x000000011842a2da: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842a2e2: callq  0x000000011841a2e0  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a2e7: jmpq   0x0000000118429cc8
  0x000000011842a2ec: mov    %rbx,0x8(%rsp)
  0x000000011842a2f1: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842a2f9: callq  0x000000011841a2e0  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a2fe: jmpq   0x0000000118429d0f
  0x000000011842a303: mov    %rbx,0x8(%rsp)
  0x000000011842a308: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842a310: callq  0x000000011841a2e0  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a315: jmpq   0x0000000118429d56
  0x000000011842a31a: callq  0x0000000118416ce0  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a31f: jmpq   0x0000000118429dd5
  0x000000011842a324: mov    %rdx,0x8(%rsp)
  0x000000011842a329: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842a331: callq  0x000000011841a2e0  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a336: jmpq   0x0000000118429eb7
  0x000000011842a33b: mov    %rdx,0x8(%rsp)
  0x000000011842a340: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842a348: callq  0x000000011841a2e0  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a34d: jmpq   0x0000000118429fa0
  0x000000011842a352: mov    %rdx,0x8(%rsp)
  0x000000011842a357: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842a35f: callq  0x000000011841a2e0  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a364: jmpq   0x000000011842a090
  0x000000011842a369: mov    %rdx,0x8(%rsp)
  0x000000011842a36e: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842a376: callq  0x000000011841a2e0  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a37b: jmpq   0x000000011842a180
  0x000000011842a380: mov    %rdx,%rdx
  0x000000011842a383: callq  0x00000001184163e0  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000011842a388: jmpq   0x000000011842a1c1
  0x000000011842a38d: nop
  0x000000011842a38e: nop
  0x000000011842a38f: mov    0x2a8(%r15),%rax
  0x000000011842a396: movabs $0x0,%r10
  0x000000011842a3a0: mov    %r10,0x2a8(%r15)
  0x000000011842a3a7: movabs $0x0,%r10
  0x000000011842a3b1: mov    %r10,0x2b0(%r15)
  0x000000011842a3b8: add    $0xa0,%rsp
  0x000000011842a3bf: pop    %rbp
  0x000000011842a3c0: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011842a3c5: hlt    
  0x000000011842a3c6: hlt    
  0x000000011842a3c7: hlt    
  0x000000011842a3c8: hlt    
  0x000000011842a3c9: hlt    
  0x000000011842a3ca: hlt    
  0x000000011842a3cb: hlt    
  0x000000011842a3cc: hlt    
  0x000000011842a3cd: hlt    
  0x000000011842a3ce: hlt    
  0x000000011842a3cf: hlt    
  0x000000011842a3d0: hlt    
  0x000000011842a3d1: hlt    
  0x000000011842a3d2: hlt    
  0x000000011842a3d3: hlt    
  0x000000011842a3d4: hlt    
  0x000000011842a3d5: hlt    
  0x000000011842a3d6: hlt    
  0x000000011842a3d7: hlt    
  0x000000011842a3d8: hlt    
  0x000000011842a3d9: hlt    
  0x000000011842a3da: hlt    
  0x000000011842a3db: hlt    
  0x000000011842a3dc: hlt    
  0x000000011842a3dd: hlt    
  0x000000011842a3de: hlt    
  0x000000011842a3df: hlt    
[Stub Code]
  0x000000011842a3e0: nop                       ;   {no_reloc}
  0x000000011842a3e1: nop
  0x000000011842a3e2: nop
  0x000000011842a3e3: nop
  0x000000011842a3e4: nop
  0x000000011842a3e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842a3ef: jmpq   0x000000011842a3ef  ;   {runtime_call}
  0x000000011842a3f4: nop
  0x000000011842a3f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842a3ff: jmpq   0x000000011842a3ff  ;   {runtime_call}
  0x000000011842a404: nop
  0x000000011842a405: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842a40f: jmpq   0x000000011842a40f  ;   {runtime_call}
  0x000000011842a414: nop
  0x000000011842a415: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842a41f: jmpq   0x000000011842a41f  ;   {runtime_call}
  0x000000011842a424: nop
  0x000000011842a425: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842a42f: jmpq   0x000000011842a42f  ;   {runtime_call}
  0x000000011842a434: nop
  0x000000011842a435: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842a43f: jmpq   0x000000011842a43f  ;   {runtime_call}
[Exception Handler]
  0x000000011842a444: callq  0x0000000118417b20  ;   {runtime_call}
  0x000000011842a449: mov    %rsp,-0x28(%rsp)
  0x000000011842a44e: sub    $0x80,%rsp
  0x000000011842a455: mov    %rax,0x78(%rsp)
  0x000000011842a45a: mov    %rcx,0x70(%rsp)
  0x000000011842a45f: mov    %rdx,0x68(%rsp)
  0x000000011842a464: mov    %rbx,0x60(%rsp)
  0x000000011842a469: mov    %rbp,0x50(%rsp)
  0x000000011842a46e: mov    %rsi,0x48(%rsp)
  0x000000011842a473: mov    %rdi,0x40(%rsp)
  0x000000011842a478: mov    %r8,0x38(%rsp)
  0x000000011842a47d: mov    %r9,0x30(%rsp)
  0x000000011842a482: mov    %r10,0x28(%rsp)
  0x000000011842a487: mov    %r11,0x20(%rsp)
  0x000000011842a48c: mov    %r12,0x18(%rsp)
  0x000000011842a491: mov    %r13,0x10(%rsp)
  0x000000011842a496: mov    %r14,0x8(%rsp)
  0x000000011842a49b: mov    %r15,(%rsp)
  0x000000011842a49f: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011842a4a9: movabs $0x11842a449,%rsi  ;   {internal_word}
  0x000000011842a4b3: mov    %rsp,%rdx
  0x000000011842a4b6: and    $0xfffffffffffffff0,%rsp
  0x000000011842a4ba: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011842a4bf: hlt    
[Deopt Handler Code]
  0x000000011842a4c0: movabs $0x11842a4c0,%r10  ;   {section_word}
  0x000000011842a4ca: push   %r10
  0x000000011842a4cc: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011842a4d1: hlt    
  0x000000011842a4d2: hlt    
  0x000000011842a4d3: hlt    
  0x000000011842a4d4: hlt    
  0x000000011842a4d5: hlt    
  0x000000011842a4d6: hlt    
  0x000000011842a4d7: hlt    
Decoding compiled method 0x0000000118428790:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00000001137aa0d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x0000000118428900: mov    %eax,-0x14000(%rsp)
  0x0000000118428907: push   %rbp
  0x0000000118428908: sub    $0x30,%rsp
  0x000000011842890c: movabs $0x1138eb460,%rdi  ;   {metadata(method data for {method} {0x00000001137aa0d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000000118428916: mov    0xdc(%rdi),%ebx
  0x000000011842891c: add    $0x8,%ebx
  0x000000011842891f: mov    %ebx,0xdc(%rdi)
  0x0000000118428925: movabs $0x1137aa0d0,%rdi  ;   {metadata({method} {0x00000001137aa0d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000011842892f: and    $0x1ff8,%ebx
  0x0000000118428935: cmp    $0x0,%ebx
  0x0000000118428938: je     0x0000000118428a4c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 339)

  0x000000011842893e: cmp    $0x0,%rsi
  0x0000000118428942: movabs $0x1138eb460,%rdi  ;   {metadata(method data for {method} {0x00000001137aa0d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000011842894c: movabs $0x108,%rbx
  0x0000000118428956: jne    0x0000000118428966
  0x000000011842895c: movabs $0x118,%rbx
  0x0000000118428966: mov    (%rdi,%rbx,1),%rax
  0x000000011842896a: lea    0x1(%rax),%rax
  0x000000011842896e: mov    %rax,(%rdi,%rbx,1)
  0x0000000118428972: jne    0x0000000118428992  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)

  0x0000000118428978: movabs $0x1138eb460,%rsi  ;   {metadata(method data for {method} {0x00000001137aa0d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000000118428982: incl   0x128(%rsi)
  0x0000000118428988: mov    $0x0,%esi
  0x000000011842898d: jmpq   0x0000000118428a3d  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)

  0x0000000118428992: cmp    (%rsi),%rax        ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; implicit exception: dispatches to 0x0000000118428a63
  0x0000000118428995: mov    %rsi,%rdi
  0x0000000118428998: movabs $0x1138eb460,%rbx  ;   {metadata(method data for {method} {0x00000001137aa0d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000001184289a2: mov    0x8(%rdi),%edi
  0x00000001184289a5: shl    $0x3,%rdi
  0x00000001184289a9: cmp    0x148(%rbx),%rdi
  0x00000001184289b0: jne    0x00000001184289bf
  0x00000001184289b2: addq   $0x1,0x150(%rbx)
  0x00000001184289ba: jmpq   0x0000000118428a25
  0x00000001184289bf: cmp    0x158(%rbx),%rdi
  0x00000001184289c6: jne    0x00000001184289d5
  0x00000001184289c8: addq   $0x1,0x160(%rbx)
  0x00000001184289d0: jmpq   0x0000000118428a25
  0x00000001184289d5: cmpq   $0x0,0x148(%rbx)
  0x00000001184289e0: jne    0x00000001184289f9
  0x00000001184289e2: mov    %rdi,0x148(%rbx)
  0x00000001184289e9: movq   $0x1,0x150(%rbx)
  0x00000001184289f4: jmpq   0x0000000118428a25
  0x00000001184289f9: cmpq   $0x0,0x158(%rbx)
  0x0000000118428a04: jne    0x0000000118428a1d
  0x0000000118428a06: mov    %rdi,0x158(%rbx)
  0x0000000118428a0d: movq   $0x1,0x160(%rbx)
  0x0000000118428a18: jmpq   0x0000000118428a25
  0x0000000118428a1d: addq   $0x1,0x140(%rbx)
  0x0000000118428a25: movabs $0xffffffffffffffff,%rax
  0x0000000118428a2f: callq  0x00000001183622e0  ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {virtual_call}
  0x0000000118428a34: mov    %rax,%rsi
  0x0000000118428a37: shr    $0x10,%esi
  0x0000000118428a3a: xor    %rax,%rsi
  0x0000000118428a3d: mov    %rsi,%rax
  0x0000000118428a40: add    $0x30,%rsp
  0x0000000118428a44: pop    %rbp
  0x0000000118428a45: test   %eax,-0xb43694b(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x0000000118428a4b: retq   
  0x0000000118428a4c: mov    %rdi,0x8(%rsp)
  0x0000000118428a51: movq   $0xffffffffffffffff,(%rsp)
  0x0000000118428a59: callq  0x000000011841a2e0  ; OopMap{rsi=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ;   {runtime_call}
  0x0000000118428a5e: jmpq   0x000000011842893e
  0x0000000118428a63: callq  0x0000000118415c80  ; OopMap{rsi=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ;   {runtime_call}
  0x0000000118428a68: nop
  0x0000000118428a69: nop
  0x0000000118428a6a: mov    0x2a8(%r15),%rax
  0x0000000118428a71: movabs $0x0,%r10
  0x0000000118428a7b: mov    %r10,0x2a8(%r15)
  0x0000000118428a82: movabs $0x0,%r10
  0x0000000118428a8c: mov    %r10,0x2b0(%r15)
  0x0000000118428a93: add    $0x30,%rsp
  0x0000000118428a97: pop    %rbp
  0x0000000118428a98: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x0000000118428a9d: hlt    
  0x0000000118428a9e: hlt    
  0x0000000118428a9f: hlt    
[Stub Code]
  0x0000000118428aa0: nop                       ;   {no_reloc}
  0x0000000118428aa1: nop
  0x0000000118428aa2: nop
  0x0000000118428aa3: nop
  0x0000000118428aa4: nop
  0x0000000118428aa5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000118428aaf: jmpq   0x0000000118428aaf  ;   {runtime_call}
[Exception Handler]
  0x0000000118428ab4: callq  0x0000000118417b20  ;   {runtime_call}
  0x0000000118428ab9: mov    %rsp,-0x28(%rsp)
  0x0000000118428abe: sub    $0x80,%rsp
  0x0000000118428ac5: mov    %rax,0x78(%rsp)
  0x0000000118428aca: mov    %rcx,0x70(%rsp)
  0x0000000118428acf: mov    %rdx,0x68(%rsp)
  0x0000000118428ad4: mov    %rbx,0x60(%rsp)
  0x0000000118428ad9: mov    %rbp,0x50(%rsp)
  0x0000000118428ade: mov    %rsi,0x48(%rsp)
  0x0000000118428ae3: mov    %rdi,0x40(%rsp)
  0x0000000118428ae8: mov    %r8,0x38(%rsp)
  0x0000000118428aed: mov    %r9,0x30(%rsp)
  0x0000000118428af2: mov    %r10,0x28(%rsp)
  0x0000000118428af7: mov    %r11,0x20(%rsp)
  0x0000000118428afc: mov    %r12,0x18(%rsp)
  0x0000000118428b01: mov    %r13,0x10(%rsp)
  0x0000000118428b06: mov    %r14,0x8(%rsp)
  0x0000000118428b0b: mov    %r15,(%rsp)
  0x0000000118428b0f: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x0000000118428b19: movabs $0x118428ab9,%rsi  ;   {internal_word}
  0x0000000118428b23: mov    %rsp,%rdx
  0x0000000118428b26: and    $0xfffffffffffffff0,%rsp
  0x0000000118428b2a: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x0000000118428b2f: hlt    
[Deopt Handler Code]
  0x0000000118428b30: movabs $0x118428b30,%r10  ;   {section_word}
  0x0000000118428b3a: push   %r10
  0x0000000118428b3c: jmpq   0x0000000118363500  ;   {runtime_call}
  0x0000000118428b41: hlt    
  0x0000000118428b42: hlt    
  0x0000000118428b43: hlt    
  0x0000000118428b44: hlt    
  0x0000000118428b45: hlt    
  0x0000000118428b46: hlt    
  0x0000000118428b47: hlt    
Decoding compiled method 0x000000011842aad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList'
  # this:     rsi:rsi   = 'java/util/LinkedList'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x50]  (sp of caller)
  0x000000011842ac60: mov    0x8(%rsi),%r10d
  0x000000011842ac64: shl    $0x3,%r10
  0x000000011842ac68: cmp    %rax,%r10
  0x000000011842ac6b: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011842ac71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011842ac7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011842ac80: mov    %eax,-0x14000(%rsp)
  0x000000011842ac87: push   %rbp
  0x000000011842ac88: sub    $0x40,%rsp
  0x000000011842ac8c: mov    %rdx,0x30(%rsp)
  0x000000011842ac91: movabs $0x1138eb610,%rdi  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842ac9b: mov    0xdc(%rdi),%ebx
  0x000000011842aca1: add    $0x8,%ebx
  0x000000011842aca4: mov    %ebx,0xdc(%rdi)
  0x000000011842acaa: movabs $0x1138e7ac0,%rdi  ;   {metadata({method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842acb4: and    $0x1ff8,%ebx
  0x000000011842acba: cmp    $0x0,%ebx
  0x000000011842acbd: je     0x000000011842afd5  ;*iconst_0
                                                ; - java.util.LinkedList::indexOf@0 (line 596)

  0x000000011842acc3: cmp    $0x0,%rdx
  0x000000011842acc7: movabs $0x1138eb610,%rdi  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842acd1: movabs $0x108,%rbx
  0x000000011842acdb: jne    0x000000011842aceb
  0x000000011842ace1: movabs $0x118,%rbx
  0x000000011842aceb: mov    (%rdi,%rbx,1),%rax
  0x000000011842acef: lea    0x1(%rax),%rax
  0x000000011842acf3: mov    %rax,(%rdi,%rbx,1)
  0x000000011842acf7: jne    0x000000011842ade1  ;*ifnonnull
                                                ; - java.util.LinkedList::indexOf@3 (line 597)

  0x000000011842acfd: mov    0x14(%rsi),%edx
  0x000000011842ad00: shl    $0x3,%rdx          ;*getfield first
                                                ; - java.util.LinkedList::indexOf@7 (line 598)

  0x000000011842ad04: mov    $0x0,%esi
  0x000000011842ad09: jmpq   0x000000011842ada2  ;*aload_3
                                                ; - java.util.LinkedList::indexOf@11 (line 598)

  0x000000011842ad0e: xchg   %ax,%ax
  0x000000011842ad10: mov    0xc(%rdx),%edi     ; implicit exception: dispatches to 0x000000011842afec
  0x000000011842ad13: shl    $0x3,%rdi          ;*getfield item
                                                ; - java.util.LinkedList::indexOf@16 (line 599)

  0x000000011842ad17: cmp    $0x0,%rdi
  0x000000011842ad1b: movabs $0x1138eb610,%rdi  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842ad25: movabs $0x148,%rbx
  0x000000011842ad2f: jne    0x000000011842ad3f
  0x000000011842ad35: movabs $0x158,%rbx
  0x000000011842ad3f: mov    (%rdi,%rbx,1),%rax
  0x000000011842ad43: lea    0x1(%rax),%rax
  0x000000011842ad47: mov    %rax,(%rdi,%rbx,1)
  0x000000011842ad4b: je     0x000000011842afa5  ;*ifnonnull
                                                ; - java.util.LinkedList::indexOf@19 (line 599)

  0x000000011842ad51: inc    %esi
  0x000000011842ad53: mov    0x10(%rdx),%edx
  0x000000011842ad56: shl    $0x3,%rdx          ;*getfield next
                                                ; - java.util.LinkedList::indexOf@28 (line 598)

  0x000000011842ad5a: movabs $0x1138eb610,%rdi  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842ad64: mov    0xe0(%rdi),%ebx
  0x000000011842ad6a: add    $0x8,%ebx
  0x000000011842ad6d: mov    %ebx,0xe0(%rdi)
  0x000000011842ad73: movabs $0x1138e7ac0,%rdi  ;   {metadata({method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842ad7d: and    $0xfff8,%ebx
  0x000000011842ad83: cmp    $0x0,%ebx
  0x000000011842ad86: je     0x000000011842aff1  ; OopMap{rdx=Oop off=300}
                                                ;*goto
                                                ; - java.util.LinkedList::indexOf@32 (line 598)

  0x000000011842ad8c: test   %eax,-0xb438c92(%rip)        # 0x000000010cff2100
                                                ;   {poll}
  0x000000011842ad92: movabs $0x1138eb610,%rdi  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842ad9c: incl   0x168(%rdi)        ;*goto
                                                ; - java.util.LinkedList::indexOf@32 (line 598)

  0x000000011842ada2: cmp    $0x0,%rdx
  0x000000011842ada6: movabs $0x1138eb610,%rdi  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842adb0: movabs $0x128,%rbx
  0x000000011842adba: je     0x000000011842adca
  0x000000011842adc0: movabs $0x138,%rbx
  0x000000011842adca: mov    (%rdi,%rbx,1),%rax
  0x000000011842adce: lea    0x1(%rax),%rax
  0x000000011842add2: mov    %rax,(%rdi,%rbx,1)
  0x000000011842add6: je     0x000000011842afb4
  0x000000011842addc: jmpq   0x000000011842ad10  ;*ifnull
                                                ; - java.util.LinkedList::indexOf@12 (line 598)

  0x000000011842ade1: mov    0x14(%rsi),%esi
  0x000000011842ade4: shl    $0x3,%rsi          ;*getfield first
                                                ; - java.util.LinkedList::indexOf@39 (line 604)

  0x000000011842ade8: mov    $0x0,%edi
  0x000000011842aded: mov    %edi,0x20(%rsp)
  0x000000011842adf1: jmpq   0x000000011842af53  ;*aload_3
                                                ; - java.util.LinkedList::indexOf@43 (line 604)

  0x000000011842adf6: xchg   %ax,%ax
  0x000000011842adf8: mov    0xc(%rsi),%ebx     ; implicit exception: dispatches to 0x000000011842b008
  0x000000011842adfb: shl    $0x3,%rbx          ;*getfield item
                                                ; - java.util.LinkedList::indexOf@49 (line 605)

  0x000000011842adff: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000011842b00d
  0x000000011842ae02: mov    %rdx,%rax
  0x000000011842ae05: movabs $0x1138eb610,%rcx  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842ae0f: mov    0x8(%rax),%eax
  0x000000011842ae12: shl    $0x3,%rax
  0x000000011842ae16: cmp    0x1c0(%rcx),%rax
  0x000000011842ae1d: jne    0x000000011842ae2c
  0x000000011842ae1f: addq   $0x1,0x1c8(%rcx)
  0x000000011842ae27: jmpq   0x000000011842ae92
  0x000000011842ae2c: cmp    0x1d0(%rcx),%rax
  0x000000011842ae33: jne    0x000000011842ae42
  0x000000011842ae35: addq   $0x1,0x1d8(%rcx)
  0x000000011842ae3d: jmpq   0x000000011842ae92
  0x000000011842ae42: cmpq   $0x0,0x1c0(%rcx)
  0x000000011842ae4d: jne    0x000000011842ae66
  0x000000011842ae4f: mov    %rax,0x1c0(%rcx)
  0x000000011842ae56: movq   $0x1,0x1c8(%rcx)
  0x000000011842ae61: jmpq   0x000000011842ae92
  0x000000011842ae66: cmpq   $0x0,0x1d0(%rcx)
  0x000000011842ae71: jne    0x000000011842ae8a
  0x000000011842ae73: mov    %rax,0x1d0(%rcx)
  0x000000011842ae7a: movq   $0x1,0x1d8(%rcx)
  0x000000011842ae85: jmpq   0x000000011842ae92
  0x000000011842ae8a: addq   $0x1,0x1b8(%rcx)
  0x000000011842ae92: mov    %rdx,%rax
  0x000000011842ae95: mov    %rbx,%rdx
  0x000000011842ae98: mov    %rsi,0x28(%rsp)
  0x000000011842ae9d: mov    %rax,%rsi          ;*invokevirtual equals
                                                ; - java.util.LinkedList::indexOf@52 (line 605)

  0x000000011842aea0: nop
  0x000000011842aea1: nop
  0x000000011842aea2: nop
  0x000000011842aea3: nop
  0x000000011842aea4: nop
  0x000000011842aea5: movabs $0xffffffffffffffff,%rax
  0x000000011842aeaf: callq  0x00000001183622e0  ; OopMap{[40]=Oop [48]=Oop off=596}
                                                ;*invokevirtual equals
                                                ; - java.util.LinkedList::indexOf@52 (line 605)
                                                ;   {virtual_call}
  0x000000011842aeb4: cmp    $0x0,%eax
  0x000000011842aeb7: movabs $0x1138eb610,%rax  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842aec1: movabs $0x1e8,%rsi
  0x000000011842aecb: je     0x000000011842aedb
  0x000000011842aed1: movabs $0x1f8,%rsi
  0x000000011842aedb: mov    (%rax,%rsi,1),%rdi
  0x000000011842aedf: lea    0x1(%rdi),%rdi
  0x000000011842aee3: mov    %rdi,(%rax,%rsi,1)
  0x000000011842aee7: jne    0x000000011842af92  ;*ifeq
                                                ; - java.util.LinkedList::indexOf@55 (line 605)

  0x000000011842aeed: mov    0x28(%rsp),%rsi
  0x000000011842aef2: mov    0x20(%rsp),%edi
  0x000000011842aef6: inc    %edi
  0x000000011842aef8: mov    0x10(%rsi),%eax
  0x000000011842aefb: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.LinkedList::indexOf@64 (line 604)

  0x000000011842aeff: movabs $0x1138eb610,%rsi  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842af09: mov    0xe0(%rsi),%ebx
  0x000000011842af0f: add    $0x8,%ebx
  0x000000011842af12: mov    %ebx,0xe0(%rsi)
  0x000000011842af18: movabs $0x1138e7ac0,%rsi  ;   {metadata({method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842af22: and    $0xfff8,%ebx
  0x000000011842af28: cmp    $0x0,%ebx
  0x000000011842af2b: je     0x000000011842b012  ; OopMap{[48]=Oop rax=Oop off=721}
                                                ;*goto
                                                ; - java.util.LinkedList::indexOf@68 (line 604)

  0x000000011842af31: test   %eax,-0xb438e37(%rip)        # 0x000000010cff2100
                                                ;   {poll}
  0x000000011842af37: movabs $0x1138eb610,%rsi  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842af41: incl   0x208(%rsi)
  0x000000011842af47: mov    %rax,%rsi          ;*goto
                                                ; - java.util.LinkedList::indexOf@68 (line 604)

  0x000000011842af4a: mov    %edi,0x20(%rsp)
  0x000000011842af4e: mov    0x30(%rsp),%rdx
  0x000000011842af53: cmp    $0x0,%rsi
  0x000000011842af57: movabs $0x1138eb610,%rbx  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842af61: movabs $0x198,%rax
  0x000000011842af6b: je     0x000000011842af7b
  0x000000011842af71: movabs $0x1a8,%rax
  0x000000011842af7b: mov    (%rbx,%rax,1),%rcx
  0x000000011842af7f: lea    0x1(%rcx),%rcx
  0x000000011842af83: mov    %rcx,(%rbx,%rax,1)
  0x000000011842af87: je     0x000000011842afc4
  0x000000011842af8d: jmpq   0x000000011842adf8  ;*ifnull
                                                ; - java.util.LinkedList::indexOf@44 (line 604)

  0x000000011842af92: mov    0x20(%rsp),%edi
  0x000000011842af96: mov    %rdi,%rax
  0x000000011842af99: add    $0x40,%rsp
  0x000000011842af9d: pop    %rbp
  0x000000011842af9e: test   %eax,-0xb438ea4(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842afa4: retq                      ;*ireturn
                                                ; - java.util.LinkedList::indexOf@59 (line 606)

  0x000000011842afa5: mov    %rsi,%rax
  0x000000011842afa8: add    $0x40,%rsp
  0x000000011842afac: pop    %rbp
  0x000000011842afad: test   %eax,-0xb438eb3(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842afb3: retq                      ;*ireturn
                                                ; - java.util.LinkedList::indexOf@23 (line 600)

  0x000000011842afb4: movabs $0x1138eb610,%rax  ;   {metadata(method data for {method} {0x00000001138e7ac0} 'indexOf' '(Ljava/lang/Object;)I' in 'java/util/LinkedList')}
  0x000000011842afbe: incl   0x180(%rax)        ;*goto
                                                ; - java.util.LinkedList::indexOf@35 (line 598)

  0x000000011842afc4: mov    $0xffffffff,%eax
  0x000000011842afc9: add    $0x40,%rsp
  0x000000011842afcd: pop    %rbp
  0x000000011842afce: test   %eax,-0xb438ed4(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842afd4: retq   
  0x000000011842afd5: mov    %rdi,0x8(%rsp)
  0x000000011842afda: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842afe2: callq  0x000000011841a2e0  ; OopMap{rsi=Oop rdx=Oop [48]=Oop off=903}
                                                ;*synchronization entry
                                                ; - java.util.LinkedList::indexOf@-1 (line 596)
                                                ;   {runtime_call}
  0x000000011842afe7: jmpq   0x000000011842acc3
  0x000000011842afec: callq  0x0000000118415c80  ; OopMap{rdx=Oop off=913}
                                                ;*getfield item
                                                ; - java.util.LinkedList::indexOf@16 (line 599)
                                                ;   {runtime_call}
  0x000000011842aff1: mov    %rdi,0x8(%rsp)
  0x000000011842aff6: movq   $0x20,(%rsp)
  0x000000011842affe: callq  0x000000011841a2e0  ; OopMap{rdx=Oop off=931}
                                                ;*goto
                                                ; - java.util.LinkedList::indexOf@32 (line 598)
                                                ;   {runtime_call}
  0x000000011842b003: jmpq   0x000000011842ad8c
  0x000000011842b008: callq  0x0000000118415c80  ; OopMap{rdx=Oop [48]=Oop rsi=Oop off=941}
                                                ;*getfield item
                                                ; - java.util.LinkedList::indexOf@49 (line 605)
                                                ;   {runtime_call}
  0x000000011842b00d: callq  0x0000000118415c80  ; OopMap{rdx=Oop [48]=Oop rsi=Oop rbx=Oop off=946}
                                                ;*invokevirtual equals
                                                ; - java.util.LinkedList::indexOf@52 (line 605)
                                                ;   {runtime_call}
  0x000000011842b012: mov    %rsi,0x8(%rsp)
  0x000000011842b017: movq   $0x44,(%rsp)
  0x000000011842b01f: callq  0x000000011841a2e0  ; OopMap{[48]=Oop rax=Oop off=964}
                                                ;*goto
                                                ; - java.util.LinkedList::indexOf@68 (line 604)
                                                ;   {runtime_call}
  0x000000011842b024: jmpq   0x000000011842af31
  0x000000011842b029: nop
  0x000000011842b02a: nop
  0x000000011842b02b: mov    0x2a8(%r15),%rax
  0x000000011842b032: movabs $0x0,%r10
  0x000000011842b03c: mov    %r10,0x2a8(%r15)
  0x000000011842b043: movabs $0x0,%r10
  0x000000011842b04d: mov    %r10,0x2b0(%r15)
  0x000000011842b054: add    $0x40,%rsp
  0x000000011842b058: pop    %rbp
  0x000000011842b059: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011842b05e: hlt    
  0x000000011842b05f: hlt    
[Stub Code]
  0x000000011842b060: nop                       ;   {no_reloc}
  0x000000011842b061: nop
  0x000000011842b062: nop
  0x000000011842b063: nop
  0x000000011842b064: nop
  0x000000011842b065: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842b06f: jmpq   0x000000011842b06f  ;   {runtime_call}
[Exception Handler]
  0x000000011842b074: callq  0x0000000118417b20  ;   {runtime_call}
  0x000000011842b079: mov    %rsp,-0x28(%rsp)
  0x000000011842b07e: sub    $0x80,%rsp
  0x000000011842b085: mov    %rax,0x78(%rsp)
  0x000000011842b08a: mov    %rcx,0x70(%rsp)
  0x000000011842b08f: mov    %rdx,0x68(%rsp)
  0x000000011842b094: mov    %rbx,0x60(%rsp)
  0x000000011842b099: mov    %rbp,0x50(%rsp)
  0x000000011842b09e: mov    %rsi,0x48(%rsp)
  0x000000011842b0a3: mov    %rdi,0x40(%rsp)
  0x000000011842b0a8: mov    %r8,0x38(%rsp)
  0x000000011842b0ad: mov    %r9,0x30(%rsp)
  0x000000011842b0b2: mov    %r10,0x28(%rsp)
  0x000000011842b0b7: mov    %r11,0x20(%rsp)
  0x000000011842b0bc: mov    %r12,0x18(%rsp)
  0x000000011842b0c1: mov    %r13,0x10(%rsp)
  0x000000011842b0c6: mov    %r14,0x8(%rsp)
  0x000000011842b0cb: mov    %r15,(%rsp)
  0x000000011842b0cf: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011842b0d9: movabs $0x11842b079,%rsi  ;   {internal_word}
  0x000000011842b0e3: mov    %rsp,%rdx
  0x000000011842b0e6: and    $0xfffffffffffffff0,%rsp
  0x000000011842b0ea: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011842b0ef: hlt    
[Deopt Handler Code]
  0x000000011842b0f0: movabs $0x11842b0f0,%r10  ;   {section_word}
  0x000000011842b0fa: push   %r10
  0x000000011842b0fc: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011842b101: hlt    
  0x000000011842b102: hlt    
  0x000000011842b103: hlt    
  0x000000011842b104: hlt    
  0x000000011842b105: hlt    
  0x000000011842b106: hlt    
  0x000000011842b107: hlt    
Decoding compiled method 0x000000011842c910:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001136c1480} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000011842ca60: mov    0x8(%rsi),%r10d
  0x000000011842ca64: shl    $0x3,%r10
  0x000000011842ca68: cmp    %rax,%r10
  0x000000011842ca6b: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011842ca71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011842ca7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011842ca80: mov    %eax,-0x14000(%rsp)
  0x000000011842ca87: push   %rbp
  0x000000011842ca88: sub    $0x30,%rsp
  0x000000011842ca8c: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)

  0x000000011842ca8f: mov    %rsi,0x20(%rsp)
  0x000000011842ca94: callq  0x0000000118415ea0  ; OopMap{[32]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)
                                                ;   {runtime_call}
  0x000000011842ca99: add    $0x30,%rsp
  0x000000011842ca9d: pop    %rbp
  0x000000011842ca9e: test   %eax,-0xb43a9a4(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842caa4: retq   
  0x000000011842caa5: nop
  0x000000011842caa6: nop
  0x000000011842caa7: mov    0x2a8(%r15),%rax
  0x000000011842caae: movabs $0x0,%r10
  0x000000011842cab8: mov    %r10,0x2a8(%r15)
  0x000000011842cabf: movabs $0x0,%r10
  0x000000011842cac9: mov    %r10,0x2b0(%r15)
  0x000000011842cad0: add    $0x30,%rsp
  0x000000011842cad4: pop    %rbp
  0x000000011842cad5: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011842cada: hlt    
  0x000000011842cadb: hlt    
  0x000000011842cadc: hlt    
  0x000000011842cadd: hlt    
  0x000000011842cade: hlt    
  0x000000011842cadf: hlt    
[Exception Handler]
[Stub Code]
  0x000000011842cae0: callq  0x0000000118417b20  ;   {no_reloc}
  0x000000011842cae5: mov    %rsp,-0x28(%rsp)
  0x000000011842caea: sub    $0x80,%rsp
  0x000000011842caf1: mov    %rax,0x78(%rsp)
  0x000000011842caf6: mov    %rcx,0x70(%rsp)
  0x000000011842cafb: mov    %rdx,0x68(%rsp)
  0x000000011842cb00: mov    %rbx,0x60(%rsp)
  0x000000011842cb05: mov    %rbp,0x50(%rsp)
  0x000000011842cb0a: mov    %rsi,0x48(%rsp)
  0x000000011842cb0f: mov    %rdi,0x40(%rsp)
  0x000000011842cb14: mov    %r8,0x38(%rsp)
  0x000000011842cb19: mov    %r9,0x30(%rsp)
  0x000000011842cb1e: mov    %r10,0x28(%rsp)
  0x000000011842cb23: mov    %r11,0x20(%rsp)
  0x000000011842cb28: mov    %r12,0x18(%rsp)
  0x000000011842cb2d: mov    %r13,0x10(%rsp)
  0x000000011842cb32: mov    %r14,0x8(%rsp)
  0x000000011842cb37: mov    %r15,(%rsp)
  0x000000011842cb3b: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011842cb45: movabs $0x11842cae5,%rsi  ;   {internal_word}
  0x000000011842cb4f: mov    %rsp,%rdx
  0x000000011842cb52: and    $0xfffffffffffffff0,%rsp
  0x000000011842cb56: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011842cb5b: hlt    
[Deopt Handler Code]
  0x000000011842cb5c: movabs $0x11842cb5c,%r10  ;   {section_word}
  0x000000011842cb66: push   %r10
  0x000000011842cb68: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011842cb6d: hlt    
  0x000000011842cb6e: hlt    
  0x000000011842cb6f: hlt    
Decoding compiled method 0x000000011842e590:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001136c5618} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000011842e6e0: mov    0x8(%rsi),%r10d
  0x000000011842e6e4: shl    $0x3,%r10
  0x000000011842e6e8: cmp    %r10,%rax
  0x000000011842e6eb: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011842e6f1: data32 xchg %ax,%ax
  0x000000011842e6f4: nopl   0x0(%rax,%rax,1)
  0x000000011842e6fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011842e700: mov    %eax,-0x14000(%rsp)
  0x000000011842e707: push   %rbp
  0x000000011842e708: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x000000011842e70c: cmp    %rdx,%rsi
  0x000000011842e70f: je     0x000000011842e8ac  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000011842e715: test   %rdx,%rdx
  0x000000011842e718: je     0x000000011842e740
  0x000000011842e71a: mov    0x8(%rdx),%r11d
  0x000000011842e71e: cmp    $0xf80002da,%r11d  ;   {metadata('java/lang/String')}
  0x000000011842e725: jne    0x000000011842e8f5  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000011842e72b: mov    0xc(%rsi),%edi     ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000011842e72e: mov    0xc(%r12,%rdi,8),%eax  ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ; implicit exception: dispatches to 0x000000011842e90d
  0x000000011842e733: mov    0xc(%rdx),%r9d     ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000011842e737: mov    0xc(%r12,%r9,8),%ecx  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000011842e91d
  0x000000011842e73c: cmp    %ecx,%eax
  0x000000011842e73e: je     0x000000011842e74e  ;*iconst_0
                                                ; - java.lang.String::equals@79 (line 995)

  0x000000011842e740: xor    %eax,%eax          ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x000000011842e742: add    $0x30,%rsp
  0x000000011842e746: pop    %rbp
  0x000000011842e747: test   %eax,-0xb43c74d(%rip)        # 0x000000010cff2000
                                                ;   {poll_return}
  0x000000011842e74d: retq   
  0x000000011842e74e: test   %eax,%eax
  0x000000011842e750: je     0x000000011842e899  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000011842e756: mov    %eax,%r10d
  0x000000011842e759: dec    %r10d              ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000011842e75c: movslq %eax,%r11
  0x000000011842e75f: vmovq  %r11,%xmm0
  0x000000011842e764: lea    (%r12,%rdi,8),%r8
  0x000000011842e768: lea    (%r12,%r9,8),%r14
  0x000000011842e76c: mov    %eax,%r13d
  0x000000011842e76f: add    $0xfffffffffffffffe,%r13d
  0x000000011842e773: mov    $0xffffffff,%esi
  0x000000011842e778: cmp    %esi,%r13d
  0x000000011842e77b: cmovl  %esi,%r13d
  0x000000011842e77f: mov    %r10d,%ebx
  0x000000011842e782: xor    %r11d,%r11d
  0x000000011842e785: mov    %r10d,%edx
  0x000000011842e788: sub    %ebx,%edx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000011842e78a: cmp    %eax,%edx
  0x000000011842e78c: jae    0x000000011842e8b6
  0x000000011842e792: vmovd  %r10d,%xmm2
  0x000000011842e797: vmovd  %r11d,%xmm1
  0x000000011842e79c: movslq %ebx,%r11
  0x000000011842e79f: vmovq  %xmm0,%r10
  0x000000011842e7a4: sub    %r11,%r10
  0x000000011842e7a7: movzwl 0xe(%r8,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000011842e7ad: cmp    %ecx,%edx
  0x000000011842e7af: jae    0x000000011842e8d5  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000011842e7b5: movzwl 0xe(%r14,%r10,2),%r10d
  0x000000011842e7bb: cmp    %r10d,%ebp
  0x000000011842e7be: jne    0x000000011842e8a3  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000011842e7c4: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000011842e7c6: cmp    %r13d,%ebx
  0x000000011842e7c9: jle    0x000000011842e7d7  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000011842e7cb: vmovd  %xmm1,%r11d
  0x000000011842e7d0: vmovd  %xmm2,%r10d
  0x000000011842e7d5: jmp    0x000000011842e785
  0x000000011842e7d7: mov    %eax,%r11d
  0x000000011842e7da: sub    %ecx,%r11d
  0x000000011842e7dd: dec    %r11d
  0x000000011842e7e0: cmp    %esi,%r11d
  0x000000011842e7e3: cmovl  %esi,%r11d
  0x000000011842e7e7: mov    %r11d,%edx
  0x000000011842e7ea: add    $0x3,%edx
  0x000000011842e7ed: mov    $0x7fffffff,%r10d
  0x000000011842e7f3: cmp    %edx,%r11d
  0x000000011842e7f6: cmovg  %r10d,%edx
  0x000000011842e7fa: cmp    %edx,%ebx
  0x000000011842e7fc: jle    0x000000011842e863
  0x000000011842e7fe: xchg   %ax,%ax            ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000011842e800: movslq %ebx,%r10
  0x000000011842e803: vmovq  %xmm0,%rsi
  0x000000011842e808: sub    %r10,%rsi          ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000011842e80b: movzwl 0xe(%r14,%rsi,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000011842e811: movzwl 0xe(%r8,%rsi,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000011842e817: cmp    %r11d,%r10d
  0x000000011842e81a: jne    0x000000011842e8a3  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000011842e820: movzwl 0x10(%r14,%rsi,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000011842e826: movzwl 0x10(%r8,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000011842e82c: cmp    %r11d,%esi
  0x000000011842e82f: jne    0x000000011842e8a3  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000011842e831: mov    %eax,%r11d
  0x000000011842e834: sub    %ebx,%r11d
  0x000000011842e837: movslq %r11d,%r11
  0x000000011842e83a: movzwl 0x12(%r8,%r11,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000011842e840: movzwl 0x12(%r14,%r11,2),%esi  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000011842e846: cmp    %esi,%r10d
  0x000000011842e849: jne    0x000000011842e8a3  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000011842e84b: movzwl 0x14(%r14,%r11,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000011842e851: movzwl 0x14(%r8,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000011842e857: cmp    %r10d,%r11d
  0x000000011842e85a: jne    0x000000011842e8a3  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000011842e85c: add    $0xfffffffffffffffc,%ebx  ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000011842e85f: cmp    %edx,%ebx
  0x000000011842e861: jg     0x000000011842e800  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000011842e863: cmp    $0xffffffffffffffff,%ebx
  0x000000011842e866: je     0x000000011842e899
  0x000000011842e868: vmovd  %xmm2,%edx
  0x000000011842e86c: sub    %ebx,%edx          ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x000000011842e86e: cmp    %eax,%edx
  0x000000011842e870: jae    0x000000011842e8b6
  0x000000011842e872: movslq %ebx,%r11
  0x000000011842e875: vmovq  %xmm0,%r10
  0x000000011842e87a: sub    %r11,%r10
  0x000000011842e87d: movzwl 0xe(%r8,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000011842e883: cmp    %ecx,%edx
  0x000000011842e885: jae    0x000000011842e8d5  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000011842e887: movzwl 0xe(%r14,%r10,2),%r10d
  0x000000011842e88d: cmp    %r10d,%ebp
  0x000000011842e890: jne    0x000000011842e8a3  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000011842e892: dec    %ebx               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x000000011842e894: cmp    $0xffffffffffffffff,%ebx
  0x000000011842e897: jne    0x000000011842e868  ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x000000011842e899: mov    $0x1,%eax
  0x000000011842e89e: jmpq   0x000000011842e742
  0x000000011842e8a3: vmovd  %xmm1,%eax
  0x000000011842e8a7: jmpq   0x000000011842e742
  0x000000011842e8ac: mov    $0x1,%eax
  0x000000011842e8b1: jmpq   0x000000011842e742
  0x000000011842e8b6: mov    $0xffffffe4,%esi
  0x000000011842e8bb: mov    %ebx,%ebp
  0x000000011842e8bd: mov    %r9d,0x4(%rsp)
  0x000000011842e8c2: mov    %edi,0xc(%rsp)
  0x000000011842e8c6: mov    %edx,0x10(%rsp)
  0x000000011842e8ca: nop
  0x000000011842e8cb: callq  0x00000001183616a0  ; OopMap{[4]=NarrowOop [12]=NarrowOop off=496}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000011842e8d0: callq  0x000000010dc88e6c  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000011842e8d5: mov    $0xffffffe4,%esi
  0x000000011842e8da: mov    %ebx,(%rsp)
  0x000000011842e8dd: mov    %edi,0x4(%rsp)
  0x000000011842e8e1: mov    %r9d,0x10(%rsp)
  0x000000011842e8e6: mov    %edx,0x14(%rsp)
  0x000000011842e8ea: nop
  0x000000011842e8eb: callq  0x00000001183616a0  ; OopMap{[4]=NarrowOop [16]=NarrowOop off=528}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000011842e8f0: callq  0x000000010dc88e6c  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000011842e8f5: mov    %rsi,%rbp
  0x000000011842e8f8: mov    %rdx,0x8(%rsp)
  0x000000011842e8fd: mov    $0xffffffde,%esi
  0x000000011842e902: nop
  0x000000011842e903: callq  0x00000001183616a0  ; OopMap{rbp=Oop [8]=Oop off=552}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000011842e908: callq  0x000000010dc88e6c  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x000000011842e90d: mov    $0xfffffff6,%esi
  0x000000011842e912: nop
  0x000000011842e913: callq  0x00000001183616a0  ; OopMap{off=568}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000011842e918: callq  0x000000010dc88e6c  ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000011842e91d: mov    $0xfffffff6,%esi
  0x000000011842e922: nop
  0x000000011842e923: callq  0x00000001183616a0  ; OopMap{off=584}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000011842e928: callq  0x000000010dc88e6c  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000011842e92d: hlt    
  0x000000011842e92e: hlt    
  0x000000011842e92f: hlt    
  0x000000011842e930: hlt    
  0x000000011842e931: hlt    
  0x000000011842e932: hlt    
  0x000000011842e933: hlt    
  0x000000011842e934: hlt    
  0x000000011842e935: hlt    
  0x000000011842e936: hlt    
  0x000000011842e937: hlt    
  0x000000011842e938: hlt    
  0x000000011842e939: hlt    
  0x000000011842e93a: hlt    
  0x000000011842e93b: hlt    
  0x000000011842e93c: hlt    
  0x000000011842e93d: hlt    
  0x000000011842e93e: hlt    
  0x000000011842e93f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011842e940: jmpq   0x00000001183889a0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000011842e945: callq  0x000000011842e94a
  0x000000011842e94a: subq   $0x5,(%rsp)
  0x000000011842e94f: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011842e954: hlt    
  0x000000011842e955: hlt    
  0x000000011842e956: hlt    
  0x000000011842e957: hlt    
Decoding compiled method 0x000000011842edd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader'
  # this:     rsi:rsi   = 'java/io/BufferedReader'
  # parm0:    rdx       = boolean
  #           [sp+0xf0]  (sp of caller)
  0x000000011842f080: mov    0x8(%rsi),%r10d
  0x000000011842f084: shl    $0x3,%r10
  0x000000011842f088: cmp    %rax,%r10
  0x000000011842f08b: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011842f091: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011842f09c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011842f0a0: mov    %eax,-0x14000(%rsp)
  0x000000011842f0a7: push   %rbp
  0x000000011842f0a8: sub    $0xe0,%rsp
  0x000000011842f0af: mov    %rsi,0x70(%rsp)
  0x000000011842f0b4: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f0be: mov    0xdc(%rax),%edi
  0x000000011842f0c4: add    $0x8,%edi
  0x000000011842f0c7: mov    %edi,0xdc(%rax)
  0x000000011842f0cd: movabs $0x113848348,%rax  ;   {metadata({method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f0d7: and    $0x1ff8,%edi
  0x000000011842f0dd: cmp    $0x0,%edi
  0x000000011842f0e0: je     0x00000001184303ba  ;*aconst_null
                                                ; - java.io.BufferedReader::readLine@0 (line 313)

  0x000000011842f0e6: mov    0xc(%rsi),%edi
  0x000000011842f0e9: shl    $0x3,%rdi          ;*getfield lock
                                                ; - java.io.BufferedReader::readLine@3 (line 316)

  0x000000011842f0ed: mov    %rdi,0x88(%rsp)
  0x000000011842f0f5: lea    0xb0(%rsp),%rbx
  0x000000011842f0fd: mov    %rdi,0x8(%rbx)
  0x000000011842f101: mov    (%rdi),%rax        ; implicit exception: dispatches to 0x00000001184303d1
  0x000000011842f104: mov    %rax,%rcx
  0x000000011842f107: and    $0x7,%rcx
  0x000000011842f10b: cmp    $0x5,%rcx
  0x000000011842f10f: jne    0x000000011842f196
  0x000000011842f115: mov    0x8(%rdi),%ecx
  0x000000011842f118: shl    $0x3,%rcx
  0x000000011842f11c: mov    0xa8(%rcx),%rcx
  0x000000011842f123: or     %r15,%rcx
  0x000000011842f126: xor    %rax,%rcx
  0x000000011842f129: and    $0xffffffffffffff87,%rcx
  0x000000011842f12d: je     0x000000011842f1be
  0x000000011842f133: test   $0x7,%rcx
  0x000000011842f13a: jne    0x000000011842f183
  0x000000011842f13c: test   $0x300,%rcx
  0x000000011842f143: jne    0x000000011842f162
  0x000000011842f145: and    $0x37f,%rax
  0x000000011842f14c: mov    %rax,%rcx
  0x000000011842f14f: or     %r15,%rcx
  0x000000011842f152: lock cmpxchg %rcx,(%rdi)
  0x000000011842f157: jne    0x00000001184303d6
  0x000000011842f15d: jmpq   0x000000011842f1be
  0x000000011842f162: mov    0x8(%rdi),%ecx
  0x000000011842f165: shl    $0x3,%rcx
  0x000000011842f169: mov    0xa8(%rcx),%rcx
  0x000000011842f170: or     %r15,%rcx
  0x000000011842f173: lock cmpxchg %rcx,(%rdi)
  0x000000011842f178: jne    0x00000001184303d6
  0x000000011842f17e: jmpq   0x000000011842f1be
  0x000000011842f183: mov    0x8(%rdi),%ecx
  0x000000011842f186: shl    $0x3,%rcx
  0x000000011842f18a: mov    0xa8(%rcx),%rcx
  0x000000011842f191: lock cmpxchg %rcx,(%rdi)
  0x000000011842f196: mov    (%rdi),%rax
  0x000000011842f199: or     $0x1,%rax
  0x000000011842f19d: mov    %rax,(%rbx)
  0x000000011842f1a0: lock cmpxchg %rbx,(%rdi)
  0x000000011842f1a5: je     0x000000011842f1be
  0x000000011842f1ab: sub    %rsp,%rax
  0x000000011842f1ae: and    $0xfffffffffffff007,%rax
  0x000000011842f1b5: mov    %rax,(%rbx)
  0x000000011842f1b8: jne    0x00000001184303d6  ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)

  0x000000011842f1be: mov    %rsi,%rbx
  0x000000011842f1c1: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f1cb: addq   $0x1,0x108(%rax)
  0x000000011842f1d3: movabs $0x1138ee170,%rbx  ;   {metadata(method data for {method} {0x0000000113847c20} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x000000011842f1dd: mov    0xdc(%rbx),%eax
  0x000000011842f1e3: add    $0x8,%eax
  0x000000011842f1e6: mov    %eax,0xdc(%rbx)
  0x000000011842f1ec: movabs $0x113847c20,%rbx  ;   {metadata({method} {0x0000000113847c20} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x000000011842f1f6: and    $0x7ffff8,%eax
  0x000000011842f1fc: cmp    $0x0,%eax
  0x000000011842f1ff: je     0x00000001184303e9
  0x000000011842f205: mov    0x28(%rsi),%ebx
  0x000000011842f208: shl    $0x3,%rbx          ;*getfield in
                                                ; - java.io.BufferedReader::ensureOpen@1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000011842f20c: cmp    $0x0,%rbx
  0x000000011842f210: movabs $0x1138ee170,%rbx  ;   {metadata(method data for {method} {0x0000000113847c20} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x000000011842f21a: movabs $0x108,%rax
  0x000000011842f224: jne    0x000000011842f234
  0x000000011842f22a: movabs $0x118,%rax
  0x000000011842f234: mov    (%rbx,%rax,1),%rcx
  0x000000011842f238: lea    0x1(%rcx),%rcx
  0x000000011842f23c: mov    %rcx,(%rbx,%rax,1)
  0x000000011842f240: je     0x00000001184301bb  ;*ifnonnull
                                                ; - java.io.BufferedReader::ensureOpen@4 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x000000011842f246: cmp    $0x0,%edx
  0x000000011842f249: movabs $0x1138eb878,%rbx  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f253: movabs $0x118,%rax
  0x000000011842f25d: jne    0x000000011842f26d
  0x000000011842f263: movabs $0x128,%rax
  0x000000011842f26d: mov    (%rbx,%rax,1),%rdx
  0x000000011842f271: lea    0x1(%rdx),%rdx
  0x000000011842f275: mov    %rdx,(%rbx,%rax,1)
  0x000000011842f279: jne    0x000000011842f2bc  ;*ifne
                                                ; - java.io.BufferedReader::readLine@15 (line 318)

  0x000000011842f27f: movsbl 0x24(%rsi),%ebx    ;*getfield skipLF
                                                ; - java.io.BufferedReader::readLine@19 (line 318)

  0x000000011842f283: cmp    $0x0,%ebx
  0x000000011842f286: movabs $0x1138eb878,%rbx  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f290: movabs $0x138,%rax
  0x000000011842f29a: je     0x000000011842f2aa
  0x000000011842f2a0: movabs $0x148,%rax
  0x000000011842f2aa: mov    (%rbx,%rax,1),%rdx
  0x000000011842f2ae: lea    0x1(%rdx),%rdx
  0x000000011842f2b2: mov    %rdx,(%rbx,%rax,1)
  0x000000011842f2b6: je     0x000000011842f2d6  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@22 (line 318)

  0x000000011842f2bc: movabs $0x1138eb878,%rbx  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f2c6: incl   0x158(%rbx)
  0x000000011842f2cc: mov    $0x1,%ebx
  0x000000011842f2d1: jmpq   0x000000011842f2db  ;*goto
                                                ; - java.io.BufferedReader::readLine@26 (line 318)

  0x000000011842f2d6: mov    $0x0,%ebx          ;*istore
                                                ; - java.io.BufferedReader::readLine@30 (line 318)

  0x000000011842f2db: movabs $0x0,%rax          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@32 (line 323)
                                                ;   {oop(NULL)}
  0x000000011842f2e5: mov    %ebx,0x78(%rsp)
  0x000000011842f2e9: mov    %rax,0x80(%rsp)
  0x000000011842f2f1: nopl   0x0(%rax)
  0x000000011842f2f8: mov    0x18(%rsi),%edx    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@33 (line 323)

  0x000000011842f2fb: mov    0x14(%rsi),%ecx    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@37 (line 323)

  0x000000011842f2fe: cmp    %ecx,%edx
  0x000000011842f300: movabs $0x1138eb878,%rdx  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f30a: movabs $0x170,%rcx
  0x000000011842f314: jl     0x000000011842f324
  0x000000011842f31a: movabs $0x180,%rcx
  0x000000011842f324: mov    (%rdx,%rcx,1),%r8
  0x000000011842f328: lea    0x1(%r8),%r8
  0x000000011842f32c: mov    %r8,(%rdx,%rcx,1)
  0x000000011842f330: jl     0x000000011842f361  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@40 (line 323)

  0x000000011842f336: mov    %rsi,%rdx
  0x000000011842f339: movabs $0x1138eb878,%rcx  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f343: addq   $0x1,0x190(%rcx)
  0x000000011842f34b: mov    %rsi,%rdx
  0x000000011842f34e: mov    %rdx,%rsi          ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)

  0x000000011842f351: nop
  0x000000011842f352: nop
  0x000000011842f353: nop
  0x000000011842f354: nop
  0x000000011842f355: nop
  0x000000011842f356: nop
  0x000000011842f357: callq  0x00000001183620a0  ; OopMap{[112]=Oop [136]=Oop [128]=Oop [184]=Oop off=732}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)
                                                ;   {optimized virtual_call}
  0x000000011842f35c: mov    0x70(%rsp),%rsi
  0x000000011842f361: mov    0x18(%rsi),%edx    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@48 (line 325)

  0x000000011842f364: mov    0x14(%rsi),%edi    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@52 (line 325)

  0x000000011842f367: cmp    %edi,%edx
  0x000000011842f369: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f373: movabs $0x1a0,%rcx
  0x000000011842f37d: jl     0x000000011842f38d
  0x000000011842f383: movabs $0x1b0,%rcx
  0x000000011842f38d: mov    (%rax,%rcx,1),%rbx
  0x000000011842f391: lea    0x1(%rbx),%rbx
  0x000000011842f395: mov    %rbx,(%rax,%rcx,1)
  0x000000011842f399: jge    0x000000011842fe3a  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@55 (line 325)

  0x000000011842f39f: mov    0x78(%rsp),%ebx
  0x000000011842f3a3: cmp    $0x0,%ebx
  0x000000011842f3a6: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f3b0: movabs $0x260,%rcx
  0x000000011842f3ba: je     0x000000011842f3ca
  0x000000011842f3c0: movabs $0x270,%rcx
  0x000000011842f3ca: mov    (%rax,%rcx,1),%rbx
  0x000000011842f3ce: lea    0x1(%rbx),%rbx
  0x000000011842f3d2: mov    %rbx,(%rax,%rcx,1)
  0x000000011842f3d6: je     0x000000011842f432  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@90 (line 336)

  0x000000011842f3dc: mov    0x2c(%rsi),%eax
  0x000000011842f3df: shl    $0x3,%rax          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@94 (line 336)

  0x000000011842f3e3: movslq %edx,%rcx
  0x000000011842f3e6: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x0000000118430400
  0x000000011842f3e9: jae    0x000000011843040a
  0x000000011842f3ef: movzwl 0x10(%rax,%rcx,2),%eax  ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)

  0x000000011842f3f4: cmp    $0xa,%eax
  0x000000011842f3f7: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f401: movabs $0x280,%rcx
  0x000000011842f40b: jne    0x000000011842f41b
  0x000000011842f411: movabs $0x290,%rcx
  0x000000011842f41b: mov    (%rax,%rcx,1),%rbx
  0x000000011842f41f: lea    0x1(%rbx),%rbx
  0x000000011842f423: mov    %rbx,(%rax,%rcx,1)
  0x000000011842f427: jne    0x000000011842f432  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@104 (line 336)

  0x000000011842f42d: inc    %edx
  0x000000011842f42f: mov    %edx,0x18(%rsi)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@114 (line 337)

  0x000000011842f432: movb   $0x0,0x24(%rsi)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@119 (line 338)

  0x000000011842f436: mov    0x18(%rsi),%r8d    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@126 (line 342)

  0x000000011842f43a: mov    %r8,%r9
  0x000000011842f43d: mov    $0x0,%edx
  0x000000011842f442: jmpq   0x000000011842f51e  ;*iload
                                                ; - java.io.BufferedReader::readLine@131 (line 342)

  0x000000011842f447: nop
  0x000000011842f448: mov    0x2c(%rsi),%edx
  0x000000011842f44b: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@141 (line 343)

  0x000000011842f44f: movslq %r9d,%rax
  0x000000011842f452: cmp    0xc(%rdx),%r9d     ; implicit exception: dispatches to 0x0000000118430413
  0x000000011842f456: jae    0x000000011843041d
  0x000000011842f45c: movzwl 0x10(%rdx,%rax,2),%edx  ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)

  0x000000011842f461: cmp    $0xa,%edx
  0x000000011842f464: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f46e: movabs $0x2c0,%rcx
  0x000000011842f478: je     0x000000011842f488
  0x000000011842f47e: movabs $0x2d0,%rcx
  0x000000011842f488: mov    (%rax,%rcx,1),%rbx
  0x000000011842f48c: lea    0x1(%rbx),%rbx
  0x000000011842f490: mov    %rbx,(%rax,%rcx,1)
  0x000000011842f494: je     0x000000011842f561  ;*if_icmpeq
                                                ; - java.io.BufferedReader::readLine@153 (line 344)

  0x000000011842f49a: cmp    $0xd,%edx
  0x000000011842f49d: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f4a7: movabs $0x2e0,%rcx
  0x000000011842f4b1: jne    0x000000011842f4c1
  0x000000011842f4b7: movabs $0x2f0,%rcx
  0x000000011842f4c1: mov    (%rax,%rcx,1),%rbx
  0x000000011842f4c5: lea    0x1(%rbx),%rbx
  0x000000011842f4c9: mov    %rbx,(%rax,%rcx,1)
  0x000000011842f4cd: je     0x000000011842f561  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@160 (line 344)

  0x000000011842f4d3: inc    %r9d
  0x000000011842f4d6: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f4e0: mov    0xe0(%rax),%ecx
  0x000000011842f4e6: add    $0x8,%ecx
  0x000000011842f4e9: mov    %ecx,0xe0(%rax)
  0x000000011842f4ef: movabs $0x113848348,%rax  ;   {metadata({method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f4f9: and    $0xfff8,%ecx
  0x000000011842f4ff: cmp    $0x0,%ecx
  0x000000011842f502: je     0x0000000118430426  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop [184]=Oop off=1160}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x000000011842f508: test   %eax,-0xb43d40e(%rip)        # 0x000000010cff2100
                                                ;   {poll}
  0x000000011842f50e: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f518: incl   0x318(%rax)        ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x000000011842f51e: cmp    %edi,%r9d
  0x000000011842f521: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f52b: movabs $0x2a0,%rcx
  0x000000011842f535: jge    0x000000011842f545
  0x000000011842f53b: movabs $0x2b0,%rcx
  0x000000011842f545: mov    (%rax,%rcx,1),%rbx
  0x000000011842f549: lea    0x1(%rbx),%rbx
  0x000000011842f54d: mov    %rbx,(%rax,%rcx,1)
  0x000000011842f551: jl     0x000000011842f448  ;*if_icmpge
                                                ; - java.io.BufferedReader::readLine@137 (line 342)

  0x000000011842f557: mov    $0x0,%edi
  0x000000011842f55c: jmpq   0x000000011842f576  ;*aload_0
                                                ; - java.io.BufferedReader::readLine@175 (line 350)

  0x000000011842f561: movabs $0x1138eb878,%rdi  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f56b: incl   0x300(%rdi)
  0x000000011842f571: mov    $0x1,%edi          ;*goto
                                                ; - java.io.BufferedReader::readLine@166 (line 346)

  0x000000011842f576: mov    %r9d,0x18(%rsi)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@183 (line 351)

  0x000000011842f57a: cmp    $0x0,%edi
  0x000000011842f57d: movabs $0x1138eb878,%rdi  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f587: movabs $0x330,%rax
  0x000000011842f591: je     0x000000011842f5a1
  0x000000011842f597: movabs $0x340,%rax
  0x000000011842f5a1: mov    (%rdi,%rax,1),%rcx
  0x000000011842f5a5: lea    0x1(%rcx),%rcx
  0x000000011842f5a9: mov    %rcx,(%rdi,%rax,1)
  0x000000011842f5ad: mov    0x80(%rsp),%rax
  0x000000011842f5b5: jne    0x000000011842fa4b  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@188 (line 353)

  0x000000011842f5bb: cmp    $0x0,%rax
  0x000000011842f5bf: movabs $0x1138eb878,%rdx  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f5c9: movabs $0x418,%rdi
  0x000000011842f5d3: jne    0x000000011842f5e3
  0x000000011842f5d9: movabs $0x428,%rdi
  0x000000011842f5e3: mov    (%rdx,%rdi,1),%rcx
  0x000000011842f5e7: lea    0x1(%rcx),%rcx
  0x000000011842f5eb: mov    %rcx,(%rdx,%rdi,1)
  0x000000011842f5ef: je     0x000000011842f5fd  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@265 (line 368)

  0x000000011842f5f5: mov    %rsi,%r11
  0x000000011842f5f8: jmpq   0x000000011842f7c3  ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x000000011842f5fd: data32 xchg %ax,%ax
  0x000000011842f600: jmpq   0x000000011843044c  ;   {no_reloc}
  0x000000011842f605: add    %al,(%rax)
  0x000000011842f607: add    %al,(%rax)
  0x000000011842f609: add    %cl,-0x22(%rbx,%rcx,4)
  0x000000011842f60d: mov    0x60(%r15),%rax
  0x000000011842f611: lea    0x18(%rax),%rdi
  0x000000011842f615: cmp    0x70(%r15),%rdi
  0x000000011842f619: ja     0x0000000118430456
  0x000000011842f61f: mov    %rdi,0x60(%r15)
  0x000000011842f623: mov    0xa8(%rdx),%rcx
  0x000000011842f62a: mov    %rcx,(%rax)
  0x000000011842f62d: mov    %rdx,%rcx
  0x000000011842f630: shr    $0x3,%rcx
  0x000000011842f634: mov    %ecx,0x8(%rax)
  0x000000011842f637: xor    %rcx,%rcx
  0x000000011842f63a: mov    %ecx,0xc(%rax)
  0x000000011842f63d: xor    %rcx,%rcx
  0x000000011842f640: mov    %rcx,0x10(%rax)
  0x000000011842f644: mov    %rax,%r13          ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)

  0x000000011842f647: movabs $0x7955b1c68,%rbx  ;   {oop(a 'java/lang/Class' = 'java/io/BufferedReader')}
  0x000000011842f651: mov    0x74(%rbx),%ebx    ;*getstatic defaultExpectedLineLength
                                                ; - java.io.BufferedReader::readLine@272 (line 369)

  0x000000011842f654: mov    %r13,%rdx
  0x000000011842f657: movabs $0x1138eb878,%rsi  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f661: addq   $0x1,0x438(%rsi)
  0x000000011842f669: movabs $0x1138ee9f0,%rdx  ;   {metadata(method data for {method} {0x0000000113730c78} '<init>' '(I)V' in 'java/lang/StringBuffer')}
  0x000000011842f673: mov    0xdc(%rdx),%esi
  0x000000011842f679: add    $0x8,%esi
  0x000000011842f67c: mov    %esi,0xdc(%rdx)
  0x000000011842f682: movabs $0x113730c78,%rdx  ;   {metadata({method} {0x0000000113730c78} '<init>' '(I)V' in 'java/lang/StringBuffer')}
  0x000000011842f68c: and    $0x7ffff8,%esi
  0x000000011842f692: cmp    $0x0,%esi
  0x000000011842f695: je     0x0000000118430463
  0x000000011842f69b: mov    %r13,%rdx
  0x000000011842f69e: movabs $0x1138ee9f0,%rsi  ;   {metadata(method data for {method} {0x0000000113730c78} '<init>' '(I)V' in 'java/lang/StringBuffer')}
  0x000000011842f6a8: addq   $0x1,0x108(%rsi)
  0x000000011842f6b0: movabs $0x1138ea7f8,%rdx  ;   {metadata(method data for {method} {0x0000000113735590} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000011842f6ba: mov    0xdc(%rdx),%esi
  0x000000011842f6c0: add    $0x8,%esi
  0x000000011842f6c3: mov    %esi,0xdc(%rdx)
  0x000000011842f6c9: movabs $0x113735590,%rdx  ;   {metadata({method} {0x0000000113735590} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000011842f6d3: and    $0x7ffff8,%esi
  0x000000011842f6d9: cmp    $0x0,%esi
  0x000000011842f6dc: je     0x000000011843047a
  0x000000011842f6e2: mov    %r13,%rdx
  0x000000011842f6e5: movabs $0x1138ea7f8,%rsi  ;   {metadata(method data for {method} {0x0000000113735590} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000011842f6ef: addq   $0x1,0x108(%rsi)
  0x000000011842f6f7: movabs $0x1138376d8,%rdx  ;   {metadata(method data for {method} {0x00000001136c1480} '<init>' '()V' in 'java/lang/Object')}
  0x000000011842f701: mov    0xdc(%rdx),%esi
  0x000000011842f707: add    $0x8,%esi
  0x000000011842f70a: mov    %esi,0xdc(%rdx)
  0x000000011842f710: movabs $0x1136c1480,%rdx  ;   {metadata({method} {0x00000001136c1480} '<init>' '()V' in 'java/lang/Object')}
  0x000000011842f71a: and    $0x7ffff8,%esi
  0x000000011842f720: cmp    $0x0,%esi
  0x000000011842f723: je     0x0000000118430491
  0x000000011842f729: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000011842f733: movslq %ebx,%rbx
  0x000000011842f736: mov    %rbx,%rdi
  0x000000011842f739: cmp    $0xffffff,%rbx
  0x000000011842f740: ja     0x00000001184304a8
  0x000000011842f746: movabs $0x17,%rsi
  0x000000011842f750: lea    (%rsi,%rbx,2),%rsi
  0x000000011842f754: and    $0xfffffffffffffff8,%rsi
  0x000000011842f758: mov    0x60(%r15),%rax
  0x000000011842f75c: lea    (%rax,%rsi,1),%rsi
  0x000000011842f760: cmp    0x70(%r15),%rsi
  0x000000011842f764: ja     0x00000001184304a8
  0x000000011842f76a: mov    %rsi,0x60(%r15)
  0x000000011842f76e: sub    %rax,%rsi
  0x000000011842f771: movq   $0x1,(%rax)
  0x000000011842f778: mov    %rdx,%rcx
  0x000000011842f77b: shr    $0x3,%rcx
  0x000000011842f77f: mov    %ecx,0x8(%rax)
  0x000000011842f782: mov    %ebx,0xc(%rax)
  0x000000011842f785: sub    $0x10,%rsi
  0x000000011842f789: je     0x000000011842f7a0
  0x000000011842f78f: xor    %rbx,%rbx
  0x000000011842f792: shr    $0x3,%rsi
  0x000000011842f796: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011842f79b: dec    %rsi
  0x000000011842f79e: jne    0x000000011842f796  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x000000011842f7a0: mov    %rax,%r10
  0x000000011842f7a3: shr    $0x3,%r10
  0x000000011842f7a7: mov    %r10d,0x10(%r13)
  0x000000011842f7ab: mov    %r13,%rax
  0x000000011842f7ae: shr    $0x9,%rax
  0x000000011842f7b2: movabs $0x10b1ed000,%rdx
  0x000000011842f7bc: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x000000011842f7c0: mov    %r13,%rax          ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x000000011842f7c3: mov    0x2c(%r11),%edx
  0x000000011842f7c7: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@281 (line 370)

  0x000000011842f7cb: cmp    (%rax),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ; implicit exception: dispatches to 0x00000001184304b2
  0x000000011842f7ce: mov    %rax,%rcx
  0x000000011842f7d1: movabs $0x1138eb878,%rsi  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f7db: mov    0x8(%rcx),%ecx
  0x000000011842f7de: shl    $0x3,%rcx
  0x000000011842f7e2: cmp    0x450(%rsi),%rcx
  0x000000011842f7e9: jne    0x000000011842f7f8
  0x000000011842f7eb: addq   $0x1,0x458(%rsi)
  0x000000011842f7f3: jmpq   0x000000011842f85e
  0x000000011842f7f8: cmp    0x460(%rsi),%rcx
  0x000000011842f7ff: jne    0x000000011842f80e
  0x000000011842f801: addq   $0x1,0x468(%rsi)
  0x000000011842f809: jmpq   0x000000011842f85e
  0x000000011842f80e: cmpq   $0x0,0x450(%rsi)
  0x000000011842f819: jne    0x000000011842f832
  0x000000011842f81b: mov    %rcx,0x450(%rsi)
  0x000000011842f822: movq   $0x1,0x458(%rsi)
  0x000000011842f82d: jmpq   0x000000011842f85e
  0x000000011842f832: cmpq   $0x0,0x460(%rsi)
  0x000000011842f83d: jne    0x000000011842f856
  0x000000011842f83f: mov    %rcx,0x460(%rsi)
  0x000000011842f846: movq   $0x1,0x468(%rsi)
  0x000000011842f851: jmpq   0x000000011842f85e
  0x000000011842f856: addq   $0x1,0x448(%rsi)
  0x000000011842f85e: sub    %r8d,%r9d
  0x000000011842f861: lea    0xc0(%rsp),%rcx
  0x000000011842f869: mov    %rax,%rdi
  0x000000011842f86c: mov    %rdi,0x8(%rcx)
  0x000000011842f870: mov    (%rdi),%rax
  0x000000011842f873: mov    %rax,%rsi
  0x000000011842f876: and    $0x7,%rsi
  0x000000011842f87a: cmp    $0x5,%rsi
  0x000000011842f87e: jne    0x000000011842f905
  0x000000011842f884: mov    0x8(%rdi),%esi
  0x000000011842f887: shl    $0x3,%rsi
  0x000000011842f88b: mov    0xa8(%rsi),%rsi
  0x000000011842f892: or     %r15,%rsi
  0x000000011842f895: xor    %rax,%rsi
  0x000000011842f898: and    $0xffffffffffffff87,%rsi
  0x000000011842f89c: je     0x000000011842f92d
  0x000000011842f8a2: test   $0x7,%rsi
  0x000000011842f8a9: jne    0x000000011842f8f2
  0x000000011842f8ab: test   $0x300,%rsi
  0x000000011842f8b2: jne    0x000000011842f8d1
  0x000000011842f8b4: and    $0x37f,%rax
  0x000000011842f8bb: mov    %rax,%rsi
  0x000000011842f8be: or     %r15,%rsi
  0x000000011842f8c1: lock cmpxchg %rsi,(%rdi)
  0x000000011842f8c6: jne    0x00000001184304b7
  0x000000011842f8cc: jmpq   0x000000011842f92d
  0x000000011842f8d1: mov    0x8(%rdi),%esi
  0x000000011842f8d4: shl    $0x3,%rsi
  0x000000011842f8d8: mov    0xa8(%rsi),%rsi
  0x000000011842f8df: or     %r15,%rsi
  0x000000011842f8e2: lock cmpxchg %rsi,(%rdi)
  0x000000011842f8e7: jne    0x00000001184304b7
  0x000000011842f8ed: jmpq   0x000000011842f92d
  0x000000011842f8f2: mov    0x8(%rdi),%esi
  0x000000011842f8f5: shl    $0x3,%rsi
  0x000000011842f8f9: mov    0xa8(%rsi),%rsi
  0x000000011842f900: lock cmpxchg %rsi,(%rdi)
  0x000000011842f905: mov    (%rdi),%rax
  0x000000011842f908: or     $0x1,%rax
  0x000000011842f90c: mov    %rax,(%rcx)
  0x000000011842f90f: lock cmpxchg %rcx,(%rdi)
  0x000000011842f914: je     0x000000011842f92d
  0x000000011842f91a: sub    %rsp,%rax
  0x000000011842f91d: and    $0xfffffffffffff007,%rax
  0x000000011842f924: mov    %rax,(%rcx)
  0x000000011842f927: jne    0x00000001184304b7  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011842f92d: movabs $0x1138ee708,%rcx  ;   {metadata(method data for {method} {0x0000000113731a28} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000011842f937: mov    0xdc(%rcx),%esi
  0x000000011842f93d: add    $0x8,%esi
  0x000000011842f940: mov    %esi,0xdc(%rcx)
  0x000000011842f946: movabs $0x113731a28,%rcx  ;   {metadata({method} {0x0000000113731a28} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000011842f950: and    $0x7ffff8,%esi
  0x000000011842f956: cmp    $0x0,%esi
  0x000000011842f959: je     0x00000001184304ca
  0x000000011842f95f: movl   $0x0,0x14(%rdi)
  0x000000011842f966: mov    %rdi,%rax
  0x000000011842f969: shr    $0x9,%rax
  0x000000011842f96d: movabs $0x10b1ed000,%rcx
  0x000000011842f977: movb   $0x0,(%rax,%rcx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011842f97b: mov    %rdi,%rax
  0x000000011842f97e: movabs $0x1138ee708,%rcx  ;   {metadata(method data for {method} {0x0000000113731a28} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000011842f988: addq   $0x1,0x108(%rcx)
  0x000000011842f990: mov    %r8,%rcx
  0x000000011842f993: mov    %r9,%r8
  0x000000011842f996: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011842f999: mov    %rdi,0x90(%rsp)
  0x000000011842f9a1: nop
  0x000000011842f9a2: nop
  0x000000011842f9a3: nop
  0x000000011842f9a4: nop
  0x000000011842f9a5: nop
  0x000000011842f9a6: nop
  0x000000011842f9a7: callq  0x00000001183620a0  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop [200]=Oop off=2348}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {optimized virtual_call}
  0x000000011842f9ac: lea    0xc0(%rsp),%rax
  0x000000011842f9b4: mov    0x8(%rax),%rsi
  0x000000011842f9b8: mov    (%rsi),%rdx
  0x000000011842f9bb: and    $0x7,%rdx
  0x000000011842f9bf: cmp    $0x5,%rdx
  0x000000011842f9c3: je     0x000000011842f9e0
  0x000000011842f9c9: mov    (%rax),%rdx
  0x000000011842f9cc: test   %rdx,%rdx
  0x000000011842f9cf: je     0x000000011842f9e0
  0x000000011842f9d5: lock cmpxchg %rdx,(%rsi)
  0x000000011842f9da: jne    0x00000001184304e1  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011842f9e0: movabs $0x1138eb878,%rdx  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842f9ea: mov    0xe0(%rdx),%esi
  0x000000011842f9f0: add    $0x8,%esi
  0x000000011842f9f3: mov    %esi,0xe0(%rdx)
  0x000000011842f9f9: movabs $0x113848348,%rdx  ;   {metadata({method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842fa03: and    $0xfff8,%esi
  0x000000011842fa09: cmp    $0x0,%esi
  0x000000011842fa0c: je     0x00000001184304f7  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop off=2450}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x000000011842fa12: test   %eax,-0xb43d918(%rip)        # 0x000000010cff2100
                                                ;   {poll}
  0x000000011842fa18: movabs $0x1138eb878,%rdx  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842fa22: incl   0x478(%rdx)
  0x000000011842fa28: mov    0x90(%rsp),%rax
  0x000000011842fa30: mov    $0x0,%ebx
  0x000000011842fa35: mov    %ebx,0x78(%rsp)
  0x000000011842fa39: mov    %rax,0x80(%rsp)
  0x000000011842fa41: mov    0x70(%rsp),%rsi
  0x000000011842fa46: jmpq   0x000000011842f2f8  ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x000000011842fa4b: cmp    $0x0,%rax
  0x000000011842fa4f: movabs $0x1138eb878,%rsi  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842fa59: movabs $0x350,%rdi
  0x000000011842fa63: jne    0x000000011842fa73
  0x000000011842fa69: movabs $0x360,%rdi
  0x000000011842fa73: mov    (%rsi,%rdi,1),%rcx
  0x000000011842fa77: lea    0x1(%rcx),%rcx
  0x000000011842fa7b: mov    %rcx,(%rsi,%rdi,1)
  0x000000011842fa7f: mov    %edx,0x7c(%rsp)
  0x000000011842fa83: mov    0x70(%rsp),%rsi
  0x000000011842fa88: jne    0x000000011842fb29  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@192 (line 355)

  0x000000011842fa8e: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x000000011842fa98: mov    %rsi,%r11
  0x000000011842fa9b: mov    0x60(%r15),%rax
  0x000000011842fa9f: lea    0x18(%rax),%rdi
  0x000000011842faa3: cmp    0x70(%r15),%rdi
  0x000000011842faa7: ja     0x000000011843050e
  0x000000011842faad: mov    %rdi,0x60(%r15)
  0x000000011842fab1: mov    0xa8(%rdx),%rcx
  0x000000011842fab8: mov    %rcx,(%rax)
  0x000000011842fabb: mov    %rdx,%rcx
  0x000000011842fabe: shr    $0x3,%rcx
  0x000000011842fac2: mov    %ecx,0x8(%rax)
  0x000000011842fac5: xor    %rcx,%rcx
  0x000000011842fac8: mov    %ecx,0xc(%rax)
  0x000000011842facb: xor    %rcx,%rcx
  0x000000011842face: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)

  0x000000011842fad2: mov    0x2c(%r11),%edx
  0x000000011842fad6: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@200 (line 356)

  0x000000011842fada: mov    %rax,%rcx
  0x000000011842fadd: movabs $0x1138eb878,%rsi  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842fae7: addq   $0x1,0x370(%rsi)
  0x000000011842faef: sub    %r8d,%r9d
  0x000000011842faf2: mov    %r8,%rcx
  0x000000011842faf5: mov    %r9,%r8
  0x000000011842faf8: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedReader::readLine@208 (line 356)

  0x000000011842fafb: mov    %rax,0x98(%rsp)
  0x000000011842fb03: nop
  0x000000011842fb04: nop
  0x000000011842fb05: nop
  0x000000011842fb06: nop
  0x000000011842fb07: callq  0x00000001183620a0  ; OopMap{[136]=Oop [112]=Oop [152]=Oop [184]=Oop off=2700}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedReader::readLine@208 (line 356)
                                                ;   {optimized virtual_call}
  0x000000011842fb0c: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842fb16: incl   0x380(%rax)
  0x000000011842fb1c: mov    0x98(%rsp),%rsi
  0x000000011842fb24: jmpq   0x000000011842fde7  ;*goto
                                                ; - java.io.BufferedReader::readLine@213 (line 356)

  0x000000011842fb29: mov    0x2c(%rsi),%edx
  0x000000011842fb2c: shl    $0x3,%rdx          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@218 (line 358)

  0x000000011842fb30: cmp    (%rax),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ; implicit exception: dispatches to 0x000000011843051b
  0x000000011842fb33: mov    %rax,%rcx
  0x000000011842fb36: movabs $0x1138eb878,%rdi  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842fb40: mov    0x8(%rcx),%ecx
  0x000000011842fb43: shl    $0x3,%rcx
  0x000000011842fb47: cmp    0x3a0(%rdi),%rcx
  0x000000011842fb4e: jne    0x000000011842fb5d
  0x000000011842fb50: addq   $0x1,0x3a8(%rdi)
  0x000000011842fb58: jmpq   0x000000011842fbc3
  0x000000011842fb5d: cmp    0x3b0(%rdi),%rcx
  0x000000011842fb64: jne    0x000000011842fb73
  0x000000011842fb66: addq   $0x1,0x3b8(%rdi)
  0x000000011842fb6e: jmpq   0x000000011842fbc3
  0x000000011842fb73: cmpq   $0x0,0x3a0(%rdi)
  0x000000011842fb7e: jne    0x000000011842fb97
  0x000000011842fb80: mov    %rcx,0x3a0(%rdi)
  0x000000011842fb87: movq   $0x1,0x3a8(%rdi)
  0x000000011842fb92: jmpq   0x000000011842fbc3
  0x000000011842fb97: cmpq   $0x0,0x3b0(%rdi)
  0x000000011842fba2: jne    0x000000011842fbbb
  0x000000011842fba4: mov    %rcx,0x3b0(%rdi)
  0x000000011842fbab: movq   $0x1,0x3b8(%rdi)
  0x000000011842fbb6: jmpq   0x000000011842fbc3
  0x000000011842fbbb: addq   $0x1,0x398(%rdi)
  0x000000011842fbc3: sub    %r8d,%r9d
  0x000000011842fbc6: lea    0xc0(%rsp),%rcx
  0x000000011842fbce: mov    %rax,%rdi
  0x000000011842fbd1: mov    %rdi,0x8(%rcx)
  0x000000011842fbd5: mov    (%rdi),%rax
  0x000000011842fbd8: mov    %rax,%rbx
  0x000000011842fbdb: and    $0x7,%rbx
  0x000000011842fbdf: cmp    $0x5,%rbx
  0x000000011842fbe3: jne    0x000000011842fc6a
  0x000000011842fbe9: mov    0x8(%rdi),%ebx
  0x000000011842fbec: shl    $0x3,%rbx
  0x000000011842fbf0: mov    0xa8(%rbx),%rbx
  0x000000011842fbf7: or     %r15,%rbx
  0x000000011842fbfa: xor    %rax,%rbx
  0x000000011842fbfd: and    $0xffffffffffffff87,%rbx
  0x000000011842fc01: je     0x000000011842fc92
  0x000000011842fc07: test   $0x7,%rbx
  0x000000011842fc0e: jne    0x000000011842fc57
  0x000000011842fc10: test   $0x300,%rbx
  0x000000011842fc17: jne    0x000000011842fc36
  0x000000011842fc19: and    $0x37f,%rax
  0x000000011842fc20: mov    %rax,%rbx
  0x000000011842fc23: or     %r15,%rbx
  0x000000011842fc26: lock cmpxchg %rbx,(%rdi)
  0x000000011842fc2b: jne    0x0000000118430520
  0x000000011842fc31: jmpq   0x000000011842fc92
  0x000000011842fc36: mov    0x8(%rdi),%ebx
  0x000000011842fc39: shl    $0x3,%rbx
  0x000000011842fc3d: mov    0xa8(%rbx),%rbx
  0x000000011842fc44: or     %r15,%rbx
  0x000000011842fc47: lock cmpxchg %rbx,(%rdi)
  0x000000011842fc4c: jne    0x0000000118430520
  0x000000011842fc52: jmpq   0x000000011842fc92
  0x000000011842fc57: mov    0x8(%rdi),%ebx
  0x000000011842fc5a: shl    $0x3,%rbx
  0x000000011842fc5e: mov    0xa8(%rbx),%rbx
  0x000000011842fc65: lock cmpxchg %rbx,(%rdi)
  0x000000011842fc6a: mov    (%rdi),%rax
  0x000000011842fc6d: or     $0x1,%rax
  0x000000011842fc71: mov    %rax,(%rcx)
  0x000000011842fc74: lock cmpxchg %rcx,(%rdi)
  0x000000011842fc79: je     0x000000011842fc92
  0x000000011842fc7f: sub    %rsp,%rax
  0x000000011842fc82: and    $0xfffffffffffff007,%rax
  0x000000011842fc89: mov    %rax,(%rcx)
  0x000000011842fc8c: jne    0x0000000118430520  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000011842fc92: movabs $0x1138ee708,%rcx  ;   {metadata(method data for {method} {0x0000000113731a28} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000011842fc9c: mov    0xdc(%rcx),%ebx
  0x000000011842fca2: add    $0x8,%ebx
  0x000000011842fca5: mov    %ebx,0xdc(%rcx)
  0x000000011842fcab: movabs $0x113731a28,%rcx  ;   {metadata({method} {0x0000000113731a28} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000011842fcb5: and    $0x7ffff8,%ebx
  0x000000011842fcbb: cmp    $0x0,%ebx
  0x000000011842fcbe: je     0x0000000118430533
  0x000000011842fcc4: movl   $0x0,0x14(%rdi)
  0x000000011842fccb: mov    %rdi,%rax
  0x000000011842fcce: shr    $0x9,%rax
  0x000000011842fcd2: movabs $0x10b1ed000,%rcx
  0x000000011842fcdc: movb   $0x0,(%rax,%rcx,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000011842fce0: mov    %rdi,%rax
  0x000000011842fce3: movabs $0x1138ee708,%rcx  ;   {metadata(method data for {method} {0x0000000113731a28} 'append' '([CII)Ljava/lang/StringBuffer;' in 'java/lang/StringBuffer')}
  0x000000011842fced: addq   $0x1,0x108(%rcx)
  0x000000011842fcf5: mov    %r8,%rcx
  0x000000011842fcf8: mov    %r9,%r8
  0x000000011842fcfb: mov    %rdi,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000011842fcfe: mov    %rdi,0x80(%rsp)
  0x000000011842fd06: nop
  0x000000011842fd07: callq  0x00000001183620a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop [200]=Oop off=3212}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {optimized virtual_call}
  0x000000011842fd0c: lea    0xc0(%rsp),%rax
  0x000000011842fd14: mov    0x8(%rax),%rdi
  0x000000011842fd18: mov    (%rdi),%rsi
  0x000000011842fd1b: and    $0x7,%rsi
  0x000000011842fd1f: cmp    $0x5,%rsi
  0x000000011842fd23: je     0x000000011842fd40
  0x000000011842fd29: mov    (%rax),%rsi
  0x000000011842fd2c: test   %rsi,%rsi
  0x000000011842fd2f: je     0x000000011842fd40
  0x000000011842fd35: lock cmpxchg %rsi,(%rdi)
  0x000000011842fd3a: jne    0x000000011843054a  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x000000011842fd40: mov    0x80(%rsp),%rax
  0x000000011842fd48: movabs $0x1138eb878,%rsi  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842fd52: mov    0x8(%rax),%eax
  0x000000011842fd55: shl    $0x3,%rax
  0x000000011842fd59: cmp    0x3d0(%rsi),%rax
  0x000000011842fd60: jne    0x000000011842fd6f
  0x000000011842fd62: addq   $0x1,0x3d8(%rsi)
  0x000000011842fd6a: jmpq   0x000000011842fdd5
  0x000000011842fd6f: cmp    0x3e0(%rsi),%rax
  0x000000011842fd76: jne    0x000000011842fd85
  0x000000011842fd78: addq   $0x1,0x3e8(%rsi)
  0x000000011842fd80: jmpq   0x000000011842fdd5
  0x000000011842fd85: cmpq   $0x0,0x3d0(%rsi)
  0x000000011842fd90: jne    0x000000011842fda9
  0x000000011842fd92: mov    %rax,0x3d0(%rsi)
  0x000000011842fd99: movq   $0x1,0x3d8(%rsi)
  0x000000011842fda4: jmpq   0x000000011842fdd5
  0x000000011842fda9: cmpq   $0x0,0x3e0(%rsi)
  0x000000011842fdb4: jne    0x000000011842fdcd
  0x000000011842fdb6: mov    %rax,0x3e0(%rsi)
  0x000000011842fdbd: movq   $0x1,0x3e8(%rsi)
  0x000000011842fdc8: jmpq   0x000000011842fdd5
  0x000000011842fdcd: addq   $0x1,0x3c8(%rsi)
  0x000000011842fdd5: mov    0x80(%rsp),%rsi    ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)

  0x000000011842fddd: nop
  0x000000011842fdde: nop
  0x000000011842fddf: callq  0x00000001183620a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=3428}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)
                                                ;   {optimized virtual_call}
  0x000000011842fde4: mov    %rax,%rsi          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@236 (line 361)

  0x000000011842fde7: mov    0x7c(%rsp),%ebx
  0x000000011842fdeb: mov    0x70(%rsp),%rdi
  0x000000011842fdf0: mov    0x18(%rdi),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@238 (line 361)

  0x000000011842fdf3: inc    %eax
  0x000000011842fdf5: mov    %eax,0x18(%rdi)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@243 (line 361)

  0x000000011842fdf8: cmp    $0xd,%ebx
  0x000000011842fdfb: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842fe05: movabs $0x3f8,%rbx
  0x000000011842fe0f: jne    0x000000011842fe1f
  0x000000011842fe15: movabs $0x408,%rbx
  0x000000011842fe1f: mov    (%rax,%rbx,1),%rdx
  0x000000011842fe23: lea    0x1(%rdx),%rdx
  0x000000011842fe27: mov    %rdx,(%rax,%rbx,1)
  0x000000011842fe2b: jne    0x0000000118430175  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@250 (line 362)

  0x000000011842fe31: movb   $0x1,0x24(%rdi)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@255 (line 363)

  0x000000011842fe35: jmpq   0x0000000118430175  ;*aload
                                                ; - java.io.BufferedReader::readLine@258 (line 365)

  0x000000011842fe3a: mov    0x80(%rsp),%rsi
  0x000000011842fe42: cmp    $0x0,%rsi
  0x000000011842fe46: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842fe50: movabs $0x1c0,%rdi
  0x000000011842fe5a: je     0x000000011842fe6a
  0x000000011842fe60: movabs $0x1d0,%rdi
  0x000000011842fe6a: mov    (%rax,%rdi,1),%rbx
  0x000000011842fe6e: lea    0x1(%rbx),%rbx
  0x000000011842fe72: mov    %rbx,(%rax,%rdi,1)
  0x000000011842fe76: je     0x0000000118430048  ;*ifnull
                                                ; - java.io.BufferedReader::readLine@59 (line 326)

  0x000000011842fe7c: cmp    (%rsi),%rax        ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ; implicit exception: dispatches to 0x0000000118430560
  0x000000011842fe7f: mov    %rsi,%rax
  0x000000011842fe82: movabs $0x1138eb878,%rdi  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011842fe8c: mov    0x8(%rax),%eax
  0x000000011842fe8f: shl    $0x3,%rax
  0x000000011842fe93: cmp    0x1e8(%rdi),%rax
  0x000000011842fe9a: jne    0x000000011842fea9
  0x000000011842fe9c: addq   $0x1,0x1f0(%rdi)
  0x000000011842fea4: jmpq   0x000000011842ff0f
  0x000000011842fea9: cmp    0x1f8(%rdi),%rax
  0x000000011842feb0: jne    0x000000011842febf
  0x000000011842feb2: addq   $0x1,0x200(%rdi)
  0x000000011842feba: jmpq   0x000000011842ff0f
  0x000000011842febf: cmpq   $0x0,0x1e8(%rdi)
  0x000000011842feca: jne    0x000000011842fee3
  0x000000011842fecc: mov    %rax,0x1e8(%rdi)
  0x000000011842fed3: movq   $0x1,0x1f0(%rdi)
  0x000000011842fede: jmpq   0x000000011842ff0f
  0x000000011842fee3: cmpq   $0x0,0x1f8(%rdi)
  0x000000011842feee: jne    0x000000011842ff07
  0x000000011842fef0: mov    %rax,0x1f8(%rdi)
  0x000000011842fef7: movq   $0x1,0x200(%rdi)
  0x000000011842ff02: jmpq   0x000000011842ff0f
  0x000000011842ff07: addq   $0x1,0x1e0(%rdi)
  0x000000011842ff0f: lea    0xc0(%rsp),%rdi
  0x000000011842ff17: mov    %rsi,0x8(%rdi)
  0x000000011842ff1b: mov    (%rsi),%rax
  0x000000011842ff1e: mov    %rax,%rbx
  0x000000011842ff21: and    $0x7,%rbx
  0x000000011842ff25: cmp    $0x5,%rbx
  0x000000011842ff29: jne    0x000000011842ffb0
  0x000000011842ff2f: mov    0x8(%rsi),%ebx
  0x000000011842ff32: shl    $0x3,%rbx
  0x000000011842ff36: mov    0xa8(%rbx),%rbx
  0x000000011842ff3d: or     %r15,%rbx
  0x000000011842ff40: xor    %rax,%rbx
  0x000000011842ff43: and    $0xffffffffffffff87,%rbx
  0x000000011842ff47: je     0x000000011842ffd8
  0x000000011842ff4d: test   $0x7,%rbx
  0x000000011842ff54: jne    0x000000011842ff9d
  0x000000011842ff56: test   $0x300,%rbx
  0x000000011842ff5d: jne    0x000000011842ff7c
  0x000000011842ff5f: and    $0x37f,%rax
  0x000000011842ff66: mov    %rax,%rbx
  0x000000011842ff69: or     %r15,%rbx
  0x000000011842ff6c: lock cmpxchg %rbx,(%rsi)
  0x000000011842ff71: jne    0x0000000118430565
  0x000000011842ff77: jmpq   0x000000011842ffd8
  0x000000011842ff7c: mov    0x8(%rsi),%ebx
  0x000000011842ff7f: shl    $0x3,%rbx
  0x000000011842ff83: mov    0xa8(%rbx),%rbx
  0x000000011842ff8a: or     %r15,%rbx
  0x000000011842ff8d: lock cmpxchg %rbx,(%rsi)
  0x000000011842ff92: jne    0x0000000118430565
  0x000000011842ff98: jmpq   0x000000011842ffd8
  0x000000011842ff9d: mov    0x8(%rsi),%ebx
  0x000000011842ffa0: shl    $0x3,%rbx
  0x000000011842ffa4: mov    0xa8(%rbx),%rbx
  0x000000011842ffab: lock cmpxchg %rbx,(%rsi)
  0x000000011842ffb0: mov    (%rsi),%rax
  0x000000011842ffb3: or     $0x1,%rax
  0x000000011842ffb7: mov    %rax,(%rdi)
  0x000000011842ffba: lock cmpxchg %rdi,(%rsi)
  0x000000011842ffbf: je     0x000000011842ffd8
  0x000000011842ffc5: sub    %rsp,%rax
  0x000000011842ffc8: and    $0xfffffffffffff007,%rax
  0x000000011842ffcf: mov    %rax,(%rdi)
  0x000000011842ffd2: jne    0x0000000118430565  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000011842ffd8: mov    0xc(%rsi),%edi     ;*getfield count
                                                ; - java.lang.StringBuffer::length@1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000011842ffdb: lea    0xc0(%rsp),%rax
  0x000000011842ffe3: mov    0x8(%rax),%rdx
  0x000000011842ffe7: mov    (%rdx),%rbx
  0x000000011842ffea: and    $0x7,%rbx
  0x000000011842ffee: cmp    $0x5,%rbx
  0x000000011842fff2: je     0x000000011843000f
  0x000000011842fff8: mov    (%rax),%rbx
  0x000000011842fffb: test   %rbx,%rbx
  0x000000011842fffe: je     0x000000011843000f
  0x0000000118430004: lock cmpxchg %rbx,(%rdx)
  0x0000000118430009: jne    0x0000000118430578  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x000000011843000f: cmp    $0x0,%edi
  0x0000000118430012: movabs $0x1138eb878,%rax  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x000000011843001c: movabs $0x210,%rdi
  0x0000000118430026: jle    0x0000000118430036
  0x000000011843002c: movabs $0x220,%rdi
  0x0000000118430036: mov    (%rax,%rdi,1),%rbx
  0x000000011843003a: lea    0x1(%rbx),%rbx
  0x000000011843003e: mov    %rbx,(%rax,%rdi,1)
  0x0000000118430042: jg     0x0000000118430095  ;*ifle
                                                ; - java.io.BufferedReader::readLine@66 (line 326)

  0x0000000118430048: lea    0xb0(%rsp),%rax
  0x0000000118430050: mov    0x8(%rax),%rdi
  0x0000000118430054: mov    (%rdi),%rsi
  0x0000000118430057: and    $0x7,%rsi
  0x000000011843005b: cmp    $0x5,%rsi
  0x000000011843005f: je     0x000000011843007c
  0x0000000118430065: mov    (%rax),%rsi
  0x0000000118430068: test   %rsi,%rsi
  0x000000011843006b: je     0x000000011843007c
  0x0000000118430071: lock cmpxchg %rsi,(%rdi)
  0x0000000118430076: jne    0x000000011843058e  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@80 (line 329)

  0x000000011843007c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000118430086: add    $0xe0,%rsp
  0x000000011843008d: pop    %rbp
  0x000000011843008e: test   %eax,-0xb43df94(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x0000000118430094: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@81 (line 329)

  0x0000000118430095: mov    %rsi,%rax
  0x0000000118430098: movabs $0x1138eb878,%rdi  ;   {metadata(method data for {method} {0x0000000113848348} 'readLine' '(Z)Ljava/lang/String;' in 'java/io/BufferedReader')}
  0x00000001184300a2: mov    0x8(%rax),%eax
  0x00000001184300a5: shl    $0x3,%rax
  0x00000001184300a9: cmp    0x238(%rdi),%rax
  0x00000001184300b0: jne    0x00000001184300bf
  0x00000001184300b2: addq   $0x1,0x240(%rdi)
  0x00000001184300ba: jmpq   0x0000000118430125
  0x00000001184300bf: cmp    0x248(%rdi),%rax
  0x00000001184300c6: jne    0x00000001184300d5
  0x00000001184300c8: addq   $0x1,0x250(%rdi)
  0x00000001184300d0: jmpq   0x0000000118430125
  0x00000001184300d5: cmpq   $0x0,0x238(%rdi)
  0x00000001184300e0: jne    0x00000001184300f9
  0x00000001184300e2: mov    %rax,0x238(%rdi)
  0x00000001184300e9: movq   $0x1,0x240(%rdi)
  0x00000001184300f4: jmpq   0x0000000118430125
  0x00000001184300f9: cmpq   $0x0,0x248(%rdi)
  0x0000000118430104: jne    0x000000011843011d
  0x0000000118430106: mov    %rax,0x248(%rdi)
  0x000000011843010d: movq   $0x1,0x250(%rdi)
  0x0000000118430118: jmpq   0x0000000118430125
  0x000000011843011d: addq   $0x1,0x230(%rdi)
  0x0000000118430125: nop
  0x0000000118430126: nop
  0x0000000118430127: callq  0x00000001183620a0  ; OopMap{[136]=Oop [184]=Oop off=4268}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)
                                                ;   {optimized virtual_call}
  0x000000011843012c: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x000000011843012f: lea    0xb0(%rsp),%rax
  0x0000000118430137: mov    0x8(%rax),%rdi
  0x000000011843013b: mov    (%rdi),%rsi
  0x000000011843013e: and    $0x7,%rsi
  0x0000000118430142: cmp    $0x5,%rsi
  0x0000000118430146: je     0x0000000118430163
  0x000000011843014c: mov    (%rax),%rsi
  0x000000011843014f: test   %rsi,%rsi
  0x0000000118430152: je     0x0000000118430163
  0x0000000118430158: lock cmpxchg %rsi,(%rdi)
  0x000000011843015d: jne    0x00000001184305a4  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@75 (line 327)

  0x0000000118430163: mov    %rdx,%rax
  0x0000000118430166: add    $0xe0,%rsp
  0x000000011843016d: pop    %rbp
  0x000000011843016e: test   %eax,-0xb43e074(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x0000000118430174: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@76 (line 327)

  0x0000000118430175: lea    0xb0(%rsp),%rax
  0x000000011843017d: mov    0x8(%rax),%rdi
  0x0000000118430181: mov    (%rdi),%rdx
  0x0000000118430184: and    $0x7,%rdx
  0x0000000118430188: cmp    $0x5,%rdx
  0x000000011843018c: je     0x00000001184301a9
  0x0000000118430192: mov    (%rax),%rdx
  0x0000000118430195: test   %rdx,%rdx
  0x0000000118430198: je     0x00000001184301a9
  0x000000011843019e: lock cmpxchg %rdx,(%rdi)
  0x00000001184301a3: jne    0x00000001184305ba  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@262 (line 365)

  0x00000001184301a9: mov    %rsi,%rax
  0x00000001184301ac: add    $0xe0,%rsp
  0x00000001184301b3: pop    %rbp
  0x00000001184301b4: test   %eax,-0xb43e0ba(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x00000001184301ba: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@263 (line 365)

  0x00000001184301bb: mov    %edx,0xa8(%rsp)
  0x00000001184301c2: nopw   0x0(%rax,%rax,1)
  0x00000001184301c8: jmpq   0x00000001184305df  ;   {no_reloc}
  0x00000001184301cd: add    %al,(%rax)
  0x00000001184301cf: add    %al,(%rax)
  0x00000001184301d1: add    %ch,%cl
  0x00000001184301d3: adc    (%rax,%rax,1),%al
  0x00000001184301d6: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x00000001184301d9: rorb   -0x45(%rax)        ;   {metadata(method data for {method} {0x0000000113847c20} 'ensureOpen' '()V' in 'java/io/BufferedReader')}
  0x00000001184301dc: jo     0x00000001184301bf
  0x00000001184301de: mov    (%rbx),%ss
  0x00000001184301e0: add    %eax,(%rax)
  0x00000001184301e2: add    %al,(%rax)
  0x00000001184301e4: addq   $0x1,0x128(%rbx)
  0x00000001184301ec: movabs $0x7956266a0,%rdx  ;   {oop("Stream closed")}
  0x00000001184301f6: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x00000001184301f9: mov    %rax,0xa0(%rsp)
  0x0000000118430201: nop
  0x0000000118430202: nop
  0x0000000118430203: nop
  0x0000000118430204: nop
  0x0000000118430205: nop
  0x0000000118430206: nop
  0x0000000118430207: callq  0x00000001183620a0  ; OopMap{[136]=Oop [160]=Oop [112]=Oop [184]=Oop off=4492}
                                                ;*invokespecial <init>
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {optimized virtual_call}
  0x000000011843020c: mov    0xa0(%rsp),%rax    ; OopMap{[136]=Oop [112]=Oop [184]=Oop rax=Oop off=4500}
                                                ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000118430214: movabs $0x118430214,%rdx  ;   {section_word}
  0x000000011843021e: callq  0x0000000118388020  ;   {runtime_call}
  0x0000000118430223: nop                       ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000118430224: mov    0x2a8(%r15),%rax
  0x000000011843022b: xor    %r10,%r10
  0x000000011843022e: mov    %r10,0x2a8(%r15)
  0x0000000118430235: xor    %r10,%r10
  0x0000000118430238: mov    %r10,0x2b0(%r15)
  0x000000011843023f: mov    %rax,%rdx
  0x0000000118430242: lea    0xc0(%rsp),%rax
  0x000000011843024a: mov    0x8(%rax),%rbx
  0x000000011843024e: mov    (%rbx),%rdi
  0x0000000118430251: and    $0x7,%rdi
  0x0000000118430255: cmp    $0x5,%rdi
  0x0000000118430259: je     0x0000000118430276
  0x000000011843025f: mov    (%rax),%rdi
  0x0000000118430262: test   %rdi,%rdi
  0x0000000118430265: je     0x0000000118430276
  0x000000011843026b: lock cmpxchg %rdi,(%rbx)
  0x0000000118430270: jne    0x00000001184305f6  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000118430276: mov    %rdx,%rax          ; OopMap{rsi=Oop [136]=Oop [184]=Oop rax=Oop off=4601}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000118430279: movabs $0x118430279,%rdx  ;   {section_word}
  0x0000000118430283: callq  0x0000000118388020  ;   {runtime_call}
  0x0000000118430288: nop                       ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000118430289: mov    0x2a8(%r15),%rax
  0x0000000118430290: xor    %r10,%r10
  0x0000000118430293: mov    %r10,0x2a8(%r15)
  0x000000011843029a: xor    %r10,%r10
  0x000000011843029d: mov    %r10,0x2b0(%r15)
  0x00000001184302a4: mov    %rax,%rdx
  0x00000001184302a7: lea    0xc0(%rsp),%rax
  0x00000001184302af: mov    0x8(%rax),%rcx
  0x00000001184302b3: mov    (%rcx),%rdi
  0x00000001184302b6: and    $0x7,%rdi
  0x00000001184302ba: cmp    $0x5,%rdi
  0x00000001184302be: je     0x00000001184302db
  0x00000001184302c4: mov    (%rax),%rdi
  0x00000001184302c7: test   %rdi,%rdi
  0x00000001184302ca: je     0x00000001184302db
  0x00000001184302d0: lock cmpxchg %rdi,(%rcx)
  0x00000001184302d5: jne    0x000000011843060c  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x00000001184302db: mov    %rdx,%rax          ; OopMap{[112]=Oop [136]=Oop rsi=Oop [184]=Oop rax=Oop off=4702}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x00000001184302de: movabs $0x1184302de,%rdx  ;   {section_word}
  0x00000001184302e8: callq  0x0000000118388020  ;   {runtime_call}
  0x00000001184302ed: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x00000001184302ee: mov    0x88(%rsp),%rbx
  0x00000001184302f6: mov    0x70(%rsp),%rsi
  0x00000001184302fb: mov    0x2a8(%r15),%rax
  0x0000000118430302: xor    %r10,%r10
  0x0000000118430305: mov    %r10,0x2a8(%r15)
  0x000000011843030c: xor    %r10,%r10
  0x000000011843030f: mov    %r10,0x2b0(%r15)
  0x0000000118430316: mov    %rax,%rdx
  0x0000000118430319: lea    0xc0(%rsp),%rax
  0x0000000118430321: mov    0x8(%rax),%r8
  0x0000000118430325: mov    (%r8),%rcx
  0x0000000118430328: and    $0x7,%rcx
  0x000000011843032c: cmp    $0x5,%rcx
  0x0000000118430330: je     0x000000011843034d
  0x0000000118430336: mov    (%rax),%rcx
  0x0000000118430339: test   %rcx,%rcx
  0x000000011843033c: je     0x000000011843034d
  0x0000000118430342: lock cmpxchg %rcx,(%r8)
  0x0000000118430347: jne    0x0000000118430622  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x000000011843034d: mov    %rdx,%rax          ; OopMap{rdi=Oop rsi=Oop [112]=Oop rbx=Oop [136]=Oop [184]=Oop rax=Oop off=4816}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000118430350: movabs $0x118430350,%rdx  ;   {section_word}
  0x000000011843035a: callq  0x0000000118388020  ;   {runtime_call}
  0x000000011843035f: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000118430360: mov    0x2a8(%r15),%rax
  0x0000000118430367: xor    %r10,%r10
  0x000000011843036a: mov    %r10,0x2a8(%r15)
  0x0000000118430371: xor    %r10,%r10
  0x0000000118430374: mov    %r10,0x2b0(%r15)
  0x000000011843037b: mov    %rax,%rsi
  0x000000011843037e: lea    0xb0(%rsp),%rax
  0x0000000118430386: mov    0x8(%rax),%rbx
  0x000000011843038a: mov    (%rbx),%rdi
  0x000000011843038d: and    $0x7,%rdi
  0x0000000118430391: cmp    $0x5,%rdi
  0x0000000118430395: je     0x00000001184303b2
  0x000000011843039b: mov    (%rax),%rdi
  0x000000011843039e: test   %rdi,%rdi
  0x00000001184303a1: je     0x00000001184303b2
  0x00000001184303a7: lock cmpxchg %rdi,(%rbx)
  0x00000001184303ac: jne    0x0000000118430638  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@300 (line 372)

  0x00000001184303b2: mov    %rsi,%rax
  0x00000001184303b5: jmpq   0x0000000118430697
  0x00000001184303ba: mov    %rax,0x8(%rsp)
  0x00000001184303bf: movq   $0xffffffffffffffff,(%rsp)
  0x00000001184303c7: callq  0x000000011841a2e0  ; OopMap{rsi=Oop [112]=Oop off=4940}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::readLine@-1 (line 313)
                                                ;   {runtime_call}
  0x00000001184303cc: jmpq   0x000000011842f0e6
  0x00000001184303d1: callq  0x0000000118415c80  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop off=4950}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x00000001184303d6: mov    %rdi,0x8(%rsp)
  0x00000001184303db: mov    %rbx,(%rsp)
  0x00000001184303df: callq  0x0000000118418660  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop off=4964}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x00000001184303e4: jmpq   0x000000011842f1be
  0x00000001184303e9: mov    %rbx,0x8(%rsp)
  0x00000001184303ee: movq   $0xffffffffffffffff,(%rsp)
  0x00000001184303f6: callq  0x000000011841a2e0  ; OopMap{rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop off=4987}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::ensureOpen@-1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x00000001184303fb: jmpq   0x000000011842f205
  0x0000000118430400: callq  0x0000000118415c80  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=4997}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x0000000118430405: callq  0x0000000118415c80  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=5002}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x000000011843040a: mov    %rdx,(%rsp)
  0x000000011843040e: callq  0x0000000118388240  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rax=Oop [184]=Oop off=5011}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x0000000118430413: callq  0x0000000118415c80  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5016}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x0000000118430418: callq  0x0000000118415c80  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5021}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x000000011843041d: mov    %r9,(%rsp)
  0x0000000118430421: callq  0x0000000118388240  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop rdx=Oop [184]=Oop off=5030}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x0000000118430426: mov    %rax,0x8(%rsp)
  0x000000011843042b: movq   $0xac,(%rsp)
  0x0000000118430433: callq  0x000000011841a2e0  ; OopMap{[136]=Oop [128]=Oop rsi=Oop [112]=Oop [184]=Oop off=5048}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)
                                                ;   {runtime_call}
  0x0000000118430438: jmpq   0x000000011842f508
  0x000000011843043d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000118430447: mov    $0xa050f00,%eax
  0x000000011843044c: callq  0x00000001184192e0  ; OopMap{[136]=Oop rsi=Oop [112]=Oop [184]=Oop off=5073}
                                                ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)
                                                ;   {runtime_call}
  0x0000000118430451: jmpq   0x000000011842f600
  0x0000000118430456: mov    %rdx,%rdx
  0x0000000118430459: callq  0x00000001184163e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5086}
                                                ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)
                                                ;   {runtime_call}
  0x000000011843045e: jmpq   0x000000011842f644
  0x0000000118430463: mov    %rdx,0x8(%rsp)
  0x0000000118430468: movq   $0xffffffffffffffff,(%rsp)
  0x0000000118430470: callq  0x000000011841a2e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5109}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::<init>@-1 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000118430475: jmpq   0x000000011842f69b
  0x000000011843047a: mov    %rdx,0x8(%rsp)
  0x000000011843047f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000118430487: callq  0x000000011841a2e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5132}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x000000011843048c: jmpq   0x000000011842f6e2
  0x0000000118430491: mov    %rdx,0x8(%rsp)
  0x0000000118430496: movq   $0xffffffffffffffff,(%rsp)
  0x000000011843049e: callq  0x000000011841a2e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5155}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x00000001184304a3: jmpq   0x000000011842f729
  0x00000001184304a8: callq  0x0000000118416ce0  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5165}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuffer::<init>@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x00000001184304ad: jmpq   0x000000011842f7a0
  0x00000001184304b2: callq  0x0000000118415c80  ; OopMap{[136]=Oop r11=Oop [112]=Oop rax=Oop rdx=Oop [184]=Oop off=5175}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x00000001184304b7: mov    %rdi,0x8(%rsp)
  0x00000001184304bc: mov    %rcx,(%rsp)
  0x00000001184304c0: callq  0x0000000118418660  ; OopMap{[136]=Oop r11=Oop [112]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5189}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x00000001184304c5: jmpq   0x000000011842f92d
  0x00000001184304ca: mov    %rcx,0x8(%rsp)
  0x00000001184304cf: movq   $0xffffffffffffffff,(%rsp)
  0x00000001184304d7: callq  0x000000011841a2e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5212}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x00000001184304dc: jmpq   0x000000011842f95f
  0x00000001184304e1: lea    0xc0(%rsp),%rax
  0x00000001184304e9: mov    %rax,(%rsp)
  0x00000001184304ed: callq  0x0000000118418aa0  ;   {runtime_call}
  0x00000001184304f2: jmpq   0x000000011842f9e0
  0x00000001184304f7: mov    %rdx,0x8(%rsp)
  0x00000001184304fc: movq   $0x125,(%rsp)
  0x0000000118430504: callq  0x000000011841a2e0  ; OopMap{[136]=Oop [112]=Oop [144]=Oop [184]=Oop off=5257}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)
                                                ;   {runtime_call}
  0x0000000118430509: jmpq   0x000000011842fa12
  0x000000011843050e: mov    %rdx,%rdx
  0x0000000118430511: callq  0x00000001184163e0  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5270}
                                                ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)
                                                ;   {runtime_call}
  0x0000000118430516: jmpq   0x000000011842fad2
  0x000000011843051b: callq  0x0000000118415c80  ; OopMap{rsi=Oop [112]=Oop rax=Oop [136]=Oop rdx=Oop [184]=Oop off=5280}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x0000000118430520: mov    %rdi,0x8(%rsp)
  0x0000000118430525: mov    %rcx,(%rsp)
  0x0000000118430529: callq  0x0000000118418660  ; OopMap{rsi=Oop [112]=Oop [136]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5294}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x000000011843052e: jmpq   0x000000011842fc92
  0x0000000118430533: mov    %rcx,0x8(%rsp)
  0x0000000118430538: movq   $0xffffffffffffffff,(%rsp)
  0x0000000118430540: callq  0x000000011841a2e0  ; OopMap{rsi=Oop [112]=Oop [136]=Oop rdx=Oop rdi=Oop [184]=Oop [200]=Oop off=5317}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x0000000118430545: jmpq   0x000000011842fcc4
  0x000000011843054a: lea    0xc0(%rsp),%rax
  0x0000000118430552: mov    %rax,(%rsp)
  0x0000000118430556: callq  0x0000000118418aa0  ;   {runtime_call}
  0x000000011843055b: jmpq   0x000000011842fd40
  0x0000000118430560: callq  0x0000000118415c80  ; OopMap{[136]=Oop rsi=Oop [184]=Oop off=5349}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x0000000118430565: mov    %rsi,0x8(%rsp)
  0x000000011843056a: mov    %rdi,(%rsp)
  0x000000011843056e: callq  0x0000000118418660  ; OopMap{[136]=Oop rsi=Oop [184]=Oop [200]=Oop off=5363}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x0000000118430573: jmpq   0x000000011842ffd8
  0x0000000118430578: lea    0xc0(%rsp),%rax
  0x0000000118430580: mov    %rax,(%rsp)
  0x0000000118430584: callq  0x0000000118418aa0  ;   {runtime_call}
  0x0000000118430589: jmpq   0x000000011843000f
  0x000000011843058e: lea    0xb0(%rsp),%rax
  0x0000000118430596: mov    %rax,(%rsp)
  0x000000011843059a: callq  0x0000000118418aa0  ;   {runtime_call}
  0x000000011843059f: jmpq   0x000000011843007c
  0x00000001184305a4: lea    0xb0(%rsp),%rax
  0x00000001184305ac: mov    %rax,(%rsp)
  0x00000001184305b0: callq  0x0000000118418aa0  ;   {runtime_call}
  0x00000001184305b5: jmpq   0x0000000118430163
  0x00000001184305ba: lea    0xb0(%rsp),%rax
  0x00000001184305c2: mov    %rax,(%rsp)
  0x00000001184305c6: callq  0x0000000118418aa0  ;   {runtime_call}
  0x00000001184305cb: jmpq   0x00000001184301a9
  0x00000001184305d0: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000001184305da: mov    $0xa050f00,%eax
  0x00000001184305df: callq  0x00000001184192e0  ; OopMap{[112]=Oop [136]=Oop [184]=Oop off=5476}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x00000001184305e4: jmpq   0x00000001184301c8
  0x00000001184305e9: mov    %rdx,%rdx
  0x00000001184305ec: callq  0x0000000118416120  ; OopMap{[112]=Oop [136]=Oop [184]=Oop off=5489}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x00000001184305f1: jmpq   0x00000001184301d7
  0x00000001184305f6: lea    0xc0(%rsp),%rax
  0x00000001184305fe: mov    %rax,(%rsp)
  0x0000000118430602: callq  0x0000000118418aa0  ;   {runtime_call}
  0x0000000118430607: jmpq   0x0000000118430276
  0x000000011843060c: lea    0xc0(%rsp),%rax
  0x0000000118430614: mov    %rax,(%rsp)
  0x0000000118430618: callq  0x0000000118418aa0  ;   {runtime_call}
  0x000000011843061d: jmpq   0x00000001184302db
  0x0000000118430622: lea    0xc0(%rsp),%rax
  0x000000011843062a: mov    %rax,(%rsp)
  0x000000011843062e: callq  0x0000000118418aa0  ;   {runtime_call}
  0x0000000118430633: jmpq   0x000000011843034d
  0x0000000118430638: lea    0xb0(%rsp),%rax
  0x0000000118430640: mov    %rax,(%rsp)
  0x0000000118430644: callq  0x0000000118418aa0  ;   {runtime_call}
  0x0000000118430649: jmpq   0x00000001184303b2
  0x000000011843064e: mov    0x90(%rsp),%rdi
  0x0000000118430656: jmpq   0x00000001184302ee
  0x000000011843065b: mov    0x7c(%rsp),%ebx
  0x000000011843065f: mov    0x80(%rsp),%rsi
  0x0000000118430667: jmpq   0x0000000118430289
  0x000000011843066c: nop
  0x000000011843066d: nop
  0x000000011843066e: mov    0x2a8(%r15),%rax
  0x0000000118430675: movabs $0x0,%r10
  0x000000011843067f: mov    %r10,0x2a8(%r15)
  0x0000000118430686: movabs $0x0,%r10
  0x0000000118430690: mov    %r10,0x2b0(%r15)
  0x0000000118430697: add    $0xe0,%rsp
  0x000000011843069e: pop    %rbp
  0x000000011843069f: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x00000001184306a4: hlt    
  0x00000001184306a5: hlt    
  0x00000001184306a6: hlt    
  0x00000001184306a7: hlt    
  0x00000001184306a8: hlt    
  0x00000001184306a9: hlt    
  0x00000001184306aa: hlt    
  0x00000001184306ab: hlt    
  0x00000001184306ac: hlt    
  0x00000001184306ad: hlt    
  0x00000001184306ae: hlt    
  0x00000001184306af: hlt    
  0x00000001184306b0: hlt    
  0x00000001184306b1: hlt    
  0x00000001184306b2: hlt    
  0x00000001184306b3: hlt    
  0x00000001184306b4: hlt    
  0x00000001184306b5: hlt    
  0x00000001184306b6: hlt    
  0x00000001184306b7: hlt    
  0x00000001184306b8: hlt    
  0x00000001184306b9: hlt    
  0x00000001184306ba: hlt    
  0x00000001184306bb: hlt    
  0x00000001184306bc: hlt    
  0x00000001184306bd: hlt    
  0x00000001184306be: hlt    
  0x00000001184306bf: hlt    
[Stub Code]
  0x00000001184306c0: nop                       ;   {no_reloc}
  0x00000001184306c1: nop
  0x00000001184306c2: nop
  0x00000001184306c3: nop
  0x00000001184306c4: nop
  0x00000001184306c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001184306cf: jmpq   0x00000001184306cf  ;   {runtime_call}
  0x00000001184306d4: nop
  0x00000001184306d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001184306df: jmpq   0x00000001184306df  ;   {runtime_call}
  0x00000001184306e4: nop
  0x00000001184306e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001184306ef: jmpq   0x00000001184306ef  ;   {runtime_call}
  0x00000001184306f4: nop
  0x00000001184306f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001184306ff: jmpq   0x00000001184306ff  ;   {runtime_call}
  0x0000000118430704: nop
  0x0000000118430705: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011843070f: jmpq   0x000000011843070f  ;   {runtime_call}
  0x0000000118430714: nop
  0x0000000118430715: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011843071f: jmpq   0x000000011843071f  ;   {runtime_call}
  0x0000000118430724: nop
  0x0000000118430725: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011843072f: jmpq   0x000000011843072f  ;   {runtime_call}
[Exception Handler]
  0x0000000118430734: callq  0x0000000118417b20  ;   {runtime_call}
  0x0000000118430739: mov    %rsp,-0x28(%rsp)
  0x000000011843073e: sub    $0x80,%rsp
  0x0000000118430745: mov    %rax,0x78(%rsp)
  0x000000011843074a: mov    %rcx,0x70(%rsp)
  0x000000011843074f: mov    %rdx,0x68(%rsp)
  0x0000000118430754: mov    %rbx,0x60(%rsp)
  0x0000000118430759: mov    %rbp,0x50(%rsp)
  0x000000011843075e: mov    %rsi,0x48(%rsp)
  0x0000000118430763: mov    %rdi,0x40(%rsp)
  0x0000000118430768: mov    %r8,0x38(%rsp)
  0x000000011843076d: mov    %r9,0x30(%rsp)
  0x0000000118430772: mov    %r10,0x28(%rsp)
  0x0000000118430777: mov    %r11,0x20(%rsp)
  0x000000011843077c: mov    %r12,0x18(%rsp)
  0x0000000118430781: mov    %r13,0x10(%rsp)
  0x0000000118430786: mov    %r14,0x8(%rsp)
  0x000000011843078b: mov    %r15,(%rsp)
  0x000000011843078f: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x0000000118430799: movabs $0x118430739,%rsi  ;   {internal_word}
  0x00000001184307a3: mov    %rsp,%rdx
  0x00000001184307a6: and    $0xfffffffffffffff0,%rsp
  0x00000001184307aa: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x00000001184307af: hlt    
[Deopt Handler Code]
  0x00000001184307b0: movabs $0x1184307b0,%r10  ;   {section_word}
  0x00000001184307ba: push   %r10
  0x00000001184307bc: jmpq   0x0000000118363500  ;   {runtime_call}
  0x00000001184307c1: hlt    
  0x00000001184307c2: hlt    
  0x00000001184307c3: hlt    
  0x00000001184307c4: hlt    
  0x00000001184307c5: hlt    
  0x00000001184307c6: hlt    
  0x00000001184307c7: hlt    
Decoding compiled method 0x000000011842b410:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx       = int
  # parm1:    rcx:rcx   = 'java/lang/Object'
  #           [sp+0x60]  (sp of caller)
  0x000000011842b5e0: mov    0x8(%rsi),%r10d
  0x000000011842b5e4: shl    $0x3,%r10
  0x000000011842b5e8: cmp    %rax,%r10
  0x000000011842b5eb: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011842b5f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011842b5fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011842b600: mov    %eax,-0x14000(%rsp)
  0x000000011842b607: push   %rbp
  0x000000011842b608: sub    $0x50,%rsp
  0x000000011842b60c: mov    %edx,0x28(%rsp)
  0x000000011842b610: mov    %rcx,0x30(%rsp)
  0x000000011842b615: movabs $0x1138f1b28,%rdi  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b61f: mov    0xdc(%rdi),%ebx
  0x000000011842b625: add    $0x8,%ebx
  0x000000011842b628: mov    %ebx,0xdc(%rdi)
  0x000000011842b62e: movabs $0x1137aaa80,%rdi  ;   {metadata({method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b638: and    $0x1ff8,%ebx
  0x000000011842b63e: cmp    $0x0,%ebx
  0x000000011842b641: je     0x000000011842be17  ;*aload_0
                                                ; - java.util.HashMap::getNode@0 (line 569)

  0x000000011842b647: mov    0x24(%rsi),%esi
  0x000000011842b64a: shl    $0x3,%rsi          ;*getfield table
                                                ; - java.util.HashMap::getNode@1 (line 569)

  0x000000011842b64e: cmp    $0x0,%rsi
  0x000000011842b652: movabs $0x1138f1b28,%rdi  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b65c: movabs $0x108,%rbx
  0x000000011842b666: je     0x000000011842b676
  0x000000011842b66c: movabs $0x118,%rbx
  0x000000011842b676: mov    (%rdi,%rbx,1),%rax
  0x000000011842b67a: lea    0x1(%rax),%rax
  0x000000011842b67e: mov    %rax,(%rdi,%rbx,1)
  0x000000011842b682: je     0x000000011842bc62  ;*ifnull
                                                ; - java.util.HashMap::getNode@6 (line 569)

  0x000000011842b688: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 569)
                                                ; implicit exception: dispatches to 0x000000011842be2e
  0x000000011842b68b: cmp    $0x0,%edi
  0x000000011842b68e: movabs $0x1138f1b28,%rbx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b698: movabs $0x128,%rax
  0x000000011842b6a2: jle    0x000000011842b6b2
  0x000000011842b6a8: movabs $0x138,%rax
  0x000000011842b6b2: mov    (%rbx,%rax,1),%r8
  0x000000011842b6b6: lea    0x1(%r8),%r8
  0x000000011842b6ba: mov    %r8,(%rbx,%rax,1)
  0x000000011842b6be: jle    0x000000011842bc62  ;*ifle
                                                ; - java.util.HashMap::getNode@14 (line 569)

  0x000000011842b6c4: dec    %edi
  0x000000011842b6c6: and    %rdx,%rdi
  0x000000011842b6c9: movslq %edi,%rbx
  0x000000011842b6cc: cmp    0xc(%rsi),%edi
  0x000000011842b6cf: jae    0x000000011842be33
  0x000000011842b6d5: mov    0x10(%rsi,%rbx,4),%edi
  0x000000011842b6d9: shl    $0x3,%rdi          ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 569)

  0x000000011842b6dd: cmp    $0x0,%rdi
  0x000000011842b6e1: movabs $0x1138f1b28,%rsi  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b6eb: movabs $0x148,%rbx
  0x000000011842b6f5: je     0x000000011842b705
  0x000000011842b6fb: movabs $0x158,%rbx
  0x000000011842b705: mov    (%rsi,%rbx,1),%rax
  0x000000011842b709: lea    0x1(%rax),%rax
  0x000000011842b70d: mov    %rax,(%rsi,%rbx,1)
  0x000000011842b711: je     0x000000011842bc62  ;*ifnull
                                                ; - java.util.HashMap::getNode@28 (line 569)

  0x000000011842b717: mov    0xc(%rdi),%esi     ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 571)
                                                ; implicit exception: dispatches to 0x000000011842be3c
  0x000000011842b71a: cmp    %edx,%esi
  0x000000011842b71c: movabs $0x1138f1b28,%rsi  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b726: movabs $0x168,%rbx
  0x000000011842b730: jne    0x000000011842b740
  0x000000011842b736: movabs $0x178,%rbx
  0x000000011842b740: mov    (%rsi,%rbx,1),%rax
  0x000000011842b744: lea    0x1(%rax),%rax
  0x000000011842b748: mov    %rax,(%rsi,%rbx,1)
  0x000000011842b74c: jne    0x000000011842b8ba  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@37 (line 571)

  0x000000011842b752: mov    0x10(%rdi),%esi
  0x000000011842b755: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.HashMap::getNode@42 (line 571)

  0x000000011842b759: cmp    %rcx,%rsi
  0x000000011842b75c: movabs $0x1138f1b28,%rbx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b766: movabs $0x188,%rax
  0x000000011842b770: je     0x000000011842b780
  0x000000011842b776: movabs $0x198,%rax
  0x000000011842b780: mov    (%rbx,%rax,1),%r8
  0x000000011842b784: lea    0x1(%r8),%r8
  0x000000011842b788: mov    %r8,(%rbx,%rax,1)
  0x000000011842b78c: je     0x000000011842be08  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@49 (line 571)

  0x000000011842b792: cmp    $0x0,%rcx
  0x000000011842b796: movabs $0x1138f1b28,%rbx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b7a0: movabs $0x1a8,%rax
  0x000000011842b7aa: je     0x000000011842b7ba
  0x000000011842b7b0: movabs $0x1b8,%rax
  0x000000011842b7ba: mov    (%rbx,%rax,1),%r8
  0x000000011842b7be: lea    0x1(%r8),%r8
  0x000000011842b7c2: mov    %r8,(%rbx,%rax,1)
  0x000000011842b7c6: je     0x000000011842b8ba  ;*ifnull
                                                ; - java.util.HashMap::getNode@53 (line 571)

  0x000000011842b7cc: mov    %rdi,0x20(%rsp)
  0x000000011842b7d1: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000011842be41
  0x000000011842b7d4: mov    %rcx,%rbx
  0x000000011842b7d7: movabs $0x1138f1b28,%rax  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b7e1: mov    0x8(%rbx),%ebx
  0x000000011842b7e4: shl    $0x3,%rbx
  0x000000011842b7e8: cmp    0x1d0(%rax),%rbx
  0x000000011842b7ef: jne    0x000000011842b7fe
  0x000000011842b7f1: addq   $0x1,0x1d8(%rax)
  0x000000011842b7f9: jmpq   0x000000011842b864
  0x000000011842b7fe: cmp    0x1e0(%rax),%rbx
  0x000000011842b805: jne    0x000000011842b814
  0x000000011842b807: addq   $0x1,0x1e8(%rax)
  0x000000011842b80f: jmpq   0x000000011842b864
  0x000000011842b814: cmpq   $0x0,0x1d0(%rax)
  0x000000011842b81f: jne    0x000000011842b838
  0x000000011842b821: mov    %rbx,0x1d0(%rax)
  0x000000011842b828: movq   $0x1,0x1d8(%rax)
  0x000000011842b833: jmpq   0x000000011842b864
  0x000000011842b838: cmpq   $0x0,0x1e0(%rax)
  0x000000011842b843: jne    0x000000011842b85c
  0x000000011842b845: mov    %rbx,0x1e0(%rax)
  0x000000011842b84c: movq   $0x1,0x1e8(%rax)
  0x000000011842b857: jmpq   0x000000011842b864
  0x000000011842b85c: addq   $0x1,0x1c8(%rax)
  0x000000011842b864: mov    %rsi,%rdx
  0x000000011842b867: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)

  0x000000011842b86a: nop
  0x000000011842b86b: nop
  0x000000011842b86c: nop
  0x000000011842b86d: movabs $0xffffffffffffffff,%rax
  0x000000011842b877: callq  0x00000001183622e0  ; OopMap{[48]=Oop [32]=Oop off=668}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)
                                                ;   {virtual_call}
  0x000000011842b87c: cmp    $0x0,%eax
  0x000000011842b87f: movabs $0x1138f1b28,%rdx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b889: movabs $0x1f8,%rsi
  0x000000011842b893: je     0x000000011842b8a3
  0x000000011842b899: movabs $0x208,%rsi
  0x000000011842b8a3: mov    (%rdx,%rsi,1),%rdi
  0x000000011842b8a7: lea    0x1(%rdi),%rdi
  0x000000011842b8ab: mov    %rdi,(%rdx,%rsi,1)
  0x000000011842b8af: mov    0x20(%rsp),%rdi
  0x000000011842b8b4: jne    0x000000011842be08  ;*ifeq
                                                ; - java.util.HashMap::getNode@62 (line 572)

  0x000000011842b8ba: mov    0x18(%rdi),%edx
  0x000000011842b8bd: shl    $0x3,%rdx          ;*getfield next
                                                ; - java.util.HashMap::getNode@70 (line 574)

  0x000000011842b8c1: cmp    $0x0,%rdx
  0x000000011842b8c5: movabs $0x1138f1b28,%rsi  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b8cf: movabs $0x218,%rbx
  0x000000011842b8d9: je     0x000000011842b8e9
  0x000000011842b8df: movabs $0x228,%rbx
  0x000000011842b8e9: mov    (%rsi,%rbx,1),%rax
  0x000000011842b8ed: lea    0x1(%rax),%rax
  0x000000011842b8f1: mov    %rax,(%rsi,%rbx,1)
  0x000000011842b8f5: je     0x000000011842bc62  ;*ifnull
                                                ; - java.util.HashMap::getNode@76 (line 574)

  0x000000011842b8fb: cmp    $0x0,%rdi
  0x000000011842b8ff: jne    0x000000011842b91a
  0x000000011842b901: movabs $0x1138f1b28,%rax  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b90b: orl    $0x100,0x230(%rax)
  0x000000011842b915: jmpq   0x000000011842b9da
  0x000000011842b91a: movabs $0x7c0032c10,%rcx  ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000011842b924: mov    0x8(%rdi),%ebx
  0x000000011842b927: shl    $0x3,%rbx
  0x000000011842b92b: cmp    %rbx,%rcx
  0x000000011842b92e: jne    0x000000011842b9be
  0x000000011842b934: movabs $0x1138f1b28,%rax  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b93e: mov    0x8(%rdi),%ecx
  0x000000011842b941: shl    $0x3,%rcx
  0x000000011842b945: cmp    0x240(%rax),%rcx
  0x000000011842b94c: jne    0x000000011842b95b
  0x000000011842b94e: addq   $0x1,0x248(%rax)
  0x000000011842b956: jmpq   0x000000011842b9df
  0x000000011842b95b: cmp    0x250(%rax),%rcx
  0x000000011842b962: jne    0x000000011842b971
  0x000000011842b964: addq   $0x1,0x258(%rax)
  0x000000011842b96c: jmpq   0x000000011842b9df
  0x000000011842b971: cmpq   $0x0,0x240(%rax)
  0x000000011842b97c: jne    0x000000011842b995
  0x000000011842b97e: mov    %rcx,0x240(%rax)
  0x000000011842b985: movq   $0x1,0x248(%rax)
  0x000000011842b990: jmpq   0x000000011842b9df
  0x000000011842b995: cmpq   $0x0,0x250(%rax)
  0x000000011842b9a0: jne    0x000000011842b9b9
  0x000000011842b9a2: mov    %rcx,0x250(%rax)
  0x000000011842b9a9: movq   $0x1,0x258(%rax)
  0x000000011842b9b4: jmpq   0x000000011842b9df
  0x000000011842b9b9: jmpq   0x000000011842b9df
  0x000000011842b9be: movabs $0x1138f1b28,%rax  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b9c8: subq   $0x1,0x238(%rax)
  0x000000011842b9d0: jmpq   0x000000011842b9da
  0x000000011842b9d5: jmpq   0x000000011842b9df
  0x000000011842b9da: xor    %rsi,%rsi
  0x000000011842b9dd: jmp    0x000000011842b9e9
  0x000000011842b9df: movabs $0x1,%rsi          ;*instanceof
                                                ; - java.util.HashMap::getNode@81 (line 575)

  0x000000011842b9e9: cmp    $0x0,%esi
  0x000000011842b9ec: movabs $0x1138f1b28,%rsi  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842b9f6: movabs $0x268,%rbx
  0x000000011842ba00: je     0x000000011842ba10
  0x000000011842ba06: movabs $0x278,%rbx
  0x000000011842ba10: mov    (%rsi,%rbx,1),%rax
  0x000000011842ba14: lea    0x1(%rax),%rax
  0x000000011842ba18: mov    %rax,(%rsi,%rbx,1)
  0x000000011842ba1c: jne    0x000000011842bc78  ;*ifeq
                                                ; - java.util.HashMap::getNode@84 (line 575)

  0x000000011842ba22: nopw   0x0(%rax,%rax,1)
  0x000000011842ba28: mov    0x30(%rsp),%rcx
  0x000000011842ba2d: mov    0x28(%rsp),%edi
  0x000000011842ba31: mov    0xc(%rdx),%esi     ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 578)
                                                ; implicit exception: dispatches to 0x000000011842be46
  0x000000011842ba34: cmp    %edi,%esi
  0x000000011842ba36: movabs $0x1138f1b28,%rsi  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842ba40: movabs $0x2e8,%rbx
  0x000000011842ba4a: jne    0x000000011842ba5a
  0x000000011842ba50: movabs $0x2f8,%rbx
  0x000000011842ba5a: mov    (%rsi,%rbx,1),%rax
  0x000000011842ba5e: lea    0x1(%rax),%rax
  0x000000011842ba62: mov    %rax,(%rsi,%rbx,1)
  0x000000011842ba66: jne    0x000000011842bbd2  ;*if_icmpne
                                                ; - java.util.HashMap::getNode@104 (line 578)

  0x000000011842ba6c: mov    0x10(%rdx),%esi
  0x000000011842ba6f: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.HashMap::getNode@109 (line 578)

  0x000000011842ba73: cmp    %rcx,%rsi
  0x000000011842ba76: movabs $0x1138f1b28,%rbx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842ba80: movabs $0x308,%rax
  0x000000011842ba8a: je     0x000000011842ba9a
  0x000000011842ba90: movabs $0x318,%rax
  0x000000011842ba9a: mov    (%rbx,%rax,1),%r8
  0x000000011842ba9e: lea    0x1(%r8),%r8
  0x000000011842baa2: mov    %r8,(%rbx,%rax,1)
  0x000000011842baa6: je     0x000000011842bc53  ;*if_acmpeq
                                                ; - java.util.HashMap::getNode@116 (line 578)

  0x000000011842baac: cmp    $0x0,%rcx
  0x000000011842bab0: movabs $0x1138f1b28,%rbx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842baba: movabs $0x328,%rax
  0x000000011842bac4: je     0x000000011842bad4
  0x000000011842baca: movabs $0x338,%rax
  0x000000011842bad4: mov    (%rbx,%rax,1),%r8
  0x000000011842bad8: lea    0x1(%r8),%r8
  0x000000011842badc: mov    %r8,(%rbx,%rax,1)
  0x000000011842bae0: je     0x000000011842bbd2  ;*ifnull
                                                ; - java.util.HashMap::getNode@120 (line 578)

  0x000000011842bae6: mov    %rdx,0x38(%rsp)
  0x000000011842baeb: cmp    (%rcx),%rax        ; implicit exception: dispatches to 0x000000011842be4b
  0x000000011842baee: mov    %rcx,%rbx
  0x000000011842baf1: movabs $0x1138f1b28,%rax  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842bafb: mov    0x8(%rbx),%ebx
  0x000000011842bafe: shl    $0x3,%rbx
  0x000000011842bb02: cmp    0x350(%rax),%rbx
  0x000000011842bb09: jne    0x000000011842bb18
  0x000000011842bb0b: addq   $0x1,0x358(%rax)
  0x000000011842bb13: jmpq   0x000000011842bb7e
  0x000000011842bb18: cmp    0x360(%rax),%rbx
  0x000000011842bb1f: jne    0x000000011842bb2e
  0x000000011842bb21: addq   $0x1,0x368(%rax)
  0x000000011842bb29: jmpq   0x000000011842bb7e
  0x000000011842bb2e: cmpq   $0x0,0x350(%rax)
  0x000000011842bb39: jne    0x000000011842bb52
  0x000000011842bb3b: mov    %rbx,0x350(%rax)
  0x000000011842bb42: movq   $0x1,0x358(%rax)
  0x000000011842bb4d: jmpq   0x000000011842bb7e
  0x000000011842bb52: cmpq   $0x0,0x360(%rax)
  0x000000011842bb5d: jne    0x000000011842bb76
  0x000000011842bb5f: mov    %rbx,0x360(%rax)
  0x000000011842bb66: movq   $0x1,0x368(%rax)
  0x000000011842bb71: jmpq   0x000000011842bb7e
  0x000000011842bb76: addq   $0x1,0x348(%rax)
  0x000000011842bb7e: mov    %rsi,%rdx
  0x000000011842bb81: mov    %rcx,%rsi          ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)

  0x000000011842bb84: nop
  0x000000011842bb85: movabs $0xffffffffffffffff,%rax
  0x000000011842bb8f: callq  0x00000001183622e0  ; OopMap{[56]=Oop [48]=Oop off=1460}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)
                                                ;   {virtual_call}
  0x000000011842bb94: cmp    $0x0,%eax
  0x000000011842bb97: movabs $0x1138f1b28,%rax  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842bba1: movabs $0x378,%rdx
  0x000000011842bbab: je     0x000000011842bbbb
  0x000000011842bbb1: movabs $0x388,%rdx
  0x000000011842bbbb: mov    (%rax,%rdx,1),%rcx
  0x000000011842bbbf: lea    0x1(%rcx),%rcx
  0x000000011842bbc3: mov    %rcx,(%rax,%rdx,1)
  0x000000011842bbc7: mov    0x38(%rsp),%rdx
  0x000000011842bbcc: jne    0x000000011842bc53  ;*ifeq
                                                ; - java.util.HashMap::getNode@129 (line 579)

  0x000000011842bbd2: mov    0x18(%rdx),%eax
  0x000000011842bbd5: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.HashMap::getNode@137 (line 581)

  0x000000011842bbd9: movabs $0x1138f1b28,%rdx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842bbe3: mov    0xe0(%rdx),%ecx
  0x000000011842bbe9: add    $0x8,%ecx
  0x000000011842bbec: mov    %ecx,0xe0(%rdx)
  0x000000011842bbf2: movabs $0x1137aaa80,%rdx  ;   {metadata({method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842bbfc: and    $0xfff8,%ecx
  0x000000011842bc02: cmp    $0x0,%ecx
  0x000000011842bc05: je     0x000000011842be50  ; OopMap{[48]=Oop rax=Oop off=1579}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)

  0x000000011842bc0b: test   %eax,-0xb439b11(%rip)        # 0x000000010cff2100
                                                ;   {poll}
  0x000000011842bc11: cmp    $0x0,%rax
  0x000000011842bc15: movabs $0x1138f1b28,%rdx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842bc1f: movabs $0x398,%rcx
  0x000000011842bc29: jne    0x000000011842bc39
  0x000000011842bc2f: movabs $0x3a8,%rcx
  0x000000011842bc39: mov    (%rdx,%rcx,1),%rsi
  0x000000011842bc3d: lea    0x1(%rsi),%rsi
  0x000000011842bc41: mov    %rsi,(%rdx,%rcx,1)
  0x000000011842bc45: je     0x000000011842bc62  ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)

  0x000000011842bc4b: mov    %rax,%rdx
  0x000000011842bc4e: jmpq   0x000000011842ba28  ;*aload
                                                ; - java.util.HashMap::getNode@98 (line 578)

  0x000000011842bc53: mov    %rdx,%rax
  0x000000011842bc56: add    $0x50,%rsp
  0x000000011842bc5a: pop    %rbp
  0x000000011842bc5b: test   %eax,-0xb439b61(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842bc61: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@134 (line 580)

  0x000000011842bc62: movabs $0x0,%rax          ;   {oop(NULL)}
  0x000000011842bc6c: add    $0x50,%rsp
  0x000000011842bc70: pop    %rbp
  0x000000011842bc71: test   %eax,-0xb439b77(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842bc77: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@147 (line 584)

  0x000000011842bc78: mov    0x30(%rsp),%rcx
  0x000000011842bc7d: mov    0x28(%rsp),%edx
  0x000000011842bc81: cmp    $0x0,%rdi
  0x000000011842bc85: jne    0x000000011842bca0
  0x000000011842bc87: movabs $0x1138f1b28,%rbx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842bc91: orl    $0x100,0x280(%rbx)
  0x000000011842bc9b: jmpq   0x000000011842bd60
  0x000000011842bca0: movabs $0x7c0032c10,%rax  ;   {metadata('java/util/HashMap$TreeNode')}
  0x000000011842bcaa: mov    0x8(%rdi),%esi
  0x000000011842bcad: shl    $0x3,%rsi
  0x000000011842bcb1: cmp    %rsi,%rax
  0x000000011842bcb4: jne    0x000000011842bd44
  0x000000011842bcba: movabs $0x1138f1b28,%rbx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842bcc4: mov    0x8(%rdi),%eax
  0x000000011842bcc7: shl    $0x3,%rax
  0x000000011842bccb: cmp    0x290(%rbx),%rax
  0x000000011842bcd2: jne    0x000000011842bce1
  0x000000011842bcd4: addq   $0x1,0x298(%rbx)
  0x000000011842bcdc: jmpq   0x000000011842bd60
  0x000000011842bce1: cmp    0x2a0(%rbx),%rax
  0x000000011842bce8: jne    0x000000011842bcf7
  0x000000011842bcea: addq   $0x1,0x2a8(%rbx)
  0x000000011842bcf2: jmpq   0x000000011842bd60
  0x000000011842bcf7: cmpq   $0x0,0x290(%rbx)
  0x000000011842bd02: jne    0x000000011842bd1b
  0x000000011842bd04: mov    %rax,0x290(%rbx)
  0x000000011842bd0b: movq   $0x1,0x298(%rbx)
  0x000000011842bd16: jmpq   0x000000011842bd60
  0x000000011842bd1b: cmpq   $0x0,0x2a0(%rbx)
  0x000000011842bd26: jne    0x000000011842bd3f
  0x000000011842bd28: mov    %rax,0x2a0(%rbx)
  0x000000011842bd2f: movq   $0x1,0x2a8(%rbx)
  0x000000011842bd3a: jmpq   0x000000011842bd60
  0x000000011842bd3f: jmpq   0x000000011842bd60
  0x000000011842bd44: movabs $0x1138f1b28,%rbx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842bd4e: subq   $0x1,0x288(%rbx)
  0x000000011842bd56: jmpq   0x000000011842be67
  0x000000011842bd5b: jmpq   0x000000011842bd60
  0x000000011842bd60: mov    %rdi,%rsi          ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 576)

  0x000000011842bd63: cmp    (%rsi),%rax        ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ; implicit exception: dispatches to 0x000000011842be70
  0x000000011842bd66: mov    %rsi,%rdi
  0x000000011842bd69: movabs $0x1138f1b28,%rbx  ;   {metadata(method data for {method} {0x00000001137aaa80} 'getNode' '(ILjava/lang/Object;)Ljava/util/HashMap$Node;' in 'java/util/HashMap')}
  0x000000011842bd73: mov    0x8(%rdi),%edi
  0x000000011842bd76: shl    $0x3,%rdi
  0x000000011842bd7a: cmp    0x2c0(%rbx),%rdi
  0x000000011842bd81: jne    0x000000011842bd90
  0x000000011842bd83: addq   $0x1,0x2c8(%rbx)
  0x000000011842bd8b: jmpq   0x000000011842bdf6
  0x000000011842bd90: cmp    0x2d0(%rbx),%rdi
  0x000000011842bd97: jne    0x000000011842bda6
  0x000000011842bd99: addq   $0x1,0x2d8(%rbx)
  0x000000011842bda1: jmpq   0x000000011842bdf6
  0x000000011842bda6: cmpq   $0x0,0x2c0(%rbx)
  0x000000011842bdb1: jne    0x000000011842bdca
  0x000000011842bdb3: mov    %rdi,0x2c0(%rbx)
  0x000000011842bdba: movq   $0x1,0x2c8(%rbx)
  0x000000011842bdc5: jmpq   0x000000011842bdf6
  0x000000011842bdca: cmpq   $0x0,0x2d0(%rbx)
  0x000000011842bdd5: jne    0x000000011842bdee
  0x000000011842bdd7: mov    %rdi,0x2d0(%rbx)
  0x000000011842bdde: movq   $0x1,0x2d8(%rbx)
  0x000000011842bde9: jmpq   0x000000011842bdf6
  0x000000011842bdee: addq   $0x1,0x2b8(%rbx)
  0x000000011842bdf6: nop
  0x000000011842bdf7: callq  0x00000001183620a0  ; OopMap{off=2076}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ;   {optimized virtual_call}
  0x000000011842bdfc: add    $0x50,%rsp
  0x000000011842be00: pop    %rbp
  0x000000011842be01: test   %eax,-0xb439d07(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842be07: retq                      ;*areturn
                                                ; - java.util.HashMap::getNode@97 (line 576)

  0x000000011842be08: mov    %rdi,%rax
  0x000000011842be0b: add    $0x50,%rsp
  0x000000011842be0f: pop    %rbp
  0x000000011842be10: test   %eax,-0xb439d16(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842be16: retq   
  0x000000011842be17: mov    %rdi,0x8(%rsp)
  0x000000011842be1c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842be24: callq  0x000000011841a2e0  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=2121}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::getNode@-1 (line 569)
                                                ;   {runtime_call}
  0x000000011842be29: jmpq   0x000000011842b647
  0x000000011842be2e: callq  0x0000000118415c80  ; OopMap{rsi=Oop rcx=Oop [48]=Oop off=2131}
                                                ;*arraylength
                                                ; - java.util.HashMap::getNode@10 (line 569)
                                                ;   {runtime_call}
  0x000000011842be33: mov    %rdi,(%rsp)
  0x000000011842be37: callq  0x0000000118388240  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=2140}
                                                ;*aaload
                                                ; - java.util.HashMap::getNode@24 (line 569)
                                                ;   {runtime_call}
  0x000000011842be3c: callq  0x0000000118415c80  ; OopMap{rdi=Oop rcx=Oop [48]=Oop off=2145}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@33 (line 571)
                                                ;   {runtime_call}
  0x000000011842be41: callq  0x0000000118415c80  ; OopMap{rcx=Oop [48]=Oop [32]=Oop rsi=Oop off=2150}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@59 (line 572)
                                                ;   {runtime_call}
  0x000000011842be46: callq  0x0000000118415c80  ; OopMap{rdx=Oop rcx=Oop [48]=Oop off=2155}
                                                ;*getfield hash
                                                ; - java.util.HashMap::getNode@100 (line 578)
                                                ;   {runtime_call}
  0x000000011842be4b: callq  0x0000000118415c80  ; OopMap{rcx=Oop [48]=Oop [56]=Oop rsi=Oop off=2160}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::getNode@126 (line 579)
                                                ;   {runtime_call}
  0x000000011842be50: mov    %rdx,0x8(%rsp)
  0x000000011842be55: movq   $0x8f,(%rsp)
  0x000000011842be5d: callq  0x000000011841a2e0  ; OopMap{[48]=Oop rax=Oop off=2178}
                                                ;*ifnonnull
                                                ; - java.util.HashMap::getNode@143 (line 581)
                                                ;   {runtime_call}
  0x000000011842be62: jmpq   0x000000011842bc0b
  0x000000011842be67: mov    %rdi,(%rsp)
  0x000000011842be6b: callq  0x0000000118417e80  ; OopMap{rcx=Oop [48]=Oop off=2192}
                                                ;*checkcast
                                                ; - java.util.HashMap::getNode@89 (line 576)
                                                ;   {runtime_call}
  0x000000011842be70: callq  0x0000000118415c80  ; OopMap{rcx=Oop [48]=Oop rsi=Oop off=2197}
                                                ;*invokevirtual getTreeNode
                                                ; - java.util.HashMap::getNode@94 (line 576)
                                                ;   {runtime_call}
  0x000000011842be75: nop
  0x000000011842be76: nop
  0x000000011842be77: mov    0x2a8(%r15),%rax
  0x000000011842be7e: movabs $0x0,%r10
  0x000000011842be88: mov    %r10,0x2a8(%r15)
  0x000000011842be8f: movabs $0x0,%r10
  0x000000011842be99: mov    %r10,0x2b0(%r15)
  0x000000011842bea0: add    $0x50,%rsp
  0x000000011842bea4: pop    %rbp
  0x000000011842bea5: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011842beaa: hlt    
  0x000000011842beab: hlt    
  0x000000011842beac: hlt    
  0x000000011842bead: hlt    
  0x000000011842beae: hlt    
  0x000000011842beaf: hlt    
  0x000000011842beb0: hlt    
  0x000000011842beb1: hlt    
  0x000000011842beb2: hlt    
  0x000000011842beb3: hlt    
  0x000000011842beb4: hlt    
  0x000000011842beb5: hlt    
  0x000000011842beb6: hlt    
  0x000000011842beb7: hlt    
  0x000000011842beb8: hlt    
  0x000000011842beb9: hlt    
  0x000000011842beba: hlt    
  0x000000011842bebb: hlt    
  0x000000011842bebc: hlt    
  0x000000011842bebd: hlt    
  0x000000011842bebe: hlt    
  0x000000011842bebf: hlt    
[Stub Code]
  0x000000011842bec0: nop                       ;   {no_reloc}
  0x000000011842bec1: nop
  0x000000011842bec2: nop
  0x000000011842bec3: nop
  0x000000011842bec4: nop
  0x000000011842bec5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842becf: jmpq   0x000000011842becf  ;   {runtime_call}
  0x000000011842bed4: nop
  0x000000011842bed5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842bedf: jmpq   0x000000011842bedf  ;   {runtime_call}
  0x000000011842bee4: nop
  0x000000011842bee5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842beef: jmpq   0x000000011842beef  ;   {runtime_call}
[Exception Handler]
  0x000000011842bef4: callq  0x0000000118417b20  ;   {runtime_call}
  0x000000011842bef9: mov    %rsp,-0x28(%rsp)
  0x000000011842befe: sub    $0x80,%rsp
  0x000000011842bf05: mov    %rax,0x78(%rsp)
  0x000000011842bf0a: mov    %rcx,0x70(%rsp)
  0x000000011842bf0f: mov    %rdx,0x68(%rsp)
  0x000000011842bf14: mov    %rbx,0x60(%rsp)
  0x000000011842bf19: mov    %rbp,0x50(%rsp)
  0x000000011842bf1e: mov    %rsi,0x48(%rsp)
  0x000000011842bf23: mov    %rdi,0x40(%rsp)
  0x000000011842bf28: mov    %r8,0x38(%rsp)
  0x000000011842bf2d: mov    %r9,0x30(%rsp)
  0x000000011842bf32: mov    %r10,0x28(%rsp)
  0x000000011842bf37: mov    %r11,0x20(%rsp)
  0x000000011842bf3c: mov    %r12,0x18(%rsp)
  0x000000011842bf41: mov    %r13,0x10(%rsp)
  0x000000011842bf46: mov    %r14,0x8(%rsp)
  0x000000011842bf4b: mov    %r15,(%rsp)
  0x000000011842bf4f: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011842bf59: movabs $0x11842bef9,%rsi  ;   {internal_word}
  0x000000011842bf63: mov    %rsp,%rdx
  0x000000011842bf66: and    $0xfffffffffffffff0,%rsp
  0x000000011842bf6a: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011842bf6f: hlt    
[Deopt Handler Code]
  0x000000011842bf70: movabs $0x11842bf70,%r10  ;   {section_word}
  0x000000011842bf7a: push   %r10
  0x000000011842bf7c: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011842bf81: hlt    
  0x000000011842bf82: hlt    
  0x000000011842bf83: hlt    
  0x000000011842bf84: hlt    
  0x000000011842bf85: hlt    
  0x000000011842bf86: hlt    
  0x000000011842bf87: hlt    
Decoding compiled method 0x000000011842dad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x000000011842dca0: mov    0x8(%rsi),%r10d
  0x000000011842dca4: shl    $0x3,%r10
  0x000000011842dca8: cmp    %rax,%r10
  0x000000011842dcab: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011842dcb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011842dcbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011842dcc0: mov    %eax,-0x14000(%rsp)
  0x000000011842dcc7: push   %rbp
  0x000000011842dcc8: sub    $0x60,%rsp
  0x000000011842dccc: movabs $0x1138eb0d8,%rdi  ;   {metadata(method data for {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842dcd6: mov    0xdc(%rdi),%ebx
  0x000000011842dcdc: add    $0x8,%ebx
  0x000000011842dcdf: mov    %ebx,0xdc(%rdi)
  0x000000011842dce5: movabs $0x1136c41a0,%rdi  ;   {metadata({method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842dcef: and    $0x1ff8,%ebx
  0x000000011842dcf5: cmp    $0x0,%ebx
  0x000000011842dcf8: je     0x000000011842dfc6  ;*aload_0
                                                ; - java.lang.String::<init>@0 (line 190)

  0x000000011842dcfe: mov    %rsi,%rdi
  0x000000011842dd01: movabs $0x1138eb0d8,%rbx  ;   {metadata(method data for {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842dd0b: addq   $0x1,0x108(%rbx)
  0x000000011842dd13: movabs $0x1138376d8,%rdi  ;   {metadata(method data for {method} {0x00000001136c1480} '<init>' '()V' in 'java/lang/Object')}
  0x000000011842dd1d: mov    0xdc(%rdi),%ebx
  0x000000011842dd23: add    $0x8,%ebx
  0x000000011842dd26: mov    %ebx,0xdc(%rdi)
  0x000000011842dd2c: movabs $0x1136c1480,%rdi  ;   {metadata({method} {0x00000001136c1480} '<init>' '()V' in 'java/lang/Object')}
  0x000000011842dd36: and    $0x7ffff8,%ebx
  0x000000011842dd3c: cmp    $0x0,%ebx
  0x000000011842dd3f: je     0x000000011842dfdd
  0x000000011842dd45: cmp    $0x0,%ecx
  0x000000011842dd48: movabs $0x1138eb0d8,%rdi  ;   {metadata(method data for {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842dd52: movabs $0x118,%rbx
  0x000000011842dd5c: jge    0x000000011842dd6c
  0x000000011842dd62: movabs $0x128,%rbx
  0x000000011842dd6c: mov    (%rdi,%rbx,1),%rax
  0x000000011842dd70: lea    0x1(%rax),%rax
  0x000000011842dd74: mov    %rax,(%rdi,%rbx,1)
  0x000000011842dd78: jl     0x000000011842df86  ;*ifge
                                                ; - java.lang.String::<init>@5 (line 191)

  0x000000011842dd7e: cmp    $0x0,%r8d
  0x000000011842dd82: movabs $0x1138eb0d8,%rdi  ;   {metadata(method data for {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842dd8c: movabs $0x148,%rbx
  0x000000011842dd96: jg     0x000000011842dda6
  0x000000011842dd9c: movabs $0x158,%rbx
  0x000000011842dda6: mov    (%rdi,%rbx,1),%rax
  0x000000011842ddaa: lea    0x1(%rax),%rax
  0x000000011842ddae: mov    %rax,(%rdi,%rbx,1)
  0x000000011842ddb2: jg     0x000000011842de2d  ;*ifgt
                                                ; - java.lang.String::<init>@18 (line 194)

  0x000000011842ddb8: cmp    $0x0,%r8d
  0x000000011842ddbc: movabs $0x1138eb0d8,%rdi  ;   {metadata(method data for {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842ddc6: movabs $0x168,%rbx
  0x000000011842ddd0: jge    0x000000011842dde0
  0x000000011842ddd6: movabs $0x178,%rbx
  0x000000011842dde0: mov    (%rdi,%rbx,1),%rax
  0x000000011842dde4: lea    0x1(%rax),%rax
  0x000000011842dde8: mov    %rax,(%rdi,%rbx,1)
  0x000000011842ddec: jl     0x000000011842df46  ;*ifge
                                                ; - java.lang.String::<init>@22 (line 195)

  0x000000011842ddf2: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ; implicit exception: dispatches to 0x000000011842dff4
  0x000000011842ddf5: cmp    %edi,%ecx
  0x000000011842ddf7: movabs $0x1138eb0d8,%rdi  ;   {metadata(method data for {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842de01: movabs $0x198,%rbx
  0x000000011842de0b: jg     0x000000011842de1b
  0x000000011842de11: movabs $0x1a8,%rbx
  0x000000011842de1b: mov    (%rdi,%rbx,1),%rax
  0x000000011842de1f: lea    0x1(%rax),%rax
  0x000000011842de23: mov    %rax,(%rdi,%rbx,1)
  0x000000011842de27: jle    0x000000011842dec2  ;*if_icmpgt
                                                ; - java.lang.String::<init>@37 (line 198)

  0x000000011842de2d: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ; implicit exception: dispatches to 0x000000011842dff9
  0x000000011842de30: sub    %r8d,%edi
  0x000000011842de33: cmp    %edi,%ecx
  0x000000011842de35: movabs $0x1138eb0d8,%rdi  ;   {metadata(method data for {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842de3f: movabs $0x1b8,%rbx
  0x000000011842de49: jle    0x000000011842de59
  0x000000011842de4f: movabs $0x1c8,%rbx
  0x000000011842de59: mov    (%rdi,%rbx,1),%rax
  0x000000011842de5d: lea    0x1(%rax),%rax
  0x000000011842de61: mov    %rax,(%rdi,%rbx,1)
  0x000000011842de65: jg     0x000000011842defc  ;*if_icmple
                                                ; - java.lang.String::<init>@55 (line 204)

  0x000000011842de6b: mov    %rsi,0x38(%rsp)
  0x000000011842de70: movabs $0x1138eb0d8,%rdi  ;   {metadata(method data for {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842de7a: addq   $0x1,0x1e8(%rdi)
  0x000000011842de82: add    %ecx,%r8d
  0x000000011842de85: mov    %rdx,%rsi
  0x000000011842de88: mov    %rcx,%rdx
  0x000000011842de8b: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)

  0x000000011842de8e: nop
  0x000000011842de8f: callq  0x0000000118362520  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)
                                                ;   {static_call}
  0x000000011842de94: mov    0x38(%rsp),%rsi
  0x000000011842de99: mov    %rax,%r10
  0x000000011842de9c: shr    $0x3,%r10
  0x000000011842dea0: mov    %r10d,0xc(%rsi)
  0x000000011842dea4: shr    $0x9,%rsi
  0x000000011842dea8: movabs $0x10b1ed000,%rdx
  0x000000011842deb2: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@78 (line 207)

  0x000000011842deb6: add    $0x60,%rsp
  0x000000011842deba: pop    %rbp
  0x000000011842debb: test   %eax,-0xb43bdc1(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842dec1: retq                      ;*return
                                                ; - java.lang.String::<init>@81 (line 208)

  0x000000011842dec2: movabs $0x79558a670,%rdx  ;   {oop("")}
  0x000000011842decc: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x000000011842dffe
  0x000000011842decf: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)

  0x000000011842ded3: mov    %rdx,%r10
  0x000000011842ded6: shr    $0x3,%r10
  0x000000011842deda: mov    %r10d,0xc(%rsi)
  0x000000011842dede: shr    $0x9,%rsi
  0x000000011842dee2: movabs $0x10b1ed000,%rdx
  0x000000011842deec: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@46 (line 199)

  0x000000011842def0: add    $0x60,%rsp
  0x000000011842def4: pop    %rbp
  0x000000011842def5: test   %eax,-0xb43bdfb(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842defb: retq                      ;*return
                                                ; - java.lang.String::<init>@49 (line 200)

  0x000000011842defc: nopl   0x0(%rax)
  0x000000011842df00: jmpq   0x000000011842e012  ;   {no_reloc}
  0x000000011842df05: add    %al,(%rax)
  0x000000011842df07: add    %al,(%rax)
  0x000000011842df09: add    %ch,%cl
  0x000000011842df0b: or     $0x48000001,%eax   ;*new  ; - java.lang.String::<init>@58 (line 205)

  0x000000011842df10: mov    %eax,%edx
  0x000000011842df12: movabs $0x1138eb0d8,%rsi  ;   {metadata(method data for {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842df1c: addq   $0x1,0x1d8(%rsi)
  0x000000011842df24: add    %ecx,%r8d
  0x000000011842df27: mov    %r8,%rdx
  0x000000011842df2a: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)

  0x000000011842df2d: mov    %rax,0x40(%rsp)
  0x000000011842df32: nop
  0x000000011842df33: nop
  0x000000011842df34: nop
  0x000000011842df35: nop
  0x000000011842df36: nop
  0x000000011842df37: callq  0x00000001183620a0  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)
                                                ;   {optimized virtual_call}
  0x000000011842df3c: mov    0x40(%rsp),%rax
  0x000000011842df41: jmpq   0x000000011842e0a0  ;*athrow
                                                ; - java.lang.String::<init>@68 (line 205)

  0x000000011842df46: xchg   %ax,%ax
  0x000000011842df48: jmpq   0x000000011842e038  ;   {no_reloc}
  0x000000011842df4d: add    %al,(%rax)
  0x000000011842df4f: add    %al,(%rax)
  0x000000011842df51: add    %ch,%cl
  0x000000011842df53: jmp    0x000000011842df55
  0x000000011842df55: add    %al,(%rax)         ;*new  ; - java.lang.String::<init>@25 (line 196)

  0x000000011842df57: mov    %rax,%rdx
  0x000000011842df5a: movabs $0x1138eb0d8,%rsi  ;   {metadata(method data for {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842df64: addq   $0x1,0x188(%rsi)
  0x000000011842df6c: mov    %r8,%rdx
  0x000000011842df6f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)

  0x000000011842df72: mov    %rax,0x48(%rsp)
  0x000000011842df77: callq  0x00000001183620a0  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)
                                                ;   {optimized virtual_call}
  0x000000011842df7c: mov    0x48(%rsp),%rax
  0x000000011842df81: jmpq   0x000000011842e0a0  ;*athrow
                                                ; - java.lang.String::<init>@33 (line 196)

  0x000000011842df86: xchg   %ax,%ax
  0x000000011842df88: jmpq   0x000000011842e05e  ;   {no_reloc}
  0x000000011842df8d: add    %al,(%rax)
  0x000000011842df8f: add    %al,(%rax)
  0x000000011842df91: add    %ch,%cl
  0x000000011842df93: roll   (%rax)
  0x000000011842df95: add    %al,(%rax)         ;*new  ; - java.lang.String::<init>@8 (line 192)

  0x000000011842df97: mov    %rax,%rdx
  0x000000011842df9a: movabs $0x1138eb0d8,%rsi  ;   {metadata(method data for {method} {0x00000001136c41a0} '<init>' '([CII)V' in 'java/lang/String')}
  0x000000011842dfa4: addq   $0x1,0x138(%rsi)
  0x000000011842dfac: mov    %rcx,%rdx
  0x000000011842dfaf: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)

  0x000000011842dfb2: mov    %rax,0x50(%rsp)
  0x000000011842dfb7: callq  0x00000001183620a0  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)
                                                ;   {optimized virtual_call}
  0x000000011842dfbc: mov    0x50(%rsp),%rax
  0x000000011842dfc1: jmpq   0x000000011842e0a0
  0x000000011842dfc6: mov    %rdi,0x8(%rsp)
  0x000000011842dfcb: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842dfd3: callq  0x000000011841a2e0  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 190)
                                                ;   {runtime_call}
  0x000000011842dfd8: jmpq   0x000000011842dcfe
  0x000000011842dfdd: mov    %rdi,0x8(%rsp)
  0x000000011842dfe2: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842dfea: callq  0x000000011841a2e0  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.String::<init>@1 (line 190)
                                                ;   {runtime_call}
  0x000000011842dfef: jmpq   0x000000011842dd45
  0x000000011842dff4: callq  0x0000000118415c80  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ;   {runtime_call}
  0x000000011842dff9: callq  0x0000000118415c80  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ;   {runtime_call}
  0x000000011842dffe: callq  0x0000000118415c80  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)
                                                ;   {runtime_call}
  0x000000011842e003: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011842e00d: mov    $0xa050f00,%eax
  0x000000011842e012: callq  0x00000001184192e0  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x000000011842e017: jmpq   0x000000011842df00
  0x000000011842e01c: mov    %rdx,%rdx
  0x000000011842e01f: callq  0x0000000118416120  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x000000011842e024: jmpq   0x000000011842df0f
  0x000000011842e029: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011842e033: mov    $0xa050f00,%eax
  0x000000011842e038: callq  0x00000001184192e0  ; OopMap{off=925}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x000000011842e03d: jmpq   0x000000011842df48
  0x000000011842e042: mov    %rdx,%rdx
  0x000000011842e045: callq  0x0000000118416120  ; OopMap{off=938}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x000000011842e04a: jmpq   0x000000011842df57
  0x000000011842e04f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000011842e059: mov    $0xa050f00,%eax
  0x000000011842e05e: callq  0x00000001184192e0  ; OopMap{off=963}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x000000011842e063: jmpq   0x000000011842df88
  0x000000011842e068: mov    %rdx,%rdx
  0x000000011842e06b: callq  0x0000000118416120  ; OopMap{off=976}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x000000011842e070: jmpq   0x000000011842df97
  0x000000011842e075: nop
  0x000000011842e076: nop
  0x000000011842e077: mov    0x2a8(%r15),%rax
  0x000000011842e07e: movabs $0x0,%r10
  0x000000011842e088: mov    %r10,0x2a8(%r15)
  0x000000011842e08f: movabs $0x0,%r10
  0x000000011842e099: mov    %r10,0x2b0(%r15)
  0x000000011842e0a0: add    $0x60,%rsp
  0x000000011842e0a4: pop    %rbp
  0x000000011842e0a5: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011842e0aa: hlt    
  0x000000011842e0ab: hlt    
  0x000000011842e0ac: hlt    
  0x000000011842e0ad: hlt    
  0x000000011842e0ae: hlt    
  0x000000011842e0af: hlt    
  0x000000011842e0b0: hlt    
  0x000000011842e0b1: hlt    
  0x000000011842e0b2: hlt    
  0x000000011842e0b3: hlt    
  0x000000011842e0b4: hlt    
  0x000000011842e0b5: hlt    
  0x000000011842e0b6: hlt    
  0x000000011842e0b7: hlt    
  0x000000011842e0b8: hlt    
  0x000000011842e0b9: hlt    
  0x000000011842e0ba: hlt    
  0x000000011842e0bb: hlt    
  0x000000011842e0bc: hlt    
  0x000000011842e0bd: hlt    
  0x000000011842e0be: hlt    
  0x000000011842e0bf: hlt    
[Stub Code]
  0x000000011842e0c0: nop                       ;   {no_reloc}
  0x000000011842e0c1: nop
  0x000000011842e0c2: nop
  0x000000011842e0c3: nop
  0x000000011842e0c4: nop
  0x000000011842e0c5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842e0cf: jmpq   0x000000011842e0cf  ;   {runtime_call}
  0x000000011842e0d4: nop
  0x000000011842e0d5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842e0df: jmpq   0x000000011842e0df  ;   {runtime_call}
  0x000000011842e0e4: nop
  0x000000011842e0e5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842e0ef: jmpq   0x000000011842e0ef  ;   {runtime_call}
  0x000000011842e0f4: nop
  0x000000011842e0f5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842e0ff: jmpq   0x000000011842e0ff  ;   {runtime_call}
[Exception Handler]
  0x000000011842e104: callq  0x0000000118417b20  ;   {runtime_call}
  0x000000011842e109: mov    %rsp,-0x28(%rsp)
  0x000000011842e10e: sub    $0x80,%rsp
  0x000000011842e115: mov    %rax,0x78(%rsp)
  0x000000011842e11a: mov    %rcx,0x70(%rsp)
  0x000000011842e11f: mov    %rdx,0x68(%rsp)
  0x000000011842e124: mov    %rbx,0x60(%rsp)
  0x000000011842e129: mov    %rbp,0x50(%rsp)
  0x000000011842e12e: mov    %rsi,0x48(%rsp)
  0x000000011842e133: mov    %rdi,0x40(%rsp)
  0x000000011842e138: mov    %r8,0x38(%rsp)
  0x000000011842e13d: mov    %r9,0x30(%rsp)
  0x000000011842e142: mov    %r10,0x28(%rsp)
  0x000000011842e147: mov    %r11,0x20(%rsp)
  0x000000011842e14c: mov    %r12,0x18(%rsp)
  0x000000011842e151: mov    %r13,0x10(%rsp)
  0x000000011842e156: mov    %r14,0x8(%rsp)
  0x000000011842e15b: mov    %r15,(%rsp)
  0x000000011842e15f: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011842e169: movabs $0x11842e109,%rsi  ;   {internal_word}
  0x000000011842e173: mov    %rsp,%rdx
  0x000000011842e176: and    $0xfffffffffffffff0,%rsp
  0x000000011842e17a: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011842e17f: hlt    
[Deopt Handler Code]
  0x000000011842e180: movabs $0x11842e180,%r10  ;   {section_word}
  0x000000011842e18a: push   %r10
  0x000000011842e18c: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011842e191: hlt    
  0x000000011842e192: hlt    
  0x000000011842e193: hlt    
  0x000000011842e194: hlt    
  0x000000011842e195: hlt    
  0x000000011842e196: hlt    
  0x000000011842e197: hlt    
Decoding compiled method 0x000000011842d310:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001137aa950} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap'
  # this:     rsi:rsi   = 'java/util/HashMap'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  #           [sp+0x70]  (sp of caller)
  0x000000011842d4a0: mov    0x8(%rsi),%r10d
  0x000000011842d4a4: shl    $0x3,%r10
  0x000000011842d4a8: cmp    %rax,%r10
  0x000000011842d4ab: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011842d4b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011842d4bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011842d4c0: mov    %eax,-0x14000(%rsp)
  0x000000011842d4c7: push   %rbp
  0x000000011842d4c8: sub    $0x60,%rsp
  0x000000011842d4cc: movabs $0x1138f7358,%rdi  ;   {metadata(method data for {method} {0x00000001137aa950} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000011842d4d6: mov    0xdc(%rdi),%ebx
  0x000000011842d4dc: add    $0x8,%ebx
  0x000000011842d4df: mov    %ebx,0xdc(%rdi)
  0x000000011842d4e5: movabs $0x1137aa950,%rdi  ;   {metadata({method} {0x00000001137aa950} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000011842d4ef: and    $0x1ff8,%ebx
  0x000000011842d4f5: cmp    $0x0,%ebx
  0x000000011842d4f8: je     0x000000011842d777  ;*aload_0
                                                ; - java.util.HashMap::get@0 (line 557)

  0x000000011842d4fe: movabs $0x1138f7358,%rdi  ;   {metadata(method data for {method} {0x00000001137aa950} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000011842d508: addq   $0x1,0x108(%rdi)
  0x000000011842d510: movabs $0x1138eb460,%rdi  ;   {metadata(method data for {method} {0x00000001137aa0d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000011842d51a: mov    0xdc(%rdi),%ebx
  0x000000011842d520: add    $0x8,%ebx
  0x000000011842d523: mov    %ebx,0xdc(%rdi)
  0x000000011842d529: movabs $0x1137aa0d0,%rdi  ;   {metadata({method} {0x00000001137aa0d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000011842d533: and    $0x7ffff8,%ebx
  0x000000011842d539: cmp    $0x0,%ebx
  0x000000011842d53c: je     0x000000011842d78e
  0x000000011842d542: cmp    $0x0,%rdx
  0x000000011842d546: movabs $0x1138eb460,%rdi  ;   {metadata(method data for {method} {0x00000001137aa0d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000011842d550: movabs $0x108,%rbx
  0x000000011842d55a: jne    0x000000011842d56a
  0x000000011842d560: movabs $0x118,%rbx
  0x000000011842d56a: mov    (%rdi,%rbx,1),%rax
  0x000000011842d56e: lea    0x1(%rax),%rax
  0x000000011842d572: mov    %rax,(%rdi,%rbx,1)
  0x000000011842d576: jne    0x000000011842d5a0  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)

  0x000000011842d57c: movabs $0x1138eb460,%rdi  ;   {metadata(method data for {method} {0x00000001137aa0d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000011842d586: incl   0x128(%rdi)
  0x000000011842d58c: mov    $0x0,%edi
  0x000000011842d591: mov    %rdx,0x48(%rsp)
  0x000000011842d596: mov    %rsi,0x40(%rsp)
  0x000000011842d59b: jmpq   0x000000011842d660  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)

  0x000000011842d5a0: mov    %rsi,0x40(%rsp)
  0x000000011842d5a5: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x000000011842d7a5
  0x000000011842d5a8: mov    %rdx,%rdi
  0x000000011842d5ab: movabs $0x1138eb460,%rbx  ;   {metadata(method data for {method} {0x00000001137aa0d0} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000011842d5b5: mov    0x8(%rdi),%edi
  0x000000011842d5b8: shl    $0x3,%rdi
  0x000000011842d5bc: cmp    0x148(%rbx),%rdi
  0x000000011842d5c3: jne    0x000000011842d5d2
  0x000000011842d5c5: addq   $0x1,0x150(%rbx)
  0x000000011842d5cd: jmpq   0x000000011842d638
  0x000000011842d5d2: cmp    0x158(%rbx),%rdi
  0x000000011842d5d9: jne    0x000000011842d5e8
  0x000000011842d5db: addq   $0x1,0x160(%rbx)
  0x000000011842d5e3: jmpq   0x000000011842d638
  0x000000011842d5e8: cmpq   $0x0,0x148(%rbx)
  0x000000011842d5f3: jne    0x000000011842d60c
  0x000000011842d5f5: mov    %rdi,0x148(%rbx)
  0x000000011842d5fc: movq   $0x1,0x150(%rbx)
  0x000000011842d607: jmpq   0x000000011842d638
  0x000000011842d60c: cmpq   $0x0,0x158(%rbx)
  0x000000011842d617: jne    0x000000011842d630
  0x000000011842d619: mov    %rdi,0x158(%rbx)
  0x000000011842d620: movq   $0x1,0x160(%rbx)
  0x000000011842d62b: jmpq   0x000000011842d638
  0x000000011842d630: addq   $0x1,0x140(%rbx)
  0x000000011842d638: mov    %rdx,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)

  0x000000011842d63b: mov    %rdx,0x48(%rsp)
  0x000000011842d640: nop
  0x000000011842d641: nop
  0x000000011842d642: nop
  0x000000011842d643: nop
  0x000000011842d644: nop
  0x000000011842d645: movabs $0xffffffffffffffff,%rax
  0x000000011842d64f: callq  0x00000001183622e0  ; OopMap{[64]=Oop [72]=Oop off=436}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)
                                                ;   {virtual_call}
  0x000000011842d654: mov    %rax,%rdx
  0x000000011842d657: shr    $0x10,%edx
  0x000000011842d65a: xor    %rax,%rdx
  0x000000011842d65d: mov    %rdx,%rdi          ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)

  0x000000011842d660: mov    0x48(%rsp),%rcx
  0x000000011842d665: mov    0x40(%rsp),%rsi
  0x000000011842d66a: mov    %rsi,%rdx
  0x000000011842d66d: movabs $0x1138f7358,%rbx  ;   {metadata(method data for {method} {0x00000001137aa950} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000011842d677: mov    0x8(%rdx),%edx
  0x000000011842d67a: shl    $0x3,%rdx
  0x000000011842d67e: cmp    0x120(%rbx),%rdx
  0x000000011842d685: jne    0x000000011842d694
  0x000000011842d687: addq   $0x1,0x128(%rbx)
  0x000000011842d68f: jmpq   0x000000011842d6fa
  0x000000011842d694: cmp    0x130(%rbx),%rdx
  0x000000011842d69b: jne    0x000000011842d6aa
  0x000000011842d69d: addq   $0x1,0x138(%rbx)
  0x000000011842d6a5: jmpq   0x000000011842d6fa
  0x000000011842d6aa: cmpq   $0x0,0x120(%rbx)
  0x000000011842d6b5: jne    0x000000011842d6ce
  0x000000011842d6b7: mov    %rdx,0x120(%rbx)
  0x000000011842d6be: movq   $0x1,0x128(%rbx)
  0x000000011842d6c9: jmpq   0x000000011842d6fa
  0x000000011842d6ce: cmpq   $0x0,0x130(%rbx)
  0x000000011842d6d9: jne    0x000000011842d6f2
  0x000000011842d6db: mov    %rdx,0x130(%rbx)
  0x000000011842d6e2: movq   $0x1,0x138(%rbx)
  0x000000011842d6ed: jmpq   0x000000011842d6fa
  0x000000011842d6f2: addq   $0x1,0x118(%rbx)
  0x000000011842d6fa: mov    %rdi,%rdx          ;*invokevirtual getNode
                                                ; - java.util.HashMap::get@6 (line 557)

  0x000000011842d6fd: nop
  0x000000011842d6fe: nop
  0x000000011842d6ff: callq  0x00000001183620a0  ; OopMap{off=612}
                                                ;*invokevirtual getNode
                                                ; - java.util.HashMap::get@6 (line 557)
                                                ;   {optimized virtual_call}
  0x000000011842d704: cmp    $0x0,%rax
  0x000000011842d708: movabs $0x1138f7358,%rsi  ;   {metadata(method data for {method} {0x00000001137aa950} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000011842d712: movabs $0x148,%rdi
  0x000000011842d71c: jne    0x000000011842d72c
  0x000000011842d722: movabs $0x158,%rdi
  0x000000011842d72c: mov    (%rsi,%rdi,1),%rbx
  0x000000011842d730: lea    0x1(%rbx),%rbx
  0x000000011842d734: mov    %rbx,(%rsi,%rdi,1)
  0x000000011842d738: jne    0x000000011842d764  ;*ifnonnull
                                                ; - java.util.HashMap::get@11 (line 557)

  0x000000011842d73e: movabs $0x1138f7358,%rax  ;   {metadata(method data for {method} {0x00000001137aa950} 'get' '(Ljava/lang/Object;)Ljava/lang/Object;' in 'java/util/HashMap')}
  0x000000011842d748: incl   0x168(%rax)
  0x000000011842d74e: movabs $0x0,%rax          ;*goto
                                                ; - java.util.HashMap::get@15 (line 557)
                                                ;   {oop(NULL)}
  0x000000011842d758: add    $0x60,%rsp
  0x000000011842d75c: pop    %rbp
  0x000000011842d75d: test   %eax,-0xb43b663(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842d763: retq   
  0x000000011842d764: mov    0x14(%rax),%eax    ; implicit exception: dispatches to 0x000000011842d7aa
  0x000000011842d767: shl    $0x3,%rax          ;*getfield value
                                                ; - java.util.HashMap::get@19 (line 557)

  0x000000011842d76b: add    $0x60,%rsp
  0x000000011842d76f: pop    %rbp
  0x000000011842d770: test   %eax,-0xb43b676(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842d776: retq   
  0x000000011842d777: mov    %rdi,0x8(%rsp)
  0x000000011842d77c: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842d784: callq  0x000000011841a2e0  ; OopMap{rsi=Oop rdx=Oop off=745}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::get@-1 (line 557)
                                                ;   {runtime_call}
  0x000000011842d789: jmpq   0x000000011842d4fe
  0x000000011842d78e: mov    %rdi,0x8(%rsp)
  0x000000011842d793: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842d79b: callq  0x000000011841a2e0  ; OopMap{rsi=Oop rdx=Oop off=768}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)
                                                ;   {runtime_call}
  0x000000011842d7a0: jmpq   0x000000011842d542
  0x000000011842d7a5: callq  0x0000000118415c80  ; OopMap{rdx=Oop [64]=Oop off=778}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 339)
                                                ; - java.util.HashMap::get@2 (line 557)
                                                ;   {runtime_call}
  0x000000011842d7aa: callq  0x0000000118415c80  ; OopMap{off=783}
                                                ;*getfield value
                                                ; - java.util.HashMap::get@19 (line 557)
                                                ;   {runtime_call}
  0x000000011842d7af: nop
  0x000000011842d7b0: nop
  0x000000011842d7b1: mov    0x2a8(%r15),%rax
  0x000000011842d7b8: movabs $0x0,%r10
  0x000000011842d7c2: mov    %r10,0x2a8(%r15)
  0x000000011842d7c9: movabs $0x0,%r10
  0x000000011842d7d3: mov    %r10,0x2b0(%r15)
  0x000000011842d7da: add    $0x60,%rsp
  0x000000011842d7de: pop    %rbp
  0x000000011842d7df: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011842d7e4: hlt    
  0x000000011842d7e5: hlt    
  0x000000011842d7e6: hlt    
  0x000000011842d7e7: hlt    
  0x000000011842d7e8: hlt    
  0x000000011842d7e9: hlt    
  0x000000011842d7ea: hlt    
  0x000000011842d7eb: hlt    
  0x000000011842d7ec: hlt    
  0x000000011842d7ed: hlt    
  0x000000011842d7ee: hlt    
  0x000000011842d7ef: hlt    
  0x000000011842d7f0: hlt    
  0x000000011842d7f1: hlt    
  0x000000011842d7f2: hlt    
  0x000000011842d7f3: hlt    
  0x000000011842d7f4: hlt    
  0x000000011842d7f5: hlt    
  0x000000011842d7f6: hlt    
  0x000000011842d7f7: hlt    
  0x000000011842d7f8: hlt    
  0x000000011842d7f9: hlt    
  0x000000011842d7fa: hlt    
  0x000000011842d7fb: hlt    
  0x000000011842d7fc: hlt    
  0x000000011842d7fd: hlt    
  0x000000011842d7fe: hlt    
  0x000000011842d7ff: hlt    
[Stub Code]
  0x000000011842d800: nop                       ;   {no_reloc}
  0x000000011842d801: nop
  0x000000011842d802: nop
  0x000000011842d803: nop
  0x000000011842d804: nop
  0x000000011842d805: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842d80f: jmpq   0x000000011842d80f  ;   {runtime_call}
  0x000000011842d814: nop
  0x000000011842d815: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842d81f: jmpq   0x000000011842d81f  ;   {runtime_call}
[Exception Handler]
  0x000000011842d824: callq  0x0000000118417b20  ;   {runtime_call}
  0x000000011842d829: mov    %rsp,-0x28(%rsp)
  0x000000011842d82e: sub    $0x80,%rsp
  0x000000011842d835: mov    %rax,0x78(%rsp)
  0x000000011842d83a: mov    %rcx,0x70(%rsp)
  0x000000011842d83f: mov    %rdx,0x68(%rsp)
  0x000000011842d844: mov    %rbx,0x60(%rsp)
  0x000000011842d849: mov    %rbp,0x50(%rsp)
  0x000000011842d84e: mov    %rsi,0x48(%rsp)
  0x000000011842d853: mov    %rdi,0x40(%rsp)
  0x000000011842d858: mov    %r8,0x38(%rsp)
  0x000000011842d85d: mov    %r9,0x30(%rsp)
  0x000000011842d862: mov    %r10,0x28(%rsp)
  0x000000011842d867: mov    %r11,0x20(%rsp)
  0x000000011842d86c: mov    %r12,0x18(%rsp)
  0x000000011842d871: mov    %r13,0x10(%rsp)
  0x000000011842d876: mov    %r14,0x8(%rsp)
  0x000000011842d87b: mov    %r15,(%rsp)
  0x000000011842d87f: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011842d889: movabs $0x11842d829,%rsi  ;   {internal_word}
  0x000000011842d893: mov    %rsp,%rdx
  0x000000011842d896: and    $0xfffffffffffffff0,%rsp
  0x000000011842d89a: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011842d89f: hlt    
[Deopt Handler Code]
  0x000000011842d8a0: movabs $0x11842d8a0,%r10  ;   {section_word}
  0x000000011842d8aa: push   %r10
  0x000000011842d8ac: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011842d8b1: hlt    
  0x000000011842d8b2: hlt    
  0x000000011842d8b3: hlt    
  0x000000011842d8b4: hlt    
  0x000000011842d8b5: hlt    
  0x000000011842d8b6: hlt    
  0x000000011842d8b7: hlt    
Decoding compiled method 0x000000011842d050:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001136e94d0} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/Reference'
  #           [sp+0x40]  (sp of caller)
  0x000000011842d1a0: mov    0x8(%rsi),%r10d
  0x000000011842d1a4: shl    $0x3,%r10
  0x000000011842d1a8: cmp    %rax,%r10
  0x000000011842d1ab: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011842d1b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011842d1bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011842d1c0: mov    %eax,-0x14000(%rsp)
  0x000000011842d1c7: push   %rbp
  0x000000011842d1c8: sub    $0x30,%rsp
  0x000000011842d1cc: mov    0xc(%rsi),%eax
  0x000000011842d1cf: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x000000011842d1d3: add    $0x30,%rsp
  0x000000011842d1d7: pop    %rbp
  0x000000011842d1d8: test   %eax,-0xb43b0de(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842d1de: retq   
  0x000000011842d1df: nop
  0x000000011842d1e0: nop
  0x000000011842d1e1: mov    0x2a8(%r15),%rax
  0x000000011842d1e8: movabs $0x0,%r10
  0x000000011842d1f2: mov    %r10,0x2a8(%r15)
  0x000000011842d1f9: movabs $0x0,%r10
  0x000000011842d203: mov    %r10,0x2b0(%r15)
  0x000000011842d20a: add    $0x30,%rsp
  0x000000011842d20e: pop    %rbp
  0x000000011842d20f: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011842d214: hlt    
  0x000000011842d215: hlt    
  0x000000011842d216: hlt    
  0x000000011842d217: hlt    
  0x000000011842d218: hlt    
  0x000000011842d219: hlt    
  0x000000011842d21a: hlt    
  0x000000011842d21b: hlt    
  0x000000011842d21c: hlt    
  0x000000011842d21d: hlt    
  0x000000011842d21e: hlt    
  0x000000011842d21f: hlt    
[Exception Handler]
[Stub Code]
  0x000000011842d220: callq  0x0000000118417b20  ;   {no_reloc}
  0x000000011842d225: mov    %rsp,-0x28(%rsp)
  0x000000011842d22a: sub    $0x80,%rsp
  0x000000011842d231: mov    %rax,0x78(%rsp)
  0x000000011842d236: mov    %rcx,0x70(%rsp)
  0x000000011842d23b: mov    %rdx,0x68(%rsp)
  0x000000011842d240: mov    %rbx,0x60(%rsp)
  0x000000011842d245: mov    %rbp,0x50(%rsp)
  0x000000011842d24a: mov    %rsi,0x48(%rsp)
  0x000000011842d24f: mov    %rdi,0x40(%rsp)
  0x000000011842d254: mov    %r8,0x38(%rsp)
  0x000000011842d259: mov    %r9,0x30(%rsp)
  0x000000011842d25e: mov    %r10,0x28(%rsp)
  0x000000011842d263: mov    %r11,0x20(%rsp)
  0x000000011842d268: mov    %r12,0x18(%rsp)
  0x000000011842d26d: mov    %r13,0x10(%rsp)
  0x000000011842d272: mov    %r14,0x8(%rsp)
  0x000000011842d277: mov    %r15,(%rsp)
  0x000000011842d27b: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011842d285: movabs $0x11842d225,%rsi  ;   {internal_word}
  0x000000011842d28f: mov    %rsp,%rdx
  0x000000011842d292: and    $0xfffffffffffffff0,%rsp
  0x000000011842d296: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011842d29b: hlt    
[Deopt Handler Code]
  0x000000011842d29c: movabs $0x11842d29c,%r10  ;   {section_word}
  0x000000011842d2a6: push   %r10
  0x000000011842d2a8: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011842d2ad: hlt    
  0x000000011842d2ae: hlt    
  0x000000011842d2af: hlt    
Decoding compiled method 0x000000011842cc10:
Code:
[Entry Point]
[Constants]
  # {method} {0x00000001136c6098} 'indexOf' '(I)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000011842cd80: mov    0x8(%rsi),%r10d
  0x000000011842cd84: shl    $0x3,%r10
  0x000000011842cd88: cmp    %rax,%r10
  0x000000011842cd8b: jne    0x0000000118361e60  ;   {runtime_call}
  0x000000011842cd91: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000011842cd9c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000011842cda0: mov    %eax,-0x14000(%rsp)
  0x000000011842cda7: push   %rbp
  0x000000011842cda8: sub    $0x30,%rsp
  0x000000011842cdac: movabs $0x1139075d0,%rcx  ;   {metadata(method data for {method} {0x00000001136c6098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000011842cdb6: mov    0xdc(%rcx),%edi
  0x000000011842cdbc: add    $0x8,%edi
  0x000000011842cdbf: mov    %edi,0xdc(%rcx)
  0x000000011842cdc5: movabs $0x1136c6098,%rcx  ;   {metadata({method} {0x00000001136c6098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000011842cdcf: and    $0x1ff8,%edi
  0x000000011842cdd5: cmp    $0x0,%edi
  0x000000011842cdd8: je     0x000000011842ce88  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x000000011842cdde: mov    %rsi,%rcx
  0x000000011842cde1: movabs $0x1139075d0,%rdi  ;   {metadata(method data for {method} {0x00000001136c6098} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000011842cdeb: mov    0x8(%rcx),%ecx
  0x000000011842cdee: shl    $0x3,%rcx
  0x000000011842cdf2: cmp    0x110(%rdi),%rcx
  0x000000011842cdf9: jne    0x000000011842ce08
  0x000000011842cdfb: addq   $0x1,0x118(%rdi)
  0x000000011842ce03: jmpq   0x000000011842ce6e
  0x000000011842ce08: cmp    0x120(%rdi),%rcx
  0x000000011842ce0f: jne    0x000000011842ce1e
  0x000000011842ce11: addq   $0x1,0x128(%rdi)
  0x000000011842ce19: jmpq   0x000000011842ce6e
  0x000000011842ce1e: cmpq   $0x0,0x110(%rdi)
  0x000000011842ce29: jne    0x000000011842ce42
  0x000000011842ce2b: mov    %rcx,0x110(%rdi)
  0x000000011842ce32: movq   $0x1,0x118(%rdi)
  0x000000011842ce3d: jmpq   0x000000011842ce6e
  0x000000011842ce42: cmpq   $0x0,0x120(%rdi)
  0x000000011842ce4d: jne    0x000000011842ce66
  0x000000011842ce4f: mov    %rcx,0x120(%rdi)
  0x000000011842ce56: movq   $0x1,0x128(%rdi)
  0x000000011842ce61: jmpq   0x000000011842ce6e
  0x000000011842ce66: addq   $0x1,0x108(%rdi)
  0x000000011842ce6e: mov    $0x0,%ecx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x000000011842ce73: nop
  0x000000011842ce74: nop
  0x000000011842ce75: nop
  0x000000011842ce76: nop
  0x000000011842ce77: callq  0x00000001183620a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x000000011842ce7c: add    $0x30,%rsp
  0x000000011842ce80: pop    %rbp
  0x000000011842ce81: test   %eax,-0xb43ad87(%rip)        # 0x000000010cff2100
                                                ;   {poll_return}
  0x000000011842ce87: retq   
  0x000000011842ce88: mov    %rcx,0x8(%rsp)
  0x000000011842ce8d: movq   $0xffffffffffffffff,(%rsp)
  0x000000011842ce95: callq  0x000000011841a2e0  ; OopMap{rsi=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x000000011842ce9a: jmpq   0x000000011842cdde
  0x000000011842ce9f: nop
  0x000000011842cea0: nop
  0x000000011842cea1: mov    0x2a8(%r15),%rax
  0x000000011842cea8: movabs $0x0,%r10
  0x000000011842ceb2: mov    %r10,0x2a8(%r15)
  0x000000011842ceb9: movabs $0x0,%r10
  0x000000011842cec3: mov    %r10,0x2b0(%r15)
  0x000000011842ceca: add    $0x30,%rsp
  0x000000011842cece: pop    %rbp
  0x000000011842cecf: jmpq   0x00000001183886e0  ;   {runtime_call}
  0x000000011842ced4: hlt    
  0x000000011842ced5: hlt    
  0x000000011842ced6: hlt    
  0x000000011842ced7: hlt    
  0x000000011842ced8: hlt    
  0x000000011842ced9: hlt    
  0x000000011842ceda: hlt    
  0x000000011842cedb: hlt    
  0x000000011842cedc: hlt    
  0x000000011842cedd: hlt    
  0x000000011842cede: hlt    
  0x000000011842cedf: hlt    
[Stub Code]
  0x000000011842cee0: nop                       ;   {no_reloc}
  0x000000011842cee1: nop
  0x000000011842cee2: nop
  0x000000011842cee3: nop
  0x000000011842cee4: nop
  0x000000011842cee5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000011842ceef: jmpq   0x000000011842ceef  ;   {runtime_call}
[Exception Handler]
  0x000000011842cef4: callq  0x0000000118417b20  ;   {runtime_call}
  0x000000011842cef9: mov    %rsp,-0x28(%rsp)
  0x000000011842cefe: sub    $0x80,%rsp
  0x000000011842cf05: mov    %rax,0x78(%rsp)
  0x000000011842cf0a: mov    %rcx,0x70(%rsp)
  0x000000011842cf0f: mov    %rdx,0x68(%rsp)
  0x000000011842cf14: mov    %rbx,0x60(%rsp)
  0x000000011842cf19: mov    %rbp,0x50(%rsp)
  0x000000011842cf1e: mov    %rsi,0x48(%rsp)
  0x000000011842cf23: mov    %rdi,0x40(%rsp)
  0x000000011842cf28: mov    %r8,0x38(%rsp)
  0x000000011842cf2d: mov    %r9,0x30(%rsp)
  0x000000011842cf32: mov    %r10,0x28(%rsp)
  0x000000011842cf37: mov    %r11,0x20(%rsp)
  0x000000011842cf3c: mov    %r12,0x18(%rsp)
  0x000000011842cf41: mov    %r13,0x10(%rsp)
  0x000000011842cf46: mov    %r14,0x8(%rsp)
  0x000000011842cf4b: mov    %r15,(%rsp)
  0x000000011842cf4f: movabs $0x10dddc71b,%rdi  ;   {external_word}
  0x000000011842cf59: movabs $0x11842cef9,%rsi  ;   {internal_word}
  0x000000011842cf63: mov    %rsp,%rdx
  0x000000011842cf66: and    $0xfffffffffffffff0,%rsp
  0x000000011842cf6a: callq  0x000000010dc05eaa  ;   {runtime_call}
  0x000000011842cf6f: hlt    
[Deopt Handler Code]
  0x000000011842cf70: movabs $0x11842cf70,%r10  ;   {section_word}
  0x000000011842cf7a: push   %r10
  0x000000011842cf7c: jmpq   0x0000000118363500  ;   {runtime_call}
  0x000000011842cf81: hlt    
  0x000000011842cf82: hlt    
  0x000000011842cf83: hlt    
  0x000000011842cf84: hlt    
  0x000000011842cf85: hlt    
  0x000000011842cf86: hlt    
  0x000000011842cf87: hlt    
1
